name: Build, test

on: [push]

jobs:
  build-test-deploy:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: 'Free up disk space'
      run: |
        # Workaround for https://github.com/actions/virtual-environments/issues/709
        df -h
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'php.*'
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf /usr/share/dotnet/
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h

    - name: Set docker image tag
      run: |
        TAG=$(date '+%Y%m%d')-$(git rev-parse --short HEAD)
        echo "DOCKER_TAG=${TAG}" >> $GITHUB_ENV

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ env.DOCKER_TAG }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Build itk-wasm-base
      run: |
        ./src/docker/itk-wasm-base/build.sh --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

    - name: Build itk-wasm-base WASI
      run: |
        ./src/docker/itk-wasm-base/build.sh --with-wasi --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

    - name: Build itk-wasm
      run: |
        ./src/docker/itk-wasm/build.sh --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

    - name: Build itk-wasm WASI
      run: |
        ./src/docker/itk-wasm/build.sh --with-wasi --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache


    - name: Build itk-wasm-vtk
      run: |
        ./src/docker/itk-wasm-vtk/build.sh --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

    - uses: actions/setup-node@v2
      with:
        node-version: '10'

    - name: Install packages
      run: |
        npm ci

    - name: Build
      run: |
        npm run build

    - name: Lint tests
      run: |
        npm run test:lint

    - name: Node tests
      run: |
        npm run test:node

    - name: Browser tests
      run: |
        # Allow writing test/output.html
        sudo chmod 777 test
        # To debug locally, run `./test/run.sh -d`
        ./test/run.sh

    - name: Test building a pipeline
      run: |
        cd test/MedianFilterPipeline
        docker run --rm insighttoolkit/itk-wasm:${{ env.DOCKER_TAG }} > ./itk-wasm
        chmod +x ./itk-wasm
        rm -rf web-build
        ./itk-wasm web-build
        cd -

    - name: Setup ipfs
      uses: ibnesayeed/setup-ipfs@master
      with:
        ipfs_version: ^0.8

    - name: Pin testing data
      if: github.ref == 'refs/heads/master'
      env:
        PINATA_JWT: ${{ secrets.PINATA_JWT }}
      run: |
        mkdir itk-wasm-testing-data
        rsync -v -r --exclude=Objects --exclude='*-hash-stamp' ./build/ExternalData/ ./itk-wasm-testing-data/
        new_cid=$(ipfs add -r -Q --cid-version 1 --raw-leaves itk-wasm-testing-data)

        ipfs pin remote service add pinata https://api.pinata.cloud/psa "$PINATA_JWT"
        if ! ipfs pin remote ls --service=pinata --name=itk-wasm-testing-data | grep $new_cid; then
          ipfs pin remote add --service=pinata --name=itk-wasm-testing-data $new_cid
        else
          echo "CID ${new_cid} already pinned on Pinata."
        fi

    - name: Build and publish docs
      if: github.ref == 'refs/heads/master'
      run: |
        git config --global user.name "GitHub Actions CI"
        git config --global user.email "robot@itk.org"
        npm run doc:publish

    - name: insighttoolkit DockerHub login
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.INSIGHTTOOLKIT_DOCKERHUB_USERNAME }}
        password: ${{ secrets.INSIGHTTOOLKIT_DOCKERHUB_PASSWORD }}

    - name: Push insighttoolkit images to DockerHub
      if: github.ref == 'refs/heads/master'
      run: |
        docker push insighttoolkit/itk-wasm-base:latest
        docker push insighttoolkit/itk-wasm-base:${{ env.DOCKER_TAG }}
        docker push insighttoolkit/itk-wasm:latest
        docker push insighttoolkit/itk-wasm:${{ env.DOCKER_TAG }}

    - name: kitware DockerHub login
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.KITWARE_DOCKERHUB_USERNAME }}
        password: ${{ secrets.KITWARE_DOCKERHUB_PASSWORD }}

    - name: Push kitware images to DockerHub
      if: github.ref == 'refs/heads/master'
      run: |
        docker push kitware/itk-wasm-vtk:latest
        docker push kitware/itk-wasm-vtk:${{ env.DOCKER_TAG }}
