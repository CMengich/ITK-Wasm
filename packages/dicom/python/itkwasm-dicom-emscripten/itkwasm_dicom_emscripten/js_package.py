# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var St=Object.defineProperty;var kt=(A,e)=>{for(var t in e)St(A,t,{get:e[t],enumerable:!0})};var Ft="7.2.3",RA=Ft;var bt={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},R=bt;var Rt={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},W=Rt;function Ut(A,e){let t=null;switch(A){case R.UInt8:{t=new Uint8Array(e);break}case R.Int8:{t=new Int8Array(e);break}case R.UInt16:{t=new Uint16Array(e);break}case R.Int16:{t=new Int16Array(e);break}case R.UInt32:{t=new Uint32Array(e);break}case R.Int32:{t=new Int32Array(e);break}case R.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case R.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case W.Float32:{t=new Float32Array(e);break}case W.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var O=Ut;var Nt={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},ce=Nt;var UA=class{dimension;componentType;pixelType;components;constructor(e=2,t=R.UInt8,r=ce.Scalar,n=1){this.dimension=e,this.componentType=t,this.pixelType=r,this.components=n}},ue=UA;function Tt(A,e,t,r,n){A[r+t*e]=n}var Be=Tt;var NA=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(e=new ue){this.imageType=e;let t=e.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)Be(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},Ce=NA;function Ot(A){if(A.length<1)throw Error("At least one images is required.");let e=A[0];if(e.data===null)throw Error("Image data is null.");let t=new Ce(e.imageType);t.origin=Array.from(e.origin),t.spacing=Array.from(e.spacing);let r=t.imageType.dimension;t.direction=e.direction.slice();let n=r-1;t.size=Array.from(e.size);let i=A.reduce((s,o)=>s+o.size[n],0);t.size[n]=i;let a=t.size.reduce((s,o)=>s*o,1)*t.imageType.components,g=e.data.constructor;t.data=new g(a);let C=t.imageType.components;for(let s=0;s<t.size.length-1;s++)C*=t.size[s];let c=0;if(t.data!=null)for(let s=0;s<A.length;s++)t.data.set(A[s].data,C*c),c+=A[s].size[n];else throw Error("Could not create result image data.");return t}var TA=Ot;var OA=class{fcn;workerQueue;runInfo;constructor(e,t){this.fcn=t,this.workerQueue=new Array(e),this.workerQueue.fill(null),this.runInfo=[]}runTasks(e,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((n,i)=>{r.resolve=n,r.reject=i,r.results=new Array(e.length),r.completedTasks=0,r.addingTasks=!0,e.forEach((a,g)=>{this.addTask(r.index,g,a)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let e=0;e<this.workerQueue.length;e++){let t=this.workerQueue[e];t?.terminate(),this.workerQueue[e]=null}}cancel(e){let t=this.runInfo[e];t!=null&&(t.canceled=!0)}addTask(e,t,r){let n=this.runInfo[e];if(n?.canceled===!0){n.reject("Remaining tasks canceled"),this.clearTask(n.index);return}if(this.workerQueue.length>0){let i=this.workerQueue.pop();n.runningWorkers++,r[r.length-1].webWorker=i,this.fcn(...r).then(({webWorker:a,...g})=>{if(this.workerQueue.push(a),this.runInfo[e]!==null){if(n.runningWorkers--,n.results[t]=g,n.completedTasks++,n.progressCallback!=null&&n.progressCallback(n.completedTasks,n.results.length),n.taskQueue.length>0){let C=n.taskQueue.shift();this.addTask(e,C[0],C[1])}else if(!n.addingTasks&&n.runningWorkers===0){let C=n.results;n.resolve(C),this.clearTask(n.index)}}}).catch(a=>{n.reject(a),this.clearTask(n.index)})}else n.runningWorkers!==0||n.postponed?n.taskQueue.push([t,r]):(n.postponed=!0,setTimeout(()=>{n.postponed=!1,this.addTask(n.index,t,r)},50))}clearTask(e){this.runInfo[e].results=[],this.runInfo[e].taskQueue=[],this.runInfo[e].progressCallback=null,this.runInfo[e].canceled=null,this.runInfo[e].reject=()=>{},this.runInfo[e].resolve=()=>{}}},PA=OA;var Pt={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},E=Pt;var Ee=Symbol("Comlink.proxy"),Lt=Symbol("Comlink.endpoint"),xA=Symbol("Comlink.releaseProxy"),LA=Symbol("Comlink.finalizer"),gA=Symbol("Comlink.thrown"),pe=A=>typeof A=="object"&&A!==null||typeof A=="function",Gt={canHandle:A=>pe(A)&&A[Ee],serialize(A){let{port1:e,port2:t}=new MessageChannel;return me(A,e),[t,[t]]},deserialize(A){return A.start(),JA(A)}},xt={canHandle:A=>pe(A)&&gA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},Qe=new Map([["proxy",Gt],["throw",xt]]);function Jt(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function me(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(n){if(!n||!n.data)return;if(!Jt(t,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}let{id:i,type:a,path:g}=Object.assign({path:[]},n.data),C=(n.data.argumentList||[]).map(M),c;try{let s=g.slice(0,-1).reduce((f,I)=>f[I],A),o=g.reduce((f,I)=>f[I],A);switch(a){case"GET":c=o;break;case"SET":s[g.slice(-1)[0]]=M(n.data.value),c=!0;break;case"APPLY":c=o.apply(s,C);break;case"CONSTRUCT":{let f=new o(...C);c=qt(f)}break;case"ENDPOINT":{let{port1:f,port2:I}=new MessageChannel;me(A,I),c=HA(f,[f])}break;case"RELEASE":c=void 0;break;default:return}}catch(s){c={value:s,[gA]:0}}Promise.resolve(c).catch(s=>({value:s,[gA]:0})).then(s=>{let[o,f]=uA(s);e.postMessage(Object.assign(Object.assign({},o),{id:i}),f),a==="RELEASE"&&(e.removeEventListener("message",r),de(e),LA in A&&typeof A[LA]=="function"&&A[LA]())}).catch(s=>{let[o,f]=uA({value:new TypeError("Unserializable return value"),[gA]:0});e.postMessage(Object.assign(Object.assign({},o),{id:i}),f)})}),e.start&&e.start()}function Ht(A){return A.constructor.name==="MessagePort"}function de(A){Ht(A)&&A.close()}function JA(A,e){return GA(A,[],e)}function IA(A){if(A)throw new Error("Proxy has been released and is not useable")}function he(A){return Y(A,{type:"RELEASE"}).then(()=>{de(A)})}var lA=new WeakMap,cA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(lA.get(A)||0)-1;lA.set(A,e),e===0&&he(A)});function Mt(A,e){let t=(lA.get(e)||0)+1;lA.set(e,t),cA&&cA.register(A,e,A)}function Wt(A){cA&&cA.unregister(A)}function GA(A,e=[],t=function(){}){let r=!1,n=new Proxy(t,{get(i,a){if(IA(r),a===xA)return()=>{Wt(n),he(A),r=!0};if(a==="then"){if(e.length===0)return{then:()=>n};let g=Y(A,{type:"GET",path:e.map(C=>C.toString())}).then(M);return g.then.bind(g)}return GA(A,[...e,a])},set(i,a,g){IA(r);let[C,c]=uA(g);return Y(A,{type:"SET",path:[...e,a].map(s=>s.toString()),value:C},c).then(M)},apply(i,a,g){IA(r);let C=e[e.length-1];if(C===Lt)return Y(A,{type:"ENDPOINT"}).then(M);if(C==="bind")return GA(A,e.slice(0,-1));let[c,s]=fe(g);return Y(A,{type:"APPLY",path:e.map(o=>o.toString()),argumentList:c},s).then(M)},construct(i,a){IA(r);let[g,C]=fe(a);return Y(A,{type:"CONSTRUCT",path:e.map(c=>c.toString()),argumentList:g},C).then(M)}});return Mt(n,A),n}function Yt(A){return Array.prototype.concat.apply([],A)}function fe(A){let e=A.map(uA);return[e.map(t=>t[0]),Yt(e.map(t=>t[1]))]}var ye=new WeakMap;function HA(A,e){return ye.set(A,e),A}function qt(A){return Object.assign(A,{[Ee]:!0})}function uA(A){for(let[e,t]of Qe)if(t.canHandle(A)){let[r,n]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},n]}return[{type:"RAW",value:A},ye.get(A)||[]]}function M(A){switch(A.type){case"HANDLER":return Qe.get(A.name).deserialize(A.value);case"RAW":return A.value}}function Y(A,e,t){return new Promise(r=>{let n=Kt();A.addEventListener("message",function i(a){!a.data||!a.data.id||a.data.id!==n||(A.removeEventListener("message",i),r(a.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:n},e),t)})}function Kt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function X(A,e){return function(){return A.apply(e,arguments)}}var{toString:vt}=Object.prototype,{getPrototypeOf:YA}=Object,CA=(A=>e=>{let t=vt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),P=A=>(A=A.toLowerCase(),e=>CA(e)===A),fA=A=>e=>typeof e===A,{isArray:q}=Array,$=fA("undefined");function jt(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&T(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var ke=P("ArrayBuffer");function _t(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&ke(A.buffer),e}var zt=fA("string"),T=fA("function"),Fe=fA("number"),EA=A=>A!==null&&typeof A=="object",Vt=A=>A===!0||A===!1,BA=A=>{if(CA(A)!=="object")return!1;let e=YA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Zt=P("Date"),Xt=P("File"),$t=P("Blob"),Ar=P("FileList"),er=A=>EA(A)&&T(A.pipe),tr=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||T(A.append)&&((e=CA(A))==="formdata"||e==="object"&&T(A.toString)&&A.toString()==="[object FormData]"))},rr=P("URLSearchParams"),ir=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function AA(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,n;if(typeof A!="object"&&(A=[A]),q(A))for(r=0,n=A.length;r<n;r++)e.call(null,A[r],r,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),a=i.length,g;for(r=0;r<a;r++)g=i[r],e.call(null,A[g],g,A)}}function be(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,n;for(;r-- >0;)if(n=t[r],e===n.toLowerCase())return n;return null}var Re=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Ue=A=>!$(A)&&A!==Re;function WA(){let{caseless:A}=Ue(this)&&this||{},e={},t=(r,n)=>{let i=A&&be(e,n)||n;BA(e[i])&&BA(r)?e[i]=WA(e[i],r):BA(r)?e[i]=WA({},r):q(r)?e[i]=r.slice():e[i]=r};for(let r=0,n=arguments.length;r<n;r++)arguments[r]&&AA(arguments[r],t);return e}var nr=(A,e,t,{allOwnKeys:r}={})=>(AA(e,(n,i)=>{t&&T(n)?A[i]=X(n,t):A[i]=n},{allOwnKeys:r}),A),ar=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),or=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},sr=(A,e,t,r)=>{let n,i,a,g={};if(e=e||{},A==null)return e;do{for(n=Object.getOwnPropertyNames(A),i=n.length;i-- >0;)a=n[i],(!r||r(a,A,e))&&!g[a]&&(e[a]=A[a],g[a]=!0);A=t!==!1&&YA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},Ir=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},gr=A=>{if(!A)return null;if(q(A))return A;let e=A.length;if(!Fe(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},lr=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&YA(Uint8Array)),cr=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),n;for(;(n=r.next())&&!n.done;){let i=n.value;e.call(A,i[0],i[1])}},ur=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},Br=P("HTMLFormElement"),Cr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,n){return r.toUpperCase()+n}),De=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),fr=P("RegExp"),Ne=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};AA(t,(n,i)=>{let a;(a=e(n,i,A))!==!1&&(r[i]=a||n)}),Object.defineProperties(A,r)},Er=A=>{Ne(A,(e,t)=>{if(T(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(T(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},pr=(A,e)=>{let t={},r=n=>{n.forEach(i=>{t[i]=!0})};return q(A)?r(A):r(String(A).split(e)),t},Qr=()=>{},mr=(A,e)=>(A=+A,Number.isFinite(A)?A:e),MA="abcdefghijklmnopqrstuvwxyz",Se="0123456789",Te={DIGIT:Se,ALPHA:MA,ALPHA_DIGIT:MA+MA.toUpperCase()+Se},dr=(A=16,e=Te.ALPHA_DIGIT)=>{let t="",{length:r}=e;for(;A--;)t+=e[Math.random()*r|0];return t};function hr(A){return!!(A&&T(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var yr=A=>{let e=new Array(10),t=(r,n)=>{if(EA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[n]=r;let i=q(r)?[]:{};return AA(r,(a,g)=>{let C=t(a,n+1);!$(C)&&(i[g]=C)}),e[n]=void 0,i}}return r};return t(A,0)},wr=P("AsyncFunction"),Dr=A=>A&&(EA(A)||T(A))&&T(A.then)&&T(A.catch),l={isArray:q,isArrayBuffer:ke,isBuffer:jt,isFormData:tr,isArrayBufferView:_t,isString:zt,isNumber:Fe,isBoolean:Vt,isObject:EA,isPlainObject:BA,isUndefined:$,isDate:Zt,isFile:Xt,isBlob:$t,isRegExp:fr,isFunction:T,isStream:er,isURLSearchParams:rr,isTypedArray:lr,isFileList:Ar,forEach:AA,merge:WA,extend:nr,trim:ir,stripBOM:ar,inherits:or,toFlatObject:sr,kindOf:CA,kindOfTest:P,endsWith:Ir,toArray:gr,forEachEntry:cr,matchAll:ur,isHTMLForm:Br,hasOwnProperty:De,hasOwnProp:De,reduceDescriptors:Ne,freezeMethods:Er,toObjectSet:pr,toCamelCase:Cr,noop:Qr,toFiniteNumber:mr,findKey:be,global:Re,isContextDefined:Ue,ALPHABET:Te,generateString:dr,isSpecCompliantForm:hr,toJSONObject:yr,isAsyncFn:wr,isThenable:Dr};function K(A,e,t,r,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),n&&(this.response=n)}l.inherits(K,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:l.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Oe=K.prototype,Pe={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Pe[A]={value:A}});Object.defineProperties(K,Pe);Object.defineProperty(Oe,"isAxiosError",{value:!0});K.from=(A,e,t,r,n,i)=>{let a=Object.create(Oe);return l.toFlatObject(A,a,function(C){return C!==Error.prototype},g=>g!=="isAxiosError"),K.call(a,A.message,e,t,r,n),a.cause=A,a.name=A.name,i&&Object.assign(a,i),a};var m=K;var pA=null;function qA(A){return l.isPlainObject(A)||l.isArray(A)}function Ge(A){return l.endsWith(A,"[]")?A.slice(0,-2):A}function Le(A,e,t){return A?A.concat(e).map(function(n,i){return n=Ge(n),!t&&i?"["+n+"]":n}).join(t?".":""):e}function Sr(A){return l.isArray(A)&&!A.some(qA)}var kr=l.toFlatObject(l,{},null,function(e){return/^is[A-Z]/.test(e)});function Fr(A,e,t){if(!l.isObject(A))throw new TypeError("target must be an object");e=e||new(pA||FormData),t=l.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(u,p){return!l.isUndefined(p[u])});let r=t.metaTokens,n=t.visitor||s,i=t.dots,a=t.indexes,C=(t.Blob||typeof Blob<"u"&&Blob)&&l.isSpecCompliantForm(e);if(!l.isFunction(n))throw new TypeError("visitor must be a function");function c(B){if(B===null)return"";if(l.isDate(B))return B.toISOString();if(!C&&l.isBlob(B))throw new m("Blob is not supported. Use a Buffer instead.");return l.isArrayBuffer(B)||l.isTypedArray(B)?C&&typeof Blob=="function"?new Blob([B]):Buffer.from(B):B}function s(B,u,p){let Q=B;if(B&&!p&&typeof B=="object"){if(l.endsWith(u,"{}"))u=r?u:u.slice(0,-2),B=JSON.stringify(B);else if(l.isArray(B)&&Sr(B)||(l.isFileList(B)||l.endsWith(u,"[]"))&&(Q=l.toArray(B)))return u=Ge(u),Q.forEach(function(D,Z){!(l.isUndefined(D)||D===null)&&e.append(a===!0?Le([u],Z,i):a===null?u:u+"[]",c(D))}),!1}return qA(B)?!0:(e.append(Le(p,u,i),c(B)),!1)}let o=[],f=Object.assign(kr,{defaultVisitor:s,convertValue:c,isVisitable:qA});function I(B,u){if(!l.isUndefined(B)){if(o.indexOf(B)!==-1)throw Error("Circular reference detected in "+u.join("."));o.push(B),l.forEach(B,function(Q,d){(!(l.isUndefined(Q)||Q===null)&&n.call(e,Q,l.isString(d)?d.trim():d,u,f))===!0&&I(Q,u?u.concat(d):[d])}),o.pop()}}if(!l.isObject(A))throw new TypeError("data must be an object");return I(A),e}var G=Fr;function xe(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function Je(A,e){this._pairs=[],A&&G(A,this,e)}var He=Je.prototype;He.append=function(e,t){this._pairs.push([e,t])};He.toString=function(e){let t=e?function(r){return e.call(this,r,xe)}:xe;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};var QA=Je;function br(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function eA(A,e,t){if(!e)return A;let r=t&&t.encode||br,n=t&&t.serialize,i;if(n?i=n(e,t):i=l.isURLSearchParams(e)?e.toString():new QA(e,t).toString(r),i){let a=A.indexOf("#");a!==-1&&(A=A.slice(0,a)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var KA=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){l.forEach(this.handlers,function(r){r!==null&&e(r)})}},vA=KA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Me=typeof URLSearchParams<"u"?URLSearchParams:QA;var We=typeof FormData<"u"?FormData:null;var Ye=typeof Blob<"u"?Blob:null;var qe={isBrowser:!0,classes:{URLSearchParams:Me,FormData:We,Blob:Ye},protocols:["http","https","file","blob","url","data"]};var jA={};kt(jA,{hasBrowserEnv:()=>Ke,hasStandardBrowserEnv:()=>Rr,hasStandardBrowserWebWorkerEnv:()=>Ur});var Ke=typeof window<"u"&&typeof document<"u",Rr=(A=>Ke&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),Ur=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var U={...jA,...qe};function _A(A,e){return G(A,new U.classes.URLSearchParams,Object.assign({visitor:function(t,r,n,i){return U.isNode&&l.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function Nr(A){return l.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function Tr(A){let e={},t=Object.keys(A),r,n=t.length,i;for(r=0;r<n;r++)i=t[r],e[i]=A[i];return e}function Or(A){function e(t,r,n,i){let a=t[i++];if(a==="__proto__")return!0;let g=Number.isFinite(+a),C=i>=t.length;return a=!a&&l.isArray(n)?n.length:a,C?(l.hasOwnProp(n,a)?n[a]=[n[a],r]:n[a]=r,!g):((!n[a]||!l.isObject(n[a]))&&(n[a]=[]),e(t,r,n[a],i)&&l.isArray(n[a])&&(n[a]=Tr(n[a])),!g)}if(l.isFormData(A)&&l.isFunction(A.entries)){let t={};return l.forEachEntry(A,(r,n)=>{e(Nr(r),n,t,0)}),t}return null}var dA=Or;function Pr(A,e,t){if(l.isString(A))try{return(e||JSON.parse)(A),l.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var zA={transitional:mA,adapter:["xhr","http"],transformRequest:[function(e,t){let r=t.getContentType()||"",n=r.indexOf("application/json")>-1,i=l.isObject(e);if(i&&l.isHTMLForm(e)&&(e=new FormData(e)),l.isFormData(e))return n?JSON.stringify(dA(e)):e;if(l.isArrayBuffer(e)||l.isBuffer(e)||l.isStream(e)||l.isFile(e)||l.isBlob(e))return e;if(l.isArrayBufferView(e))return e.buffer;if(l.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let g;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return _A(e,this.formSerializer).toString();if((g=l.isFileList(e))||r.indexOf("multipart/form-data")>-1){let C=this.env&&this.env.FormData;return G(g?{"files[]":e}:e,C&&new C,this.formSerializer)}}return i||n?(t.setContentType("application/json",!1),Pr(e)):e}],transformResponse:[function(e){let t=this.transitional||zA.transitional,r=t&&t.forcedJSONParsing,n=this.responseType==="json";if(e&&l.isString(e)&&(r&&!this.responseType||n)){let a=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(g){if(a)throw g.name==="SyntaxError"?m.from(g,m.ERR_BAD_RESPONSE,this,null,this.response):g}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:U.classes.FormData,Blob:U.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};l.forEach(["delete","get","head","post","put","patch"],A=>{zA.headers[A]={}});var v=zA;var Lr=l.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),ve=A=>{let e={},t,r,n;return A&&A.split(`
`).forEach(function(a){n=a.indexOf(":"),t=a.substring(0,n).trim().toLowerCase(),r=a.substring(n+1).trim(),!(!t||e[t]&&Lr[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var je=Symbol("internals");function tA(A){return A&&String(A).trim().toLowerCase()}function hA(A){return A===!1||A==null?A:l.isArray(A)?A.map(hA):String(A)}function Gr(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var xr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function VA(A,e,t,r,n){if(l.isFunction(r))return r.call(this,e,t);if(n&&(e=t),!!l.isString(e)){if(l.isString(r))return e.indexOf(r)!==-1;if(l.isRegExp(r))return r.test(e)}}function Jr(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function Hr(A,e){let t=l.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(n,i,a){return this[r].call(this,e,n,i,a)},configurable:!0})})}var j=class{constructor(e){e&&this.set(e)}set(e,t,r){let n=this;function i(g,C,c){let s=tA(C);if(!s)throw new Error("header name must be a non-empty string");let o=l.findKey(n,s);(!o||n[o]===void 0||c===!0||c===void 0&&n[o]!==!1)&&(n[o||C]=hA(g))}let a=(g,C)=>l.forEach(g,(c,s)=>i(c,s,C));return l.isPlainObject(e)||e instanceof this.constructor?a(e,t):l.isString(e)&&(e=e.trim())&&!xr(e)?a(ve(e),t):e!=null&&i(t,e,r),this}get(e,t){if(e=tA(e),e){let r=l.findKey(this,e);if(r){let n=this[r];if(!t)return n;if(t===!0)return Gr(n);if(l.isFunction(t))return t.call(this,n,r);if(l.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=tA(e),e){let r=l.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||VA(this,this[r],r,t)))}return!1}delete(e,t){let r=this,n=!1;function i(a){if(a=tA(a),a){let g=l.findKey(r,a);g&&(!t||VA(r,r[g],g,t))&&(delete r[g],n=!0)}}return l.isArray(e)?e.forEach(i):i(e),n}clear(e){let t=Object.keys(this),r=t.length,n=!1;for(;r--;){let i=t[r];(!e||VA(this,this[i],i,e,!0))&&(delete this[i],n=!0)}return n}normalize(e){let t=this,r={};return l.forEach(this,(n,i)=>{let a=l.findKey(r,i);if(a){t[a]=hA(n),delete t[i];return}let g=e?Jr(i):String(i).trim();g!==i&&delete t[i],t[g]=hA(n),r[g]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return l.forEach(this,(r,n)=>{r!=null&&r!==!1&&(t[n]=e&&l.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(n=>r.set(n)),r}static accessor(e){let r=(this[je]=this[je]={accessors:{}}).accessors,n=this.prototype;function i(a){let g=tA(a);r[g]||(Hr(n,a),r[g]=!0)}return l.isArray(e)?e.forEach(i):i(e),this}};j.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);l.reduceDescriptors(j.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});l.freezeMethods(j);var N=j;function rA(A,e){let t=this||v,r=e||t,n=N.from(r.headers),i=r.data;return l.forEach(A,function(g){i=g.call(t,i,n.normalize(),e?e.status:void 0)}),n.normalize(),i}function iA(A){return!!(A&&A.__CANCEL__)}function _e(A,e,t){m.call(this,A??"canceled",m.ERR_CANCELED,e,t),this.name="CanceledError"}l.inherits(_e,m,{__CANCEL__:!0});var x=_e;function ZA(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new m("Request failed with status code "+t.status,[m.ERR_BAD_REQUEST,m.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var ze=U.hasStandardBrowserEnv?{write(A,e,t,r,n,i){let a=[A+"="+encodeURIComponent(e)];l.isNumber(t)&&a.push("expires="+new Date(t).toGMTString()),l.isString(r)&&a.push("path="+r),l.isString(n)&&a.push("domain="+n),i===!0&&a.push("secure"),document.cookie=a.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function XA(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function $A(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function nA(A,e){return A&&!XA(e)?$A(A,e):e}var Ve=U.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function n(i){let a=i;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=n(window.location.href),function(a){let g=l.isString(a)?n(a):a;return g.protocol===r.protocol&&g.host===r.host}}():function(){return function(){return!0}}();function Ae(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function Mr(A,e){A=A||10;let t=new Array(A),r=new Array(A),n=0,i=0,a;return e=e!==void 0?e:1e3,function(C){let c=Date.now(),s=r[i];a||(a=c),t[n]=C,r[n]=c;let o=i,f=0;for(;o!==n;)f+=t[o++],o=o%A;if(n=(n+1)%A,n===i&&(i=(i+1)%A),c-a<e)return;let I=s&&c-s;return I?Math.round(f*1e3/I):void 0}}var Ze=Mr;function Xe(A,e){let t=0,r=Ze(50,250);return n=>{let i=n.loaded,a=n.lengthComputable?n.total:void 0,g=i-t,C=r(g),c=i<=a;t=i;let s={loaded:i,total:a,progress:a?i/a:void 0,bytes:g,rate:C||void 0,estimated:C&&a&&c?(a-i)/C:void 0,event:n};s[e?"download":"upload"]=!0,A(s)}}var Wr=typeof XMLHttpRequest<"u",$e=Wr&&function(A){return new Promise(function(t,r){let n=A.data,i=N.from(A.headers).normalize(),{responseType:a,withXSRFToken:g}=A,C;function c(){A.cancelToken&&A.cancelToken.unsubscribe(C),A.signal&&A.signal.removeEventListener("abort",C)}let s;if(l.isFormData(n)){if(U.hasStandardBrowserEnv||U.hasStandardBrowserWebWorkerEnv)i.setContentType(!1);else if((s=i.getContentType())!==!1){let[u,...p]=s?s.split(";").map(Q=>Q.trim()).filter(Boolean):[];i.setContentType([u||"multipart/form-data",...p].join("; "))}}let o=new XMLHttpRequest;if(A.auth){let u=A.auth.username||"",p=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(u+":"+p))}let f=nA(A.baseURL,A.url);o.open(A.method.toUpperCase(),eA(f,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function I(){if(!o)return;let u=N.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),Q={data:!a||a==="text"||a==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:u,config:A,request:o};ZA(function(D){t(D),c()},function(D){r(D),c()},Q),o=null}if("onloadend"in o?o.onloadend=I:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(I)},o.onabort=function(){o&&(r(new m("Request aborted",m.ECONNABORTED,A,o)),o=null)},o.onerror=function(){r(new m("Network Error",m.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let p=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",Q=A.transitional||mA;A.timeoutErrorMessage&&(p=A.timeoutErrorMessage),r(new m(p,Q.clarifyTimeoutError?m.ETIMEDOUT:m.ECONNABORTED,A,o)),o=null},U.hasStandardBrowserEnv&&(g&&l.isFunction(g)&&(g=g(A)),g||g!==!1&&Ve(f))){let u=A.xsrfHeaderName&&A.xsrfCookieName&&ze.read(A.xsrfCookieName);u&&i.set(A.xsrfHeaderName,u)}n===void 0&&i.setContentType(null),"setRequestHeader"in o&&l.forEach(i.toJSON(),function(p,Q){o.setRequestHeader(Q,p)}),l.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),a&&a!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",Xe(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",Xe(A.onUploadProgress)),(A.cancelToken||A.signal)&&(C=u=>{o&&(r(!u||u.type?new x(null,A,o):u),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(C),A.signal&&(A.signal.aborted?C():A.signal.addEventListener("abort",C)));let B=Ae(f);if(B&&U.protocols.indexOf(B)===-1){r(new m("Unsupported protocol "+B+":",m.ERR_BAD_REQUEST,A));return}o.send(n||null)})};var ee={http:pA,xhr:$e};l.forEach(ee,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var At=A=>`- ${A}`,Yr=A=>l.isFunction(A)||A===null||A===!1,yA={getAdapter:A=>{A=l.isArray(A)?A:[A];let{length:e}=A,t,r,n={};for(let i=0;i<e;i++){t=A[i];let a;if(r=t,!Yr(t)&&(r=ee[(a=String(t)).toLowerCase()],r===void 0))throw new m(`Unknown adapter '${a}'`);if(r)break;n[a||"#"+i]=r}if(!r){let i=Object.entries(n).map(([g,C])=>`adapter ${g} `+(C===!1?"is not supported by the environment":"is not available in the build")),a=e?i.length>1?`since :
`+i.map(At).join(`
`):" "+At(i[0]):"as no adapter specified";throw new m("There is no suitable adapter to dispatch the request "+a,"ERR_NOT_SUPPORT")}return r},adapters:ee};function te(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new x(null,A)}function wA(A){return te(A),A.headers=N.from(A.headers),A.data=rA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),yA.getAdapter(A.adapter||v.adapter)(A).then(function(r){return te(A),r.data=rA.call(A,A.transformResponse,r),r.headers=N.from(r.headers),r},function(r){return iA(r)||(te(A),r&&r.response&&(r.response.data=rA.call(A,A.transformResponse,r.response),r.response.headers=N.from(r.response.headers))),Promise.reject(r)})}var et=A=>A instanceof N?{...A}:A;function L(A,e){e=e||{};let t={};function r(c,s,o){return l.isPlainObject(c)&&l.isPlainObject(s)?l.merge.call({caseless:o},c,s):l.isPlainObject(s)?l.merge({},s):l.isArray(s)?s.slice():s}function n(c,s,o){if(l.isUndefined(s)){if(!l.isUndefined(c))return r(void 0,c,o)}else return r(c,s,o)}function i(c,s){if(!l.isUndefined(s))return r(void 0,s)}function a(c,s){if(l.isUndefined(s)){if(!l.isUndefined(c))return r(void 0,c)}else return r(void 0,s)}function g(c,s,o){if(o in e)return r(c,s);if(o in A)return r(void 0,c)}let C={url:i,method:i,data:i,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,withXSRFToken:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:g,headers:(c,s)=>n(et(c),et(s),!0)};return l.forEach(Object.keys(Object.assign({},A,e)),function(s){let o=C[s]||n,f=o(A[s],e[s],s);l.isUndefined(f)&&o!==g||(t[s]=f)}),t}var DA="1.6.8";var re={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{re[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var tt={};re.transitional=function(e,t,r){function n(i,a){return"[Axios v"+DA+"] Transitional option '"+i+"'"+a+(r?". "+r:"")}return(i,a,g)=>{if(e===!1)throw new m(n(a," has been removed"+(t?" in "+t:"")),m.ERR_DEPRECATED);return t&&!tt[a]&&(tt[a]=!0,console.warn(n(a," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,a,g):!0}};function qr(A,e,t){if(typeof A!="object")throw new m("options must be an object",m.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),n=r.length;for(;n-- >0;){let i=r[n],a=e[i];if(a){let g=A[i],C=g===void 0||a(g,i,A);if(C!==!0)throw new m("option "+i+" must be "+C,m.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new m("Unknown option "+i,m.ERR_BAD_OPTION)}}var SA={assertOptions:qr,validators:re};var J=SA.validators,_=class{constructor(e){this.defaults=e,this.interceptors={request:new vA,response:new vA}}async request(e,t){try{return await this._request(e,t)}catch(r){if(r instanceof Error){let n;Error.captureStackTrace?Error.captureStackTrace(n={}):n=new Error;let i=n.stack?n.stack.replace(/^.+\n/,""):"";r.stack?i&&!String(r.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+i):r.stack=i}throw r}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=L(this.defaults,t);let{transitional:r,paramsSerializer:n,headers:i}=t;r!==void 0&&SA.assertOptions(r,{silentJSONParsing:J.transitional(J.boolean),forcedJSONParsing:J.transitional(J.boolean),clarifyTimeoutError:J.transitional(J.boolean)},!1),n!=null&&(l.isFunction(n)?t.paramsSerializer={serialize:n}:SA.assertOptions(n,{encode:J.function,serialize:J.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let a=i&&l.merge(i.common,i[t.method]);i&&l.forEach(["delete","get","head","post","put","patch","common"],B=>{delete i[B]}),t.headers=N.concat(a,i);let g=[],C=!0;this.interceptors.request.forEach(function(u){typeof u.runWhen=="function"&&u.runWhen(t)===!1||(C=C&&u.synchronous,g.unshift(u.fulfilled,u.rejected))});let c=[];this.interceptors.response.forEach(function(u){c.push(u.fulfilled,u.rejected)});let s,o=0,f;if(!C){let B=[wA.bind(this),void 0];for(B.unshift.apply(B,g),B.push.apply(B,c),f=B.length,s=Promise.resolve(t);o<f;)s=s.then(B[o++],B[o++]);return s}f=g.length;let I=t;for(o=0;o<f;){let B=g[o++],u=g[o++];try{I=B(I)}catch(p){u.call(this,p);break}}try{s=wA.call(this,I)}catch(B){return Promise.reject(B)}for(o=0,f=c.length;o<f;)s=s.then(c[o++],c[o++]);return s}getUri(e){e=L(this.defaults,e);let t=nA(e.baseURL,e.url);return eA(t,e.params,e.paramsSerializer)}};l.forEach(["delete","get","head","options"],function(e){_.prototype[e]=function(t,r){return this.request(L(r||{},{method:e,url:t,data:(r||{}).data}))}});l.forEach(["post","put","patch"],function(e){function t(r){return function(i,a,g){return this.request(L(g||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:a}))}}_.prototype[e]=t(),_.prototype[e+"Form"]=t(!0)});var aA=_;var ie=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(n=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](n);r._listeners=null}),this.promise.then=n=>{let i,a=new Promise(g=>{r.subscribe(g),i=g}).then(n);return a.cancel=function(){r.unsubscribe(i)},a},e(function(i,a,g){r.reason||(r.reason=new x(i,a,g),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(n){e=n}),cancel:e}}},rt=ie;function ne(A){return function(t){return A.apply(null,t)}}function ae(A){return l.isObject(A)&&A.isAxiosError===!0}var oe={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(oe).forEach(([A,e])=>{oe[e]=A});var it=oe;function nt(A){let e=new aA(A),t=X(aA.prototype.request,e);return l.extend(t,aA.prototype,e,{allOwnKeys:!0}),l.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return nt(L(A,n))},t}var S=nt(v);S.Axios=aA;S.CanceledError=x;S.CancelToken=rt;S.isCancel=iA;S.VERSION=DA;S.toFormData=G;S.AxiosError=m;S.Cancel=S.CanceledError;S.all=function(e){return Promise.all(e)};S.spread=ne;S.isAxiosError=ae;S.mergeConfig=L;S.AxiosHeaders=N;S.formToJSON=A=>dA(l.isHTMLForm(A)?new FormData(A):A);S.getAdapter=yA.getAdapter;S.HttpStatusCode=it;S.default=S;var z=S;var{Axios:Yo,AxiosError:qo,CanceledError:Ko,isCancel:vo,CancelToken:jo,VERSION:_o,all:zo,Cancel:Vo,isAxiosError:Zo,spread:Xo,toFormData:$o,AxiosHeaders:As,HttpStatusCode:es,formToJSON:ts,getAdapter:rs,mergeConfig:is}=z;async function Kr(A,e){let t=A,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let n=await z.get(t,{responseType:"blob",params:e}),i=URL.createObjectURL(n.data);r=new Worker(i,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var oA=Kr;function at(A){let e=JA(A),t=A;return t.terminated=!1,t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[xA](),t.originalTerminate()},{workerProxy:e,worker:t}}async function vr(A,e,t){let r;if(A!=null){let i=A;return i.workerProxy!==void 0?(r=i.workerProxy,{workerProxy:r,worker:i}):at(A)}let n=await oA(e,t);return at(n)}var ot=vr;async function jr(A,e,t){let r="unknown";typeof A!="string"?r=A.href:A.startsWith("http")?r=A:r=typeof e<"u"?`${e}/${A}`:A,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let n=`${r}.wasm`,a=(await z.get(n,{responseType:"arraybuffer",params:t})).data;return(await import(`${r}.js`)).default({wasmBinary:a})}var st=jr;var It=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var ct=typeof globalThis.SharedArrayBuffer=="function",gt=new TextEncoder,lt=new TextDecoder("utf-8");function _r(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),i=A.fs_stat(e).size,a=null;ct?a=new SharedArrayBuffer(i):a=new ArrayBuffer(i);let g=new Uint8Array(a);return A.fs_read(r,g,0,i,0),A.fs_close(r),g}function ut(A,e,t){let r=null;ct?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let n=new Uint8Array(r),i=new Uint8Array(A.HEAPU8.buffer,e,t);return n.set(i),n}function k(A,e,t,r){let n=0;return e!==null&&(n=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),n)),n}function H(A,e,t){let r=JSON.stringify(e),n=A.lengthBytesUTF8(r)+1,i=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,n]);A.stringToUTF8(r,i,n)}function b(A,e,t,r){let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),a=ut(A,n,i);return O(r,a.buffer)}function sA(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.UTF8ToString(t);return JSON.parse(r)}function zr(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(c,s){switch(c.type){case E.TextStream:{let o=gt.encode(c.data.data),f=k(A,o,s,0),I={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};H(A,I,s);break}case E.JsonCompatible:{let o=gt.encode(JSON.stringify(c.data)),f=k(A,o,s,0),I={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};H(A,I,s);break}case E.BinaryStream:{let o=c.data.data,f=k(A,o,s,0),I={size:o.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};H(A,I,s);break}case E.TextFile:{A.fs_writeFile(c.data.path,c.data.data);break}case E.BinaryFile:{A.fs_writeFile(c.data.path,c.data.data);break}case E.Image:{let o=c.data,f=k(A,o.data,s,0),I=k(A,o.direction,s,1),B=typeof o.metadata?.entries<"u"?Array.from(o.metadata.entries()):[],u={imageType:o.imageType,name:o.name,origin:o.origin,spacing:o.spacing,direction:`data:application/vnd.itk.address,0:${I}`,size:o.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:B};H(A,u,s);break}case E.Mesh:{let o=c.data,f=k(A,o.points,s,0),I=k(A,o.cells,s,1),B=k(A,o.pointData,s,2),u=k(A,o.cellData,s,3),p={meshType:o.meshType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:o.numberOfCells,cells:`data:application/vnd.itk.address,0:${I}`,cellBufferSize:o.cellBufferSize,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`,numberOfCellPixels:o.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${u}`};H(A,p,s);break}case E.PointSet:{let o=c.data,f=k(A,o.points,s,0),I=k(A,o.pointData,s,1),B={pointSetType:o.pointSetType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${I}`};H(A,B,s);break}case E.TransformList:{let o=c.data,f=[];o.forEach((I,B)=>{let p=`data:application/vnd.itk.address,0:${k(A,I.fixedParameters,s,B*2)}`,d=`data:application/vnd.itk.address,0:${k(A,I.parameters,s,B*2+1)}`,D={transformType:I.transformType,numberOfFixedParameters:I.numberOfFixedParameters,numberOfParameters:I.numberOfParameters,name:I.name,inputSpaceName:I.inputSpaceName,outputSpaceName:I.outputSpaceName,parameters:d,fixedParameters:p};f.push(D)}),H(A,f,s);break}case E.PolyData:{let o=c.data,f=k(A,o.points,s,0),I=k(A,o.vertices,s,1),B=k(A,o.lines,s,2),u=k(A,o.polygons,s,3),p=k(A,o.triangleStrips,s,4),Q=k(A,o.pointData,s,5),d=k(A,o.pointData,s,6),D={polyDataType:o.polyDataType,name:o.name,numberOfPoints:o.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:o.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${I}`,linesBufferSize:o.linesBufferSize,lines:`data:application/vnd.itk.address,0:${B}`,polygonsBufferSize:o.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${u}`,triangleStripsBufferSize:o.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${p}`,numberOfPointPixels:o.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${Q}`,numberOfCellPixels:o.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${d}`};H(A,D,s);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let n=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(c){throw typeof c=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(c)):console.error("Build module in Debug mode for exception message information.")),c}finally{A.stackRestore(n)}let a=A.getModuleStdout(),g=A.getModuleStderr(),C=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(c,s){let o=null;switch(c.type){case E.TextStream:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),B=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),u=new Uint8Array(A.HEAPU8.buffer,I,B);o={data:lt.decode(u)};break}case E.JsonCompatible:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),B=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),u=new Uint8Array(A.HEAPU8.buffer,I,B);o=JSON.parse(lt.decode(u));break}case E.BinaryStream:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),B=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]);o={data:ut(A,I,B)};break}case E.TextFile:{o={path:c.data.path,data:A.fs_readFile(c.data.path,{encoding:"utf8"})};break}case E.BinaryFile:{o={path:c.data.path,data:_r(A,c.data.path)};break}case E.Image:{let I=sA(A,s);I.data=b(A,s,0,I.imageType.componentType),I.direction=b(A,s,1,W.Float64),I.metadata=new Map(I.metadata),o=I;break}case E.Mesh:{let I=sA(A,s);I.numberOfPoints>0?I.points=b(A,s,0,I.meshType.pointComponentType):I.points=O(I.meshType.pointComponentType,new ArrayBuffer(0)),I.numberOfCells>0?I.cells=b(A,s,1,I.meshType.cellComponentType):I.cells=O(I.meshType.cellComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=b(A,s,2,I.meshType.pointPixelComponentType):I.pointData=O(I.meshType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=b(A,s,3,I.meshType.cellPixelComponentType):I.cellData=O(I.meshType.cellPixelComponentType,new ArrayBuffer(0)),o=I;break}case E.PointSet:{let I=sA(A,s);I.numberOfPoints>0?I.points=b(A,s,0,I.pointSetType.pointComponentType):I.points=O(I.pointSetType.pointComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=b(A,s,1,I.pointSetType.pointPixelComponentType):I.pointData=O(I.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),o=I;break}case E.TransformList:{let I=sA(A,s);I.forEach((B,u)=>{B.numberOfFixedParameters>0&&(I[u].fixedParameters=b(A,s,u*2,B.transformType.parametersValueType)),B.numberOfFixedParameters>0&&(I[u].parameters=b(A,s,u*2+1,B.transformType.parametersValueType))}),o=I;break}case E.PolyData:{let I=sA(A,s);I.numberOfPoints>0?I.points=b(A,s,0,W.Float32):I.points=new Float32Array,I.verticesBufferSize>0?I.vertices=b(A,s,1,R.UInt32):I.vertices=new Uint32Array,I.linesBufferSize>0?I.lines=b(A,s,2,R.UInt32):I.lines=new Uint32Array,I.polygonsBufferSize>0?I.polygons=b(A,s,3,R.UInt32):I.polygons=new Uint32Array,I.triangleStripsBufferSize>0?I.triangleStrips=b(A,s,4,R.UInt32):I.triangleStrips=new Uint32Array,I.numberOfPointPixels>0?I.pointData=b(A,s,5,I.polyDataType.pointPixelComponentType):I.pointData=O(I.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=b(A,s,6,I.polyDataType.cellPixelComponentType):I.cellData=O(I.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),o=I;break}default:throw Error("Unsupported output InterfaceType")}let f={type:c.type,data:o};C.push(f)}),{returnValue:i,stdout:a,stderr:g,outputs:C}}var Bt=zr;var Vr=typeof globalThis.SharedArrayBuffer<"u";function Zr(A,e){if(A==null)return[];let t=[];for(let r=0;r<A.length;r++){let n=Xr(A[r],e);n!==null&&t.push(n)}return t}function Xr(A,e){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),Vr&&t instanceof SharedArrayBuffer?null:e?t:t.slice(0)}var Ct=Zr;function $r(A){return[A.data,A.direction]}var ft=$r;function Ai(A){return[A.points,A.pointData,A.cells,A.cellData]}var Et=Ai;function ei(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var pt=ei;var ti;function kA(){return ti}var ri;function Qt(){return ri}var ii;function FA(){return ii}var se=new Map;function ni(){let A=FA();return typeof A>"u"&&(A=null),A}function mt(){let A=kA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function bA(){let A=Qt();return typeof A>"u"&&(A={}),A}async function ai(A,e,t){let r=A,n=A;if(typeof A!="string"&&(r=new URL(A.href),n=r.href),se.has(n))return se.get(n);{let i=await st(A,e?.toString()??mt(),t??bA());return se.set(n,i),i}}async function oi(A,e,t,r,n){if(!await It()){let p="WebAssembly SIMD support is required -- please update your browser.";throw alert(p),new Error(p)}let i=n?.webWorker??null;if(i===!1){let p=await ai(A.toString(),n?.pipelineBaseUrl,n?.pipelineQueryParams??bA());return Bt(p,e,t,r)}let a=i,g=n?.pipelineWorkerUrl??ni(),C=typeof g!="string"&&typeof g?.href<"u"?g.href:g,{workerProxy:c,worker:s}=await ot(a,C,n?.pipelineQueryParams??bA());a=s;let o=[];r!=null&&r.length>0&&r.forEach(function(p){if(p.type===E.BinaryStream){let Q=p.data.data;o.push(Q)}else if(p.type===E.BinaryFile){let Q=p.data.data;o.push(Q)}else if(p.type===E.Image){let Q=p.data;Q.data!==null&&o.push(...ft(Q))}else if(p.type===E.Mesh){let Q=p.data;o.push(...Et(Q))}else if(p.type===E.PolyData){let Q=p.data;o.push(...pt(Q))}});let f=n?.pipelineBaseUrl??mt(),I=typeof f!="string"&&typeof f?.href<"u"?f.href:f,B=r!=null?HA(r,Ct(o,n?.noCopy)):null,u=await c.runPipeline(A.toString(),I,e,t,B,n?.pipelineQueryParams??bA());return{returnValue:u.returnValue,stdout:u.stdout,stderr:u.stderr,outputs:u.outputs,webWorker:a}}var y=oi;var si=null;function dt(){return si}var Ie,Ii=`https://cdn.jsdelivr.net/npm/@itk-wasm/dicom@${RA}/dist/pipelines`;function _s(A){Ie=A}function w(){if(typeof Ie<"u")return Ie;let A=kA();return typeof A<"u"?A:Ii}var ge,gi=null;function ht(A){ge=A}function h(){if(typeof ge<"u")return ge;let A=FA();return typeof A<"u"?A:gi}var V=null;async function yt(){let A=h(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;V=await oA(e)}function eI(A){V=A}async function F(){if(V!==null)return V.terminated&&await yt(),V;let A=dt();return A!==null?A:(await yt(),V)}async function li(A,e,t={}){let r=[{type:E.JsonCompatible},{type:E.Image}],n=A;if(A instanceof File){let D=await A.arrayBuffer();n={path:A.name,data:new Uint8Array(D)}}let i=e;if(e instanceof File){let D=await e.arrayBuffer();i={path:e.name,data:new Uint8Array(D)}}let a=[{type:E.BinaryFile,data:n},{type:E.BinaryFile,data:i}],g=[],C=n.path;g.push(C);let c=i.path;g.push(c),g.push("0"),g.push("1"),g.push("--memory-io"),t.colorOutput&&t.colorOutput&&g.push("--color-output"),t.configFile&&g.push("--config-file",t.configFile.toString()),t.frame&&g.push("--frame",t.frame.toString()),t.noPresentationStateOutput&&t.noPresentationStateOutput&&g.push("--no-presentation-state-output"),t.noBitmapOutput&&t.noBitmapOutput&&g.push("--no-bitmap-output");let f="apply-presentation-state-to-image",I=t?.webWorker;I===void 0&&(I=await F());let{webWorker:B,returnValue:u,stderr:p,outputs:Q}=await y(f,g,r,a,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:I,noCopy:t?.noCopy});if(u!==0&&p!=="")throw new Error(p);return{webWorker:B,presentationStateOutStream:Q[0]?.data,outputImage:Q[1]?.data}}var ci=li;async function ui(A,e={}){let t=[{type:E.BinaryStream}],r=A;if(A instanceof File){let u=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(u)}}let n=[{type:E.BinaryFile,data:r}],i=[],a=r.path;i.push(a),i.push("0"),i.push("--memory-io"),e.readFileOnly&&e.readFileOnly&&i.push("--read-file-only"),e.readDataset&&e.readDataset&&i.push("--read-dataset"),e.readXferAuto&&e.readXferAuto&&i.push("--read-xfer-auto"),e.readXferDetect&&e.readXferDetect&&i.push("--read-xfer-detect"),e.readXferLittle&&e.readXferLittle&&i.push("--read-xfer-little"),e.readXferBig&&e.readXferBig&&i.push("--read-xfer-big"),e.readXferImplicit&&e.readXferImplicit&&i.push("--read-xfer-implicit"),e.acceptOddLength&&e.acceptOddLength&&i.push("--accept-odd-length"),e.assumeEvenLength&&e.assumeEvenLength&&i.push("--assume-even-length"),e.enableCp246&&e.enableCp246&&i.push("--enable-cp246"),e.disableCp246&&e.disableCp246&&i.push("--disable-cp246"),e.retainUn&&e.retainUn&&i.push("--retain-un"),e.convertUn&&e.convertUn&&i.push("--convert-un"),e.enableCorrection&&e.enableCorrection&&i.push("--enable-correction"),e.disableCorrection&&e.disableCorrection&&i.push("--disable-correction");let C="read-dicom-encapsulated-pdf",c=e?.webWorker;c===void 0&&(c=await F());let{webWorker:s,returnValue:o,stderr:f,outputs:I}=await y(C,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:c,noCopy:e?.noCopy});if(o!==0&&f!=="")throw new Error(f);return{webWorker:s,pdfBinaryOutput:(I[0]?.data).data}}var Bi=ui;async function Ci(A,e={}){let t=[{type:E.TextStream}],r=A;if(A instanceof File){let u=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(u)}}let n=[{type:E.BinaryFile,data:r}],i=[],a=r.path;if(i.push(a),i.push("0"),i.push("--memory-io"),e.readFileOnly&&e.readFileOnly&&i.push("--read-file-only"),e.readDataset&&e.readDataset&&i.push("--read-dataset"),e.readXferAuto&&e.readXferAuto&&i.push("--read-xfer-auto"),e.readXferDetect&&e.readXferDetect&&i.push("--read-xfer-detect"),e.readXferLittle&&e.readXferLittle&&i.push("--read-xfer-little"),e.readXferBig&&e.readXferBig&&i.push("--read-xfer-big"),e.readXferImplicit&&e.readXferImplicit&&i.push("--read-xfer-implicit"),e.processingDetails&&e.processingDetails&&i.push("--processing-details"),e.unknownRelationship&&e.unknownRelationship&&i.push("--unknown-relationship"),e.invalidItemValue&&e.invalidItemValue&&i.push("--invalid-item-value"),e.ignoreConstraints&&e.ignoreConstraints&&i.push("--ignore-constraints"),e.ignoreItemErrors&&e.ignoreItemErrors&&i.push("--ignore-item-errors"),e.skipInvalidItems&&e.skipInvalidItems&&i.push("--skip-invalid-items"),e.disableVrChecker&&e.disableVrChecker&&i.push("--disable-vr-checker"),e.charsetRequire&&e.charsetRequire&&i.push("--charset-require"),e.charsetAssume&&i.push("--charset-assume",e.charsetAssume.toString()),e.charsetCheckAll&&e.charsetCheckAll&&i.push("--charset-check-all"),e.convertToUtf8&&e.convertToUtf8&&i.push("--convert-to-utf8"),e.urlPrefix&&i.push("--url-prefix",e.urlPrefix.toString()),e.html32&&e.html32&&i.push("--html-32"),e.html40&&e.html40&&i.push("--html-40"),e.xhtml11&&e.xhtml11&&i.push("--xhtml-11"),e.addDocumentType&&e.addDocumentType&&i.push("--add-document-type"),e.cssReference){let u=n.length.toString();n.push({type:E.TextStream,data:{data:e.cssReference}}),i.push("--css-reference",u)}if(e.cssFile){let u=e.cssFile,p=u;if(u instanceof File){let d=await u.arrayBuffer();p={path:u.name,data:new TextDecoder().decode(d)}}i.push("--css-file"),n.push({type:E.TextFile,data:p});let Q=u instanceof File?u.name:u.path;i.push(Q)}e.expandInline&&e.expandInline&&i.push("--expand-inline"),e.neverExpandInline&&e.neverExpandInline&&i.push("--never-expand-inline"),e.alwaysExpandInline&&e.alwaysExpandInline&&i.push("--always-expand-inline"),e.renderFullData&&e.renderFullData&&i.push("--render-full-data"),e.sectionTitleInline&&e.sectionTitleInline&&i.push("--section-title-inline"),e.documentTypeTitle&&e.documentTypeTitle&&i.push("--document-type-title"),e.patientInfoTitle&&e.patientInfoTitle&&i.push("--patient-info-title"),e.noDocumentHeader&&e.noDocumentHeader&&i.push("--no-document-header"),e.renderInlineCodes&&e.renderInlineCodes&&i.push("--render-inline-codes"),e.conceptNameCodes&&e.conceptNameCodes&&i.push("--concept-name-codes"),e.numericUnitCodes&&e.numericUnitCodes&&i.push("--numeric-unit-codes"),e.codeValueUnit&&e.codeValueUnit&&i.push("--code-value-unit"),e.codeMeaningUnit&&e.codeMeaningUnit&&i.push("--code-meaning-unit"),e.renderAllCodes&&e.renderAllCodes&&i.push("--render-all-codes"),e.codeDetailsTooltip&&e.codeDetailsTooltip&&i.push("--code-details-tooltip");let C="structured-report-to-html",c=e?.webWorker;c===void 0&&(c=await F());let{webWorker:s,returnValue:o,stderr:f,outputs:I}=await y(C,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:c,noCopy:e?.noCopy});if(o!==0&&f!=="")throw new Error(f);return{webWorker:s,outputText:(I[0]?.data).data}}var fi=Ci;async function Ei(A,e={}){let t=[{type:E.TextStream}],r=A;if(A instanceof File){let u=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(u)}}let n=[{type:E.BinaryFile,data:r}],i=[],a=r.path;i.push(a),i.push("0"),i.push("--memory-io"),e.unknownRelationship&&e.unknownRelationship&&i.push("--unknown-relationship"),e.invalidItemValue&&e.invalidItemValue&&i.push("--invalid-item-value"),e.ignoreConstraints&&e.ignoreConstraints&&i.push("--ignore-constraints"),e.ignoreItemErrors&&e.ignoreItemErrors&&i.push("--ignore-item-errors"),e.skipInvalidItems&&e.skipInvalidItems&&i.push("--skip-invalid-items"),e.noDocumentHeader&&e.noDocumentHeader&&i.push("--no-document-header"),e.numberNestedItems&&e.numberNestedItems&&i.push("--number-nested-items"),e.shortenLongValues&&e.shortenLongValues&&i.push("--shorten-long-values"),e.printInstanceUid&&e.printInstanceUid&&i.push("--print-instance-uid"),e.printSopclassShort&&e.printSopclassShort&&i.push("--print-sopclass-short"),e.printSopclassLong&&e.printSopclassLong&&i.push("--print-sopclass-long"),e.printSopclassUid&&e.printSopclassUid&&i.push("--print-sopclass-uid"),e.printAllCodes&&e.printAllCodes&&i.push("--print-all-codes"),e.printInvalidCodes&&e.printInvalidCodes&&i.push("--print-invalid-codes"),e.printTemplateId&&e.printTemplateId&&i.push("--print-template-id"),e.indicateEnhanced&&e.indicateEnhanced&&i.push("--indicate-enhanced"),e.printColor&&e.printColor&&i.push("--print-color");let C="structured-report-to-text",c=e?.webWorker;c===void 0&&(c=await F());let{webWorker:s,returnValue:o,stderr:f,outputs:I}=await y(C,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:c,noCopy:e?.noCopy});if(o!==0&&f!=="")throw new Error(f);return{webWorker:s,outputText:(I[0]?.data).data}}var pi=Ei;async function Qi(A,e={}){let t=[{type:E.JsonCompatible}],r=A;if(A instanceof File){let B=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(B)}}let n=[{type:E.BinaryFile,data:r}],i=[],a=r.path;if(i.push(a),i.push("0"),i.push("--memory-io"),typeof e.tagsToRead<"u"){let B=n.length.toString();n.push({type:E.JsonCompatible,data:e.tagsToRead}),i.push("--tags-to-read",B)}let C="read-dicom-tags",{webWorker:c,returnValue:s,stderr:o,outputs:f}=await y(C,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:e?.webWorker??null});if(s!==0)throw new Error(o);return{webWorker:c,tags:f[0].data}}var mi=Qi;async function di(A,e=!1,t={}){let r=[{type:E.Image},{type:E.JsonCompatible}],n=[],i=[];i.push("0"),i.push("1"),i.push("--memory-io"),i.push("--input-images"),A.forEach(B=>{n.push({type:E.BinaryFile,data:B}),i.push(B.path)}),typeof e<"u"&&e&&i.push("--single-sorted-series");let C="read-image-dicom-file-series",{webWorker:c,returnValue:s,stderr:o,outputs:f}=await y(C,i,r,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:t?.webWorker??null});if(s!==0)throw new Error(o);return{webWorker:c,outputImage:f[0].data,sortedFilenames:f[1].data}}var le=di;var hi=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:4,wt=8;async function yi(A={inputImages:[]}){let e=A.webWorkerPool??null;e===null&&(e=new PA(hi,le));let t=[];if(A.inputImages.length<1)throw new Error('"input-images" option must have a length > 1');if(await Promise.all(A.inputImages.map(async r=>{let n=r;if(r instanceof File){let i=await r.arrayBuffer();n={path:r.name,data:new Uint8Array(i)}}t.push(n)})),A.singleSortedSeries){let r=[];for(let C=0;C<t.length;C+=wt){let c=t.slice(C,C+wt);r.push([c,A.singleSortedSeries,{}])}let n=await e.runTasks(r).promise,i=n.map(C=>C.outputImage),a=n.reduce((C,c)=>C.concat(c.sortedFilenames),[]);return{outputImage:TA(i),webWorkerPool:e,sortedFilenames:a}}else{let r=[[t,A.singleSortedSeries,{}]],n=await e.runTasks(r).promise;return{outputImage:n[0].outputImage,webWorkerPool:e,sortedFilenames:n[0].sortedFilenames}}}var wi=yi;async function Di(A,e={}){let t=[{type:E.Image},{type:E.JsonCompatible}],r=A;if(A instanceof File){let p=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(p)}}let n=[{type:E.BinaryFile,data:r}],i=[],a=r.path;i.push(a),i.push("0"),i.push("1"),i.push("--memory-io");let c="read-segmentation",s=e?.webWorker;s===void 0&&(s=await F());let{webWorker:o,returnValue:f,stderr:I,outputs:B}=await y(c,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:s,noCopy:e?.noCopy});if(f!==0&&I!=="")throw new Error(I);return{webWorker:o,segImage:B[0]?.data,metaInfo:B[1]?.data}}var Si=Di;async function ki(A,e={}){let t=[{type:E.Image},{type:E.JsonCompatible}],r=A;if(A instanceof File){let p=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(p)}}let n=[{type:E.BinaryFile,data:r}],i=[],a=r.path;i.push(a),i.push("0"),i.push("1"),i.push("--memory-io"),e.mergeSegments&&e.mergeSegments&&i.push("--merge-segments");let c="read-overlapping-segmentation",s=e?.webWorker;s===void 0&&(s=await F());let{webWorker:o,returnValue:f,stderr:I,outputs:B}=await y(c,i,t,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:s,noCopy:e?.noCopy});if(f!==0&&I!=="")throw new Error(I);return{webWorker:o,segImage:B[0]?.data,metaInfo:B[1]?.data}}var Fi=ki;async function bi(A,e,t,r={refDicomSeries:[]}){let n=[{type:E.BinaryFile,data:{path:t,data:new Uint8Array}}],i=[{type:E.Image,data:A},{type:E.JsonCompatible,data:e}],a=[];a.push("0"),a.push("1");let c=t;if(a.push(c),a.push("--memory-io"),r.refDicomSeries){if(r.refDicomSeries.length<1)throw new Error('"ref-dicom-series" option must have a length > 1');a.push("--ref-dicom-series"),await Promise.all(r.refDicomSeries.map(async Q=>{let d=Q;if(Q instanceof File){let Z=await Q.arrayBuffer();d={path:Q.name,data:new Uint8Array(Z)}}i.push({type:E.BinaryFile,data:d});let D=Q instanceof File?Q.name:d.path;a.push(D)}))}r.skipEmptySlices&&r.skipEmptySlices&&a.push("--skip-empty-slices"),r.useLabelidAsSegmentnumber&&r.useLabelidAsSegmentnumber&&a.push("--use-labelid-as-segmentnumber");let s="write-segmentation",o=r?.webWorker;o===void 0&&(o=await F());let{webWorker:f,returnValue:I,stderr:B,outputs:u}=await y(s,a,n,i,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:o,noCopy:r?.noCopy});if(I!==0&&B!=="")throw new Error(B);return{webWorker:f,outputDicomFile:u[0]?.data}}var Ri=bi;async function Ui(A,e,t,r={refDicomSeries:[]}){let n=[{type:E.BinaryFile,data:{path:t,data:new Uint8Array}}],i=[{type:E.Image,data:A},{type:E.JsonCompatible,data:e}],a=[];a.push("0"),a.push("1");let c=t;if(a.push(c),a.push("--memory-io"),r.refDicomSeries){if(r.refDicomSeries.length<1)throw new Error('"ref-dicom-series" option must have a length > 1');a.push("--ref-dicom-series"),await Promise.all(r.refDicomSeries.map(async Q=>{let d=Q;if(Q instanceof File){let Z=await Q.arrayBuffer();d={path:Q.name,data:new Uint8Array(Z)}}i.push({type:E.BinaryFile,data:d});let D=Q instanceof File?Q.name:d.path;a.push(D)}))}r.skipEmptySlices&&r.skipEmptySlices&&a.push("--skip-empty-slices"),r.useLabelidAsSegmentnumber&&r.useLabelidAsSegmentnumber&&a.push("--use-labelid-as-segmentnumber");let s="write-overlapping-segmentation",o=r?.webWorker;o===void 0&&(o=await F());let{webWorker:f,returnValue:I,stderr:B,outputs:u}=await y(s,a,n,i,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:o,noCopy:r?.noCopy});if(I!==0&&B!=="")throw new Error(B);return{webWorker:f,outputDicomFile:u[0]?.data}}var Ni=Ui;async function Ti(A,e,t={refDicomSeries:[],segImages:[]}){let r=[{type:E.BinaryFile,data:{path:e,data:new Uint8Array}}],n=[{type:E.JsonCompatible,data:A}],i=[];i.push("0");let g=e;if(i.push(g),i.push("--memory-io"),t.refDicomSeries){if(t.refDicomSeries.length<1)throw new Error('"ref-dicom-series" option must have a length > 1');i.push("--ref-dicom-series"),await Promise.all(t.refDicomSeries.map(async u=>{let p=u;if(u instanceof File){let d=await u.arrayBuffer();p={path:u.name,data:new Uint8Array(d)}}n.push({type:E.BinaryFile,data:p});let Q=u instanceof File?u.name:p.path;i.push(Q)}))}if(t.segImages){if(t.segImages.length<1)throw new Error('"seg-images" option must have a length > 1');i.push("--seg-images"),await Promise.all(t.segImages.map(async u=>{let p=u;if(u instanceof File){let d=await u.arrayBuffer();p={path:u.name,data:new Uint8Array(d)}}n.push({type:E.BinaryFile,data:p});let Q=u instanceof File?u.name:p.path;i.push(Q)}))}t.skipEmptySlices&&t.skipEmptySlices&&i.push("--skip-empty-slices"),t.useLabelidAsSegmentnumber&&t.useLabelidAsSegmentnumber&&i.push("--use-labelid-as-segmentnumber");let C="write-multi-segmentation",c=t?.webWorker;c===void 0&&(c=await F());let{webWorker:s,returnValue:o,stderr:f,outputs:I}=await y(C,i,r,n,{pipelineBaseUrl:w(),pipelineWorkerUrl:h(),webWorker:c,noCopy:t?.noCopy});if(o!==0&&f!=="")throw new Error(f);return{webWorker:s,outputDicomFile:I[0]?.data}}var Oi=Ti;var Dt='data:text/javascript;charset=utf-8,var II=Object.defineProperty;var eI=(A,t)=>{for(var I in t)II(A,I,{get:t[I],enumerable:!0})};var vA=Symbol("Comlink.proxy"),gI=Symbol("Comlink.endpoint"),rI=Symbol("Comlink.releaseProxy"),pA=Symbol("Comlink.finalizer"),gA=Symbol("Comlink.thrown"),$A=A=>typeof A=="object"&&A!==null||typeof A=="function",oI={canHandle:A=>$A(A)&&A[vA],serialize(A){let{port1:t,port2:I}=new MessageChannel;return CA(A,t),[I,[I]]},deserialize(A){return A.start(),sI(A)}},iI={canHandle:A=>$A(A)&&gA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},At=new Map([["proxy",oI],["throw",iI]]);function CI(A,t){for(let I of A)if(t===I||I==="*"||I instanceof RegExp&&I.test(t))return!0;return!1}function CA(A,t=globalThis,I=["*"]){t.addEventListener("message",function e(g){if(!g||!g.data)return;if(!CI(I,g.origin)){console.warn(`Invalid origin \'${g.origin}\' for comlink proxy`);return}let{id:r,type:o,path:n}=Object.assign({path:[]},g.data),c=(g.data.argumentList||[]).map(M),Q;try{let B=n.slice(0,-1).reduce((f,s)=>f[s],A),i=n.reduce((f,s)=>f[s],A);switch(o){case"GET":Q=i;break;case"SET":B[n.slice(-1)[0]]=M(g.data.value),Q=!0;break;case"APPLY":Q=i.apply(B,c);break;case"CONSTRUCT":{let f=new i(...c);Q=EI(f)}break;case"ENDPOINT":{let{port1:f,port2:s}=new MessageChannel;CA(A,s),Q=FA(f,[f])}break;case"RELEASE":Q=void 0;break;default:return}}catch(B){Q={value:B,[gA]:0}}Promise.resolve(Q).catch(B=>({value:B,[gA]:0})).then(B=>{let[i,f]=iA(B);t.postMessage(Object.assign(Object.assign({},i),{id:r}),f),o==="RELEASE"&&(t.removeEventListener("message",e),tt(t),pA in A&&typeof A[pA]=="function"&&A[pA]())}).catch(B=>{let[i,f]=iA({value:new TypeError("Unserializable return value"),[gA]:0});t.postMessage(Object.assign(Object.assign({},i),{id:r}),f)})}),t.start&&t.start()}function BI(A){return A.constructor.name==="MessagePort"}function tt(A){BI(A)&&A.close()}function sI(A,t){return SA(A,[],t)}function eA(A){if(A)throw new Error("Proxy has been released and is not useable")}function It(A){return q(A,{type:"RELEASE"}).then(()=>{tt(A)})}var rA=new WeakMap,oA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(rA.get(A)||0)-1;rA.set(A,t),t===0&&It(A)});function nI(A,t){let I=(rA.get(t)||0)+1;rA.set(t,I),oA&&oA.register(A,t,A)}function QI(A){oA&&oA.unregister(A)}function SA(A,t=[],I=function(){}){let e=!1,g=new Proxy(I,{get(r,o){if(eA(e),o===rI)return()=>{QI(g),It(A),e=!0};if(o==="then"){if(t.length===0)return{then:()=>g};let n=q(A,{type:"GET",path:t.map(c=>c.toString())}).then(M);return n.then.bind(n)}return SA(A,[...t,o])},set(r,o,n){eA(e);let[c,Q]=iA(n);return q(A,{type:"SET",path:[...t,o].map(B=>B.toString()),value:c},Q).then(M)},apply(r,o,n){eA(e);let c=t[t.length-1];if(c===gI)return q(A,{type:"ENDPOINT"}).then(M);if(c==="bind")return SA(A,t.slice(0,-1));let[Q,B]=_A(n);return q(A,{type:"APPLY",path:t.map(i=>i.toString()),argumentList:Q},B).then(M)},construct(r,o){eA(e);let[n,c]=_A(o);return q(A,{type:"CONSTRUCT",path:t.map(Q=>Q.toString()),argumentList:n},c).then(M)}});return nI(g,A),g}function aI(A){return Array.prototype.concat.apply([],A)}function _A(A){let t=A.map(iA);return[t.map(I=>I[0]),aI(t.map(I=>I[1]))]}var et=new WeakMap;function FA(A,t){return et.set(A,t),A}function EI(A){return Object.assign(A,{[vA]:!0})}function iA(A){for(let[t,I]of At)if(I.canHandle(A)){let[e,g]=I.serialize(A);return[{type:"HANDLER",name:t,value:e},g]}return[{type:"RAW",value:A},et.get(A)||[]]}function M(A){switch(A.type){case"HANDLER":return At.get(A.name).deserialize(A.value);case"RAW":return A.value}}function q(A,t,I){return new Promise(e=>{let g=cI();A.addEventListener("message",function r(o){!o.data||!o.data.id||o.data.id!==g||(A.removeEventListener("message",r),e(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:g},t),I)})}function cI(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function W(A,t){return function(){return A.apply(t,arguments)}}var{toString:fI}=Object.prototype,{getPrototypeOf:UA}=Object,sA=(A=>t=>{let I=fI.call(t);return A[I]||(A[I]=I.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),t=>sA(t)===A),nA=A=>t=>typeof t===A,{isArray:K}=Array,Z=nA("undefined");function lI(A){return A!==null&&!Z(A)&&A.constructor!==null&&!Z(A.constructor)&&N(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var it=U("ArrayBuffer");function DI(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&it(A.buffer),t}var uI=nA("string"),N=nA("function"),Ct=nA("number"),QA=A=>A!==null&&typeof A=="object",hI=A=>A===!0||A===!1,BA=A=>{if(sA(A)!=="object")return!1;let t=UA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},dI=U("Date"),yI=U("File"),wI=U("Blob"),mI=U("FileList"),pI=A=>QA(A)&&N(A.pipe),SI=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||N(A.append)&&((t=sA(A))==="formdata"||t==="object"&&N(A.toString)&&A.toString()==="[object FormData]"))},FI=U("URLSearchParams"),RI=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function V(A,t,{allOwnKeys:I=!1}={}){if(A===null||typeof A>"u")return;let e,g;if(typeof A!="object"&&(A=[A]),K(A))for(e=0,g=A.length;e<g;e++)t.call(null,A[e],e,A);else{let r=I?Object.getOwnPropertyNames(A):Object.keys(A),o=r.length,n;for(e=0;e<o;e++)n=r[e],t.call(null,A[n],n,A)}}function Bt(A,t){t=t.toLowerCase();let I=Object.keys(A),e=I.length,g;for(;e-- >0;)if(g=I[e],t===g.toLowerCase())return g;return null}var st=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,nt=A=>!Z(A)&&A!==st;function NA(){let{caseless:A}=nt(this)&&this||{},t={},I=(e,g)=>{let r=A&&Bt(t,g)||g;BA(t[r])&&BA(e)?t[r]=NA(t[r],e):BA(e)?t[r]=NA({},e):K(e)?t[r]=e.slice():t[r]=e};for(let e=0,g=arguments.length;e<g;e++)arguments[e]&&V(arguments[e],I);return t}var NI=(A,t,I,{allOwnKeys:e}={})=>(V(t,(g,r)=>{I&&N(g)?A[r]=W(g,I):A[r]=g},{allOwnKeys:e}),A),UI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),GI=(A,t,I,e)=>{A.prototype=Object.create(t.prototype,e),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),I&&Object.assign(A.prototype,I)},kI=(A,t,I,e)=>{let g,r,o,n={};if(t=t||{},A==null)return t;do{for(g=Object.getOwnPropertyNames(A),r=g.length;r-- >0;)o=g[r],(!e||e(o,A,t))&&!n[o]&&(t[o]=A[o],n[o]=!0);A=I!==!1&&UA(A)}while(A&&(!I||I(A,t))&&A!==Object.prototype);return t},LI=(A,t,I)=>{A=String(A),(I===void 0||I>A.length)&&(I=A.length),I-=t.length;let e=A.indexOf(t,I);return e!==-1&&e===I},JI=A=>{if(!A)return null;if(K(A))return A;let t=A.length;if(!Ct(t))return null;let I=new Array(t);for(;t-- >0;)I[t]=A[t];return I},HI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&UA(Uint8Array)),YI=(A,t)=>{let e=(A&&A[Symbol.iterator]).call(A),g;for(;(g=e.next())&&!g.done;){let r=g.value;t.call(A,r[0],r[1])}},bI=(A,t)=>{let I,e=[];for(;(I=A.exec(t))!==null;)e.push(I);return e},MI=U("HTMLFormElement"),qI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(I,e,g){return e.toUpperCase()+g}),rt=(({hasOwnProperty:A})=>(t,I)=>A.call(t,I))(Object.prototype),KI=U("RegExp"),Qt=(A,t)=>{let I=Object.getOwnPropertyDescriptors(A),e={};V(I,(g,r)=>{let o;(o=t(g,r,A))!==!1&&(e[r]=o||g)}),Object.defineProperties(A,e)},OI=A=>{Qt(A,(t,I)=>{if(N(A)&&["arguments","caller","callee"].indexOf(I)!==-1)return!1;let e=A[I];if(N(e)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+I+"\'")})}})},TI=(A,t)=>{let I={},e=g=>{g.forEach(r=>{I[r]=!0})};return K(A)?e(A):e(String(A).split(t)),I},PI=()=>{},xI=(A,t)=>(A=+A,Number.isFinite(A)?A:t),RA="abcdefghijklmnopqrstuvwxyz",ot="0123456789",at={DIGIT:ot,ALPHA:RA,ALPHA_DIGIT:RA+RA.toUpperCase()+ot},jI=(A=16,t=at.ALPHA_DIGIT)=>{let I="",{length:e}=t;for(;A--;)I+=t[Math.random()*e|0];return I};function WI(A){return!!(A&&N(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var ZI=A=>{let t=new Array(10),I=(e,g)=>{if(QA(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[g]=e;let r=K(e)?[]:{};return V(e,(o,n)=>{let c=I(o,g+1);!Z(c)&&(r[n]=c)}),t[g]=void 0,r}}return e};return I(A,0)},VI=U("AsyncFunction"),XI=A=>A&&(QA(A)||N(A))&&N(A.then)&&N(A.catch),C={isArray:K,isArrayBuffer:it,isBuffer:lI,isFormData:SI,isArrayBufferView:DI,isString:uI,isNumber:Ct,isBoolean:hI,isObject:QA,isPlainObject:BA,isUndefined:Z,isDate:dI,isFile:yI,isBlob:wI,isRegExp:KI,isFunction:N,isStream:pI,isURLSearchParams:FI,isTypedArray:HI,isFileList:mI,forEach:V,merge:NA,extend:NI,trim:RI,stripBOM:UI,inherits:GI,toFlatObject:kI,kindOf:sA,kindOfTest:U,endsWith:LI,toArray:JI,forEachEntry:YI,matchAll:bI,isHTMLForm:MI,hasOwnProperty:rt,hasOwnProp:rt,reduceDescriptors:Qt,freezeMethods:OI,toObjectSet:TI,toCamelCase:qI,noop:PI,toFiniteNumber:xI,findKey:Bt,global:st,isContextDefined:nt,ALPHABET:at,generateString:jI,isSpecCompliantForm:WI,toJSONObject:ZI,isAsyncFn:VI,isThenable:XI};function O(A,t,I,e,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),I&&(this.config=I),e&&(this.request=e),g&&(this.response=g)}C.inherits(O,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:C.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Et=O.prototype,ct={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ct[A]={value:A}});Object.defineProperties(O,ct);Object.defineProperty(Et,"isAxiosError",{value:!0});O.from=(A,t,I,e,g,r)=>{let o=Object.create(Et);return C.toFlatObject(A,o,function(c){return c!==Error.prototype},n=>n!=="isAxiosError"),O.call(o,A.message,t,I,e,g),o.cause=A,o.name=A.name,r&&Object.assign(o,r),o};var l=O;var aA=null;function GA(A){return C.isPlainObject(A)||C.isArray(A)}function lt(A){return C.endsWith(A,"[]")?A.slice(0,-2):A}function ft(A,t,I){return A?A.concat(t).map(function(g,r){return g=lt(g),!I&&r?"["+g+"]":g}).join(I?".":""):t}function zI(A){return C.isArray(A)&&!A.some(GA)}var _I=C.toFlatObject(C,{},null,function(t){return/^is[A-Z]/.test(t)});function vI(A,t,I){if(!C.isObject(A))throw new TypeError("target must be an object");t=t||new(aA||FormData),I=C.toFlatObject(I,{metaTokens:!0,dots:!1,indexes:!1},!1,function(E,u){return!C.isUndefined(u[E])});let e=I.metaTokens,g=I.visitor||B,r=I.dots,o=I.indexes,c=(I.Blob||typeof Blob<"u"&&Blob)&&C.isSpecCompliantForm(t);if(!C.isFunction(g))throw new TypeError("visitor must be a function");function Q(a){if(a===null)return"";if(C.isDate(a))return a.toISOString();if(!c&&C.isBlob(a))throw new l("Blob is not supported. Use a Buffer instead.");return C.isArrayBuffer(a)||C.isTypedArray(a)?c&&typeof Blob=="function"?new Blob([a]):Buffer.from(a):a}function B(a,E,u){let y=a;if(a&&!u&&typeof a=="object"){if(C.endsWith(E,"{}"))E=e?E:E.slice(0,-2),a=JSON.stringify(a);else if(C.isArray(a)&&zI(a)||(C.isFileList(a)||C.endsWith(E,"[]"))&&(y=C.toArray(a)))return E=lt(E),y.forEach(function(R,tI){!(C.isUndefined(R)||R===null)&&t.append(o===!0?ft([E],tI,r):o===null?E:E+"[]",Q(R))}),!1}return GA(a)?!0:(t.append(ft(u,E,r),Q(a)),!1)}let i=[],f=Object.assign(_I,{defaultVisitor:B,convertValue:Q,isVisitable:GA});function s(a,E){if(!C.isUndefined(a)){if(i.indexOf(a)!==-1)throw Error("Circular reference detected in "+E.join("."));i.push(a),C.forEach(a,function(y,F){(!(C.isUndefined(y)||y===null)&&g.call(t,y,C.isString(F)?F.trim():F,E,f))===!0&&s(y,E?E.concat(F):[F])}),i.pop()}}if(!C.isObject(A))throw new TypeError("data must be an object");return s(A),t}var J=vI;function Dt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(e){return t[e]})}function ut(A,t){this._pairs=[],A&&J(A,this,t)}var ht=ut.prototype;ht.append=function(t,I){this._pairs.push([t,I])};ht.toString=function(t){let I=t?function(e){return t.call(this,e,Dt)}:Dt;return this._pairs.map(function(g){return I(g[0])+"="+I(g[1])},"").join("&")};var EA=ut;function $I(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function X(A,t,I){if(!t)return A;let e=I&&I.encode||$I,g=I&&I.serialize,r;if(g?r=g(t,I):r=C.isURLSearchParams(t)?t.toString():new EA(t,I).toString(e),r){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+r}return A}var kA=class{constructor(){this.handlers=[]}use(t,I,e){return this.handlers.push({fulfilled:t,rejected:I,synchronous:e?e.synchronous:!1,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){C.forEach(this.handlers,function(e){e!==null&&t(e)})}},LA=kA;var cA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var dt=typeof URLSearchParams<"u"?URLSearchParams:EA;var yt=typeof FormData<"u"?FormData:null;var wt=typeof Blob<"u"?Blob:null;var mt={isBrowser:!0,classes:{URLSearchParams:dt,FormData:yt,Blob:wt},protocols:["http","https","file","blob","url","data"]};var JA={};eI(JA,{hasBrowserEnv:()=>pt,hasStandardBrowserEnv:()=>Ae,hasStandardBrowserWebWorkerEnv:()=>te});var pt=typeof window<"u"&&typeof document<"u",Ae=(A=>pt&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),te=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function";var m={...JA,...mt};function HA(A,t){return J(A,new m.classes.URLSearchParams,Object.assign({visitor:function(I,e,g,r){return m.isNode&&C.isBuffer(I)?(this.append(e,I.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}function Ie(A){return C.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ee(A){let t={},I=Object.keys(A),e,g=I.length,r;for(e=0;e<g;e++)r=I[e],t[r]=A[r];return t}function ge(A){function t(I,e,g,r){let o=I[r++];if(o==="__proto__")return!0;let n=Number.isFinite(+o),c=r>=I.length;return o=!o&&C.isArray(g)?g.length:o,c?(C.hasOwnProp(g,o)?g[o]=[g[o],e]:g[o]=e,!n):((!g[o]||!C.isObject(g[o]))&&(g[o]=[]),t(I,e,g[o],r)&&C.isArray(g[o])&&(g[o]=ee(g[o])),!n)}if(C.isFormData(A)&&C.isFunction(A.entries)){let I={};return C.forEachEntry(A,(e,g)=>{t(Ie(e),g,I,0)}),I}return null}var fA=ge;function re(A,t,I){if(C.isString(A))try{return(t||JSON.parse)(A),C.trim(A)}catch(e){if(e.name!=="SyntaxError")throw e}return(I||JSON.stringify)(A)}var YA={transitional:cA,adapter:["xhr","http"],transformRequest:[function(t,I){let e=I.getContentType()||"",g=e.indexOf("application/json")>-1,r=C.isObject(t);if(r&&C.isHTMLForm(t)&&(t=new FormData(t)),C.isFormData(t))return g?JSON.stringify(fA(t)):t;if(C.isArrayBuffer(t)||C.isBuffer(t)||C.isStream(t)||C.isFile(t)||C.isBlob(t))return t;if(C.isArrayBufferView(t))return t.buffer;if(C.isURLSearchParams(t))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let n;if(r){if(e.indexOf("application/x-www-form-urlencoded")>-1)return HA(t,this.formSerializer).toString();if((n=C.isFileList(t))||e.indexOf("multipart/form-data")>-1){let c=this.env&&this.env.FormData;return J(n?{"files[]":t}:t,c&&new c,this.formSerializer)}}return r||g?(I.setContentType("application/json",!1),re(t)):t}],transformResponse:[function(t){let I=this.transitional||YA.transitional,e=I&&I.forcedJSONParsing,g=this.responseType==="json";if(t&&C.isString(t)&&(e&&!this.responseType||g)){let o=!(I&&I.silentJSONParsing)&&g;try{return JSON.parse(t)}catch(n){if(o)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:m.classes.FormData,Blob:m.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};C.forEach(["delete","get","head","post","put","patch"],A=>{YA.headers[A]={}});var T=YA;var oe=C.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),St=A=>{let t={},I,e,g;return A&&A.split(`%0A`).forEach(function(o){g=o.indexOf(":"),I=o.substring(0,g).trim().toLowerCase(),e=o.substring(g+1).trim(),!(!I||t[I]&&oe[I])&&(I==="set-cookie"?t[I]?t[I].push(e):t[I]=[e]:t[I]=t[I]?t[I]+", "+e:e)}),t};var Ft=Symbol("internals");function z(A){return A&&String(A).trim().toLowerCase()}function lA(A){return A===!1||A==null?A:C.isArray(A)?A.map(lA):String(A)}function ie(A){let t=Object.create(null),I=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,e;for(;e=I.exec(A);)t[e[1]]=e[2];return t}var Ce=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function bA(A,t,I,e,g){if(C.isFunction(e))return e.call(this,t,I);if(g&&(t=I),!!C.isString(t)){if(C.isString(e))return t.indexOf(e)!==-1;if(C.isRegExp(e))return e.test(t)}}function Be(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,I,e)=>I.toUpperCase()+e)}function se(A,t){let I=C.toCamelCase(" "+t);["get","set","has"].forEach(e=>{Object.defineProperty(A,e+I,{value:function(g,r,o){return this[e].call(this,t,g,r,o)},configurable:!0})})}var P=class{constructor(t){t&&this.set(t)}set(t,I,e){let g=this;function r(n,c,Q){let B=z(c);if(!B)throw new Error("header name must be a non-empty string");let i=C.findKey(g,B);(!i||g[i]===void 0||Q===!0||Q===void 0&&g[i]!==!1)&&(g[i||c]=lA(n))}let o=(n,c)=>C.forEach(n,(Q,B)=>r(Q,B,c));return C.isPlainObject(t)||t instanceof this.constructor?o(t,I):C.isString(t)&&(t=t.trim())&&!Ce(t)?o(St(t),I):t!=null&&r(I,t,e),this}get(t,I){if(t=z(t),t){let e=C.findKey(this,t);if(e){let g=this[e];if(!I)return g;if(I===!0)return ie(g);if(C.isFunction(I))return I.call(this,g,e);if(C.isRegExp(I))return I.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,I){if(t=z(t),t){let e=C.findKey(this,t);return!!(e&&this[e]!==void 0&&(!I||bA(this,this[e],e,I)))}return!1}delete(t,I){let e=this,g=!1;function r(o){if(o=z(o),o){let n=C.findKey(e,o);n&&(!I||bA(e,e[n],n,I))&&(delete e[n],g=!0)}}return C.isArray(t)?t.forEach(r):r(t),g}clear(t){let I=Object.keys(this),e=I.length,g=!1;for(;e--;){let r=I[e];(!t||bA(this,this[r],r,t,!0))&&(delete this[r],g=!0)}return g}normalize(t){let I=this,e={};return C.forEach(this,(g,r)=>{let o=C.findKey(e,r);if(o){I[o]=lA(g),delete I[r];return}let n=t?Be(r):String(r).trim();n!==r&&delete I[r],I[n]=lA(g),e[n]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let I=Object.create(null);return C.forEach(this,(e,g)=>{e!=null&&e!==!1&&(I[g]=t&&C.isArray(e)?e.join(", "):e)}),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,I])=>t+": "+I).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...I){let e=new this(t);return I.forEach(g=>e.set(g)),e}static accessor(t){let e=(this[Ft]=this[Ft]={accessors:{}}).accessors,g=this.prototype;function r(o){let n=z(o);e[n]||(se(g,o),e[n]=!0)}return C.isArray(t)?t.forEach(r):r(t),this}};P.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);C.reduceDescriptors(P.prototype,({value:A},t)=>{let I=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(e){this[I]=e}}});C.freezeMethods(P);var p=P;function _(A,t){let I=this||T,e=t||I,g=p.from(e.headers),r=e.data;return C.forEach(A,function(n){r=n.call(I,r,g.normalize(),t?t.status:void 0)}),g.normalize(),r}function v(A){return!!(A&&A.__CANCEL__)}function Rt(A,t,I){l.call(this,A??"canceled",l.ERR_CANCELED,t,I),this.name="CanceledError"}C.inherits(Rt,l,{__CANCEL__:!0});var H=Rt;function MA(A,t,I){let e=I.config.validateStatus;!I.status||!e||e(I.status)?A(I):t(new l("Request failed with status code "+I.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(I.status/100)-4],I.config,I.request,I))}var Nt=m.hasStandardBrowserEnv?{write(A,t,I,e,g,r){let o=[A+"="+encodeURIComponent(t)];C.isNumber(I)&&o.push("expires="+new Date(I).toGMTString()),C.isString(e)&&o.push("path="+e),C.isString(g)&&o.push("domain="+g),r===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function qA(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function KA(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function $(A,t){return A&&!qA(t)?KA(A,t):t}var Ut=m.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a"),e;function g(r){let o=r;return t&&(I.setAttribute("href",o),o=I.href),I.setAttribute("href",o),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^%23/,""):"",hostname:I.hostname,port:I.port,pathname:I.pathname.charAt(0)==="/"?I.pathname:"/"+I.pathname}}return e=g(window.location.href),function(o){let n=C.isString(o)?g(o):o;return n.protocol===e.protocol&&n.host===e.host}}():function(){return function(){return!0}}();function OA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function ne(A,t){A=A||10;let I=new Array(A),e=new Array(A),g=0,r=0,o;return t=t!==void 0?t:1e3,function(c){let Q=Date.now(),B=e[r];o||(o=Q),I[g]=c,e[g]=Q;let i=r,f=0;for(;i!==g;)f+=I[i++],i=i%A;if(g=(g+1)%A,g===r&&(r=(r+1)%A),Q-o<t)return;let s=B&&Q-B;return s?Math.round(f*1e3/s):void 0}}var Gt=ne;function kt(A,t){let I=0,e=Gt(50,250);return g=>{let r=g.loaded,o=g.lengthComputable?g.total:void 0,n=r-I,c=e(n),Q=r<=o;I=r;let B={loaded:r,total:o,progress:o?r/o:void 0,bytes:n,rate:c||void 0,estimated:c&&o&&Q?(o-r)/c:void 0,event:g};B[t?"download":"upload"]=!0,A(B)}}var Qe=typeof XMLHttpRequest<"u",Lt=Qe&&function(A){return new Promise(function(I,e){let g=A.data,r=p.from(A.headers).normalize(),{responseType:o,withXSRFToken:n}=A,c;function Q(){A.cancelToken&&A.cancelToken.unsubscribe(c),A.signal&&A.signal.removeEventListener("abort",c)}let B;if(C.isFormData(g)){if(m.hasStandardBrowserEnv||m.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((B=r.getContentType())!==!1){let[E,...u]=B?B.split(";").map(y=>y.trim()).filter(Boolean):[];r.setContentType([E||"multipart/form-data",...u].join("; "))}}let i=new XMLHttpRequest;if(A.auth){let E=A.auth.username||"",u=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";r.set("Authorization","Basic "+btoa(E+":"+u))}let f=$(A.baseURL,A.url);i.open(A.method.toUpperCase(),X(f,A.params,A.paramsSerializer),!0),i.timeout=A.timeout;function s(){if(!i)return;let E=p.from("getAllResponseHeaders"in i&&i.getAllResponseHeaders()),y={data:!o||o==="text"||o==="json"?i.responseText:i.response,status:i.status,statusText:i.statusText,headers:E,config:A,request:i};MA(function(R){I(R),Q()},function(R){e(R),Q()},y),i=null}if("onloadend"in i?i.onloadend=s:i.onreadystatechange=function(){!i||i.readyState!==4||i.status===0&&!(i.responseURL&&i.responseURL.indexOf("file:")===0)||setTimeout(s)},i.onabort=function(){i&&(e(new l("Request aborted",l.ECONNABORTED,A,i)),i=null)},i.onerror=function(){e(new l("Network Error",l.ERR_NETWORK,A,i)),i=null},i.ontimeout=function(){let u=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",y=A.transitional||cA;A.timeoutErrorMessage&&(u=A.timeoutErrorMessage),e(new l(u,y.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,i)),i=null},m.hasStandardBrowserEnv&&(n&&C.isFunction(n)&&(n=n(A)),n||n!==!1&&Ut(f))){let E=A.xsrfHeaderName&&A.xsrfCookieName&&Nt.read(A.xsrfCookieName);E&&r.set(A.xsrfHeaderName,E)}g===void 0&&r.setContentType(null),"setRequestHeader"in i&&C.forEach(r.toJSON(),function(u,y){i.setRequestHeader(y,u)}),C.isUndefined(A.withCredentials)||(i.withCredentials=!!A.withCredentials),o&&o!=="json"&&(i.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&i.addEventListener("progress",kt(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&i.upload&&i.upload.addEventListener("progress",kt(A.onUploadProgress)),(A.cancelToken||A.signal)&&(c=E=>{i&&(e(!E||E.type?new H(null,A,i):E),i.abort(),i=null)},A.cancelToken&&A.cancelToken.subscribe(c),A.signal&&(A.signal.aborted?c():A.signal.addEventListener("abort",c)));let a=OA(f);if(a&&m.protocols.indexOf(a)===-1){e(new l("Unsupported protocol "+a+":",l.ERR_BAD_REQUEST,A));return}i.send(g||null)})};var TA={http:aA,xhr:Lt};C.forEach(TA,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Jt=A=>`- ${A}`,ae=A=>C.isFunction(A)||A===null||A===!1,DA={getAdapter:A=>{A=C.isArray(A)?A:[A];let{length:t}=A,I,e,g={};for(let r=0;r<t;r++){I=A[r];let o;if(e=I,!ae(I)&&(e=TA[(o=String(I)).toLowerCase()],e===void 0))throw new l(`Unknown adapter \'${o}\'`);if(e)break;g[o||"%23"+r]=e}if(!e){let r=Object.entries(g).map(([n,c])=>`adapter ${n} `+(c===!1?"is not supported by the environment":"is not available in the build")),o=t?r.length>1?`since :%0A`+r.map(Jt).join(`%0A`):" "+Jt(r[0]):"as no adapter specified";throw new l("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return e},adapters:TA};function PA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new H(null,A)}function uA(A){return PA(A),A.headers=p.from(A.headers),A.data=_.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),DA.getAdapter(A.adapter||T.adapter)(A).then(function(e){return PA(A),e.data=_.call(A,A.transformResponse,e),e.headers=p.from(e.headers),e},function(e){return v(e)||(PA(A),e&&e.response&&(e.response.data=_.call(A,A.transformResponse,e.response),e.response.headers=p.from(e.response.headers))),Promise.reject(e)})}var Ht=A=>A instanceof p?{...A}:A;function k(A,t){t=t||{};let I={};function e(Q,B,i){return C.isPlainObject(Q)&&C.isPlainObject(B)?C.merge.call({caseless:i},Q,B):C.isPlainObject(B)?C.merge({},B):C.isArray(B)?B.slice():B}function g(Q,B,i){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q,i)}else return e(Q,B,i)}function r(Q,B){if(!C.isUndefined(B))return e(void 0,B)}function o(Q,B){if(C.isUndefined(B)){if(!C.isUndefined(Q))return e(void 0,Q)}else return e(void 0,B)}function n(Q,B,i){if(i in t)return e(Q,B);if(i in A)return e(void 0,Q)}let c={url:r,method:r,data:r,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:n,headers:(Q,B)=>g(Ht(Q),Ht(B),!0)};return C.forEach(Object.keys(Object.assign({},A,t)),function(B){let i=c[B]||g,f=i(A[B],t[B],B);C.isUndefined(f)&&i!==n||(I[B]=f)}),I}var hA="1.6.8";var xA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{xA[A]=function(e){return typeof e===A||"a"+(t<1?"n ":" ")+A}});var Yt={};xA.transitional=function(t,I,e){function g(r,o){return"[Axios v"+hA+"] Transitional option \'"+r+"\'"+o+(e?". "+e:"")}return(r,o,n)=>{if(t===!1)throw new l(g(o," has been removed"+(I?" in "+I:"")),l.ERR_DEPRECATED);return I&&!Yt[o]&&(Yt[o]=!0,console.warn(g(o," has been deprecated since v"+I+" and will be removed in the near future"))),t?t(r,o,n):!0}};function Ee(A,t,I){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let e=Object.keys(A),g=e.length;for(;g-- >0;){let r=e[g],o=t[r];if(o){let n=A[r],c=n===void 0||o(n,r,A);if(c!==!0)throw new l("option "+r+" must be "+c,l.ERR_BAD_OPTION_VALUE);continue}if(I!==!0)throw new l("Unknown option "+r,l.ERR_BAD_OPTION)}}var dA={assertOptions:Ee,validators:xA};var Y=dA.validators,x=class{constructor(t){this.defaults=t,this.interceptors={request:new LA,response:new LA}}async request(t,I){try{return await this._request(t,I)}catch(e){if(e instanceof Error){let g;Error.captureStackTrace?Error.captureStackTrace(g={}):g=new Error;let r=g.stack?g.stack.replace(/^.+\\n/,""):"";e.stack?r&&!String(e.stack).endsWith(r.replace(/^.+\\n.+\\n/,""))&&(e.stack+=`%0A`+r):e.stack=r}throw e}}_request(t,I){typeof t=="string"?(I=I||{},I.url=t):I=t||{},I=k(this.defaults,I);let{transitional:e,paramsSerializer:g,headers:r}=I;e!==void 0&&dA.assertOptions(e,{silentJSONParsing:Y.transitional(Y.boolean),forcedJSONParsing:Y.transitional(Y.boolean),clarifyTimeoutError:Y.transitional(Y.boolean)},!1),g!=null&&(C.isFunction(g)?I.paramsSerializer={serialize:g}:dA.assertOptions(g,{encode:Y.function,serialize:Y.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let o=r&&C.merge(r.common,r[I.method]);r&&C.forEach(["delete","get","head","post","put","patch","common"],a=>{delete r[a]}),I.headers=p.concat(o,r);let n=[],c=!0;this.interceptors.request.forEach(function(E){typeof E.runWhen=="function"&&E.runWhen(I)===!1||(c=c&&E.synchronous,n.unshift(E.fulfilled,E.rejected))});let Q=[];this.interceptors.response.forEach(function(E){Q.push(E.fulfilled,E.rejected)});let B,i=0,f;if(!c){let a=[uA.bind(this),void 0];for(a.unshift.apply(a,n),a.push.apply(a,Q),f=a.length,B=Promise.resolve(I);i<f;)B=B.then(a[i++],a[i++]);return B}f=n.length;let s=I;for(i=0;i<f;){let a=n[i++],E=n[i++];try{s=a(s)}catch(u){E.call(this,u);break}}try{B=uA.call(this,s)}catch(a){return Promise.reject(a)}for(i=0,f=Q.length;i<f;)B=B.then(Q[i++],Q[i++]);return B}getUri(t){t=k(this.defaults,t);let I=$(t.baseURL,t.url);return X(I,t.params,t.paramsSerializer)}};C.forEach(["delete","get","head","options"],function(t){x.prototype[t]=function(I,e){return this.request(k(e||{},{method:t,url:I,data:(e||{}).data}))}});C.forEach(["post","put","patch"],function(t){function I(e){return function(r,o,n){return this.request(k(n||{},{method:t,headers:e?{"Content-Type":"multipart/form-data"}:{},url:r,data:o}))}}x.prototype[t]=I(),x.prototype[t+"Form"]=I(!0)});var AA=x;var jA=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let I;this.promise=new Promise(function(r){I=r});let e=this;this.promise.then(g=>{if(!e._listeners)return;let r=e._listeners.length;for(;r-- >0;)e._listeners[r](g);e._listeners=null}),this.promise.then=g=>{let r,o=new Promise(n=>{e.subscribe(n),r=n}).then(g);return o.cancel=function(){e.unsubscribe(r)},o},t(function(r,o,n){e.reason||(e.reason=new H(r,o,n),I(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let I=this._listeners.indexOf(t);I!==-1&&this._listeners.splice(I,1)}static source(){let t;return{token:new A(function(g){t=g}),cancel:t}}},bt=jA;function WA(A){return function(I){return A.apply(null,I)}}function ZA(A){return C.isObject(A)&&A.isAxiosError===!0}var VA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(VA).forEach(([A,t])=>{VA[t]=A});var Mt=VA;function qt(A){let t=new AA(A),I=W(AA.prototype.request,t);return C.extend(I,AA.prototype,t,{allOwnKeys:!0}),C.extend(I,t,null,{allOwnKeys:!0}),I.create=function(g){return qt(k(A,g))},I}var h=qt(T);h.Axios=AA;h.CanceledError=H;h.CancelToken=bt;h.isCancel=v;h.VERSION=hA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(t){return Promise.all(t)};h.spread=WA;h.isAxiosError=ZA;h.mergeConfig=k;h.AxiosHeaders=p;h.formToJSON=A=>fA(C.isHTMLForm(A)?new FormData(A):A);h.getAdapter=DA.getAdapter;h.HttpStatusCode=Mt;h.default=h;var yA=h;var{Axios:io,AxiosError:Co,CanceledError:Bo,isCancel:so,CancelToken:no,VERSION:Qo,all:ao,Cancel:Eo,isAxiosError:co,spread:fo,toFormData:lo,AxiosHeaders:Do,HttpStatusCode:uo,formToJSON:ho,getAdapter:yo,mergeConfig:wo}=yA;var tA,L,zA,XA={env:{emscripten_notify_memory_growth:function(A){zA=new Uint8Array(L.exports.memory.buffer)}}},wA=class{init(){return tA||(typeof fetch<"u"?tA=fetch("data:application/wasm;base64,"+Kt).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,XA)).then(this._init):tA=WebAssembly.instantiate(Buffer.from(Kt,"base64"),XA).then(this._init),tA)}_init(t){L=t.instance,XA.env.emscripten_notify_memory_growth(0)}decode(t,I=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let e=t.byteLength,g=L.exports.malloc(e);zA.set(t,g),I=I||Number(L.exports.ZSTD_findDecompressedSize(g,e));let r=L.exports.malloc(I),o=L.exports.ZSTD_decompress(r,I,g,e),n=zA.slice(r,r+o);return L.exports.free(g),L.exports.free(r),n}},Kt="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var Ot=new wA,Tt=!1;async function ce(A,t,I){let e=null;typeof A!="string"?e=A.href:A.startsWith("http")?e=A:e=`${t}/${A}`,e.endsWith(".js")&&(e=e.substring(0,e.length-3)),e.endsWith(".wasm")&&(e=e.substring(0,e.length-5));let g=`${e}.wasm`,r=await yA.get(`${g}.zst`,{responseType:"arraybuffer",params:I});Tt||(await Ot.init(),Tt=!0);let n=Ot.decode(new Uint8Array(r.data)).buffer;return(await import(`${e}.js`)).default({wasmBinary:n})}var Pt=ce;var mA=new Map;async function fe(A,t,I){let e=A,g=A,r=null;return typeof A!="string"&&(e=new URL(A.href),g=e.href),mA.has(g)?r=await mA.get(g):(mA.set(g,Pt(e,t,I)),r=await mA.get(g)),r}var xt=fe;var le={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},D=le;var De={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},S=De;var ue={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},j=ue;function he(A,t){let I=null;switch(A){case S.UInt8:{I=new Uint8Array(t);break}case S.Int8:{I=new Int8Array(t);break}case S.UInt16:{I=new Uint16Array(t);break}case S.Int16:{I=new Int16Array(t);break}case S.UInt32:{I=new Uint32Array(t);break}case S.Int32:{I=new Int32Array(t);break}case S.UInt64:{typeof globalThis.BigUint64Array=="function"?I=new BigUint64Array(t):I=new Uint8Array(t);break}case S.Int64:{typeof globalThis.BigInt64Array=="function"?I=new BigInt64Array(t):I=new Uint8Array(t);break}case j.Float32:{I=new Float32Array(t);break}case j.Float64:{I=new Float64Array(t);break}case"null":{I=null;break}case null:{I=null;break}default:throw new Error("Type is not supported as a TypedArray")}return I}var G=he;var Zt=typeof globalThis.SharedArrayBuffer=="function",jt=new TextEncoder,Wt=new TextDecoder("utf-8");function de(A,t){let I={flags:"r",encoding:"binary"},e=A.fs_open(t,I.flags),r=A.fs_stat(t).size,o=null;Zt?o=new SharedArrayBuffer(r):o=new ArrayBuffer(r);let n=new Uint8Array(o);return A.fs_read(e,n,0,r,0),A.fs_close(e),n}function Vt(A,t,I){let e=null;Zt?e=new SharedArrayBuffer(I):e=new ArrayBuffer(I);let g=new Uint8Array(e),r=new Uint8Array(A.HEAPU8.buffer,t,I);return g.set(r),g}function d(A,t,I,e){let g=0;return t!==null&&(g=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,I,e,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),g)),g}function b(A,t,I){let e=JSON.stringify(t),g=A.lengthBytesUTF8(e)+1,r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,I,g]);A.stringToUTF8(e,r,g)}function w(A,t,I,e){let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,I]),r=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,I]),o=Vt(A,g,r);return G(e,o.buffer)}function IA(A,t){let I=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),e=A.UTF8ToString(I);return JSON.parse(e)}function ye(A,t,I,e){e!=null&&e.length>0&&e.forEach(function(Q,B){switch(Q.type){case D.TextStream:{let i=jt.encode(Q.data.data),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};b(A,s,B);break}case D.JsonCompatible:{let i=jt.encode(JSON.stringify(Q.data)),f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};b(A,s,B);break}case D.BinaryStream:{let i=Q.data.data,f=d(A,i,B,0),s={size:i.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};b(A,s,B);break}case D.TextFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.BinaryFile:{A.fs_writeFile(Q.data.path,Q.data.data);break}case D.Image:{let i=Q.data,f=d(A,i.data,B,0),s=d(A,i.direction,B,1),a=typeof i.metadata?.entries<"u"?Array.from(i.metadata.entries()):[],E={imageType:i.imageType,name:i.name,origin:i.origin,spacing:i.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:i.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:a};b(A,E,B);break}case D.Mesh:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.cells,B,1),a=d(A,i.pointData,B,2),E=d(A,i.cellData,B,3),u={meshType:i.meshType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:i.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:i.cellBufferSize,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${a}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${E}`};b(A,u,B);break}case D.PointSet:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.pointData,B,1),a={pointSetType:i.pointSetType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};b(A,a,B);break}case D.TransformList:{let i=Q.data,f=[];i.forEach((s,a)=>{let u=`data:application/vnd.itk.address,0:${d(A,s.fixedParameters,B,a*2)}`,F=`data:application/vnd.itk.address,0:${d(A,s.parameters,B,a*2+1)}`,R={transformType:s.transformType,numberOfFixedParameters:s.numberOfFixedParameters,numberOfParameters:s.numberOfParameters,name:s.name,inputSpaceName:s.inputSpaceName,outputSpaceName:s.outputSpaceName,parameters:F,fixedParameters:u};f.push(R)}),b(A,f,B);break}case D.PolyData:{let i=Q.data,f=d(A,i.points,B,0),s=d(A,i.vertices,B,1),a=d(A,i.lines,B,2),E=d(A,i.polygons,B,3),u=d(A,i.triangleStrips,B,4),y=d(A,i.pointData,B,5),F=d(A,i.pointData,B,6),R={polyDataType:i.polyDataType,name:i.name,numberOfPoints:i.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:i.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:i.linesBufferSize,lines:`data:application/vnd.itk.address,0:${a}`,polygonsBufferSize:i.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${E}`,triangleStripsBufferSize:i.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:i.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${y}`,numberOfCellPixels:i.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${F}`};b(A,R,B);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let g=A.stackSave(),r=0;try{r=A.callMain(t.slice())}catch(Q){throw typeof Q=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(Q)):console.error("Build module in Debug mode for exception message information.")),Q}finally{A.stackRestore(g)}let o=A.getModuleStdout(),n=A.getModuleStderr(),c=[];return I!=null&&I.length>0&&r===0&&I.forEach(function(Q,B){let i=null;switch(Q.type){case D.TextStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),a=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),E=new Uint8Array(A.HEAPU8.buffer,s,a);i={data:Wt.decode(E)};break}case D.JsonCompatible:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),a=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),E=new Uint8Array(A.HEAPU8.buffer,s,a);i=JSON.parse(Wt.decode(E));break}case D.BinaryStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),a=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);i={data:Vt(A,s,a)};break}case D.TextFile:{i={path:Q.data.path,data:A.fs_readFile(Q.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{i={path:Q.data.path,data:de(A,Q.data.path)};break}case D.Image:{let s=IA(A,B);s.data=w(A,B,0,s.imageType.componentType),s.direction=w(A,B,1,j.Float64),s.metadata=new Map(s.metadata),i=s;break}case D.Mesh:{let s=IA(A,B);s.numberOfPoints>0?s.points=w(A,B,0,s.meshType.pointComponentType):s.points=G(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=w(A,B,1,s.meshType.cellComponentType):s.cells=G(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=w(A,B,2,s.meshType.pointPixelComponentType):s.pointData=G(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=w(A,B,3,s.meshType.cellPixelComponentType):s.cellData=G(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.PointSet:{let s=IA(A,B);s.numberOfPoints>0?s.points=w(A,B,0,s.pointSetType.pointComponentType):s.points=G(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=w(A,B,1,s.pointSetType.pointPixelComponentType):s.pointData=G(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),i=s;break}case D.TransformList:{let s=IA(A,B);s.forEach((a,E)=>{a.numberOfFixedParameters>0&&(s[E].fixedParameters=w(A,B,E*2,a.transformType.parametersValueType)),a.numberOfFixedParameters>0&&(s[E].parameters=w(A,B,E*2+1,a.transformType.parametersValueType))}),i=s;break}case D.PolyData:{let s=IA(A,B);s.numberOfPoints>0?s.points=w(A,B,0,j.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=w(A,B,1,S.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=w(A,B,2,S.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=w(A,B,3,S.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=w(A,B,4,S.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=w(A,B,5,s.polyDataType.pointPixelComponentType):s.pointData=G(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=w(A,B,6,s.polyDataType.cellPixelComponentType):s.cellData=G(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),i=s;break}default:throw Error("Unsupported output InterfaceType")}let f={type:Q.type,data:i};c.push(f)}),{returnValue:r,stdout:o,stderr:n,outputs:c}}var Xt=ye;var we=typeof globalThis.SharedArrayBuffer<"u";function me(A,t){if(A==null)return[];let I=[];for(let e=0;e<A.length;e++){let g=pe(A[e],t);g!==null&&I.push(g)}return I}function pe(A,t){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),we&&I instanceof SharedArrayBuffer?null:t?I:I.slice(0)}var zt=me;function Se(A){return[A.data,A.direction]}var _t=Se;function Fe(A){return[A.points,A.pointData,A.cells,A.cellData]}var vt=Fe;function Re(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var $t=Re;async function Ne(A,t,I,e){let g=Xt(A,t,I,e),r=[];return g.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let n=o.data;r.push(n)}else if(o.type===D.Image){let n=o.data;r.push(..._t(n))}else if(o.type===D.Mesh){let n=o.data;r.push(...vt(n))}else if(o.type===D.PolyData){let n=o.data;r.push(...$t(n))}}),FA(g,zt(r,!0))}var AI=Ne;var Ue={runPipeline:async function(A,t,I,e,g,r){let o=await xt(A,t,r);return await AI(o,I,e,g)}};CA(Ue);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';ht(Dt);export{ci as applyPresentationStateToImage,F as getDefaultWebWorker,h as getPipelineWorkerUrl,w as getPipelinesBaseUrl,Bi as readDicomEncapsulatedPdf,mi as readDicomTags,wi as readImageDicomFileSeries,le as readImageDicomFileSeriesWorkerFunction,Fi as readOverlappingSegmentation,Si as readSegmentation,eI as setDefaultWebWorker,ht as setPipelineWorkerUrl,_s as setPipelinesBaseUrl,fi as structuredReportToHtml,pi as structuredReportToText,RA as version,Oi as writeMultiSegmentation,Ni as writeOverlappingSegmentation,Ri as writeSegmentation};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
