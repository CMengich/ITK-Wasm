# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var fr="1.0.0-b.154",re=fr;var cr={pipelineWorkerUrl:`https://cdn.jsdelivr.net/npm/itk-wasm@${re}/dist/core/web-workers/bundles/pipeline.min.worker.js`,imageIOUrl:`https://cdn.jsdelivr.net/npm/itk-image-io@${re}`,meshIOUrl:`https://cdn.jsdelivr.net/npm/itk-mesh-io@${re}`,pipelinesUrl:`https://cdn.jsdelivr.net/npm/itk-wasm@${re}/dist/pipelines`},v=cr;var dr={TextFile:"InterfaceTextFile",BinaryFile:"InterfaceBinaryFile",TextStream:"InterfaceTextStream",BinaryStream:"InterfaceBinaryStream",Image:"InterfaceImage",Mesh:"InterfaceMesh",PolyData:"InterfacePolyData",JsonCompatible:"InterfaceJsonCompatible"},m=dr;var Br={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},Q=Br;var Cr={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},S=Cr;var yr={Text:"Text",Binary:"Binary",Image:"Image",Mesh:"Mesh"},W=yr;var Er={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},ue=Er;function Qr(e,A,t,r,a){e[r+t*A]=a}var st=Qr;var Ne=class{constructor(A=2,t=Q.UInt8,r=ue.Scalar,a=1){this.dimension=A,this.componentType=t,this.pixelType=r,this.components=a}},It=Ne;var Pe=class{constructor(A=new It){this.imageType=A,this.name="image";let t=A.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)st(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},K=Pe;function hr(e,A){let t=null;switch(e){case Q.UInt8:{t=new Uint8Array(A);break}case Q.Int8:{t=new Int8Array(A);break}case Q.UInt16:{t=new Uint16Array(A);break}case Q.Int16:{t=new Int16Array(A);break}case Q.UInt32:{t=new Uint32Array(A);break}case Q.Int32:{t=new Int32Array(A);break}case Q.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(A):t=new Uint8Array(A);break}case Q.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(A):t=new Uint8Array(A);break}case S.Float32:{t=new Float32Array(A);break}case S.Float64:{t=new Float64Array(A);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var D=hr;function wr(e){let A=new K(e.imageType);if(A.name=e.name,A.origin=Array.from(e.origin),A.spacing=Array.from(e.spacing),A.direction=e.direction.slice(),A.size=Array.from(e.size),e.data!==null){let t=e.data.constructor;A.data=new t(e.data.length),A.data!=null&&A.data.set(e.data,0)}return A}var xe=wr;function Rr(e){if(e.length<1)throw Error("At least one images is required.");let A=e[0];if(A.data===null)throw Error("Image data is null.");let t=new K(A.imageType);t.origin=Array.from(A.origin),t.spacing=Array.from(A.spacing);let r=t.imageType.dimension;t.direction=A.direction.slice();let a=r-1;t.size=Array.from(A.size);let o=e.reduce((n,u)=>n+u.size[a],0);t.size[a]=o;let i=t.size.reduce((n,u)=>n*u,1)*t.imageType.components,l=A.data.constructor;t.data=new l(i);let f=t.imageType.components;for(let n=0;n<t.size.length-1;n++)f*=t.size[n];let g=0;if(t.data!=null)for(let n=0;n<e.length;n++)t.data.set(e[n].data,f*g),g+=e[n].size[a];else throw Error("Could not create result image data.");return t}var Ge=Rr;function br(e,A){let t=Object.assign({},e.imageType);if(typeof A<"u"&&typeof A.pixelType<"u"&&(t.pixelType=A.pixelType,A.pixelType===ue.Scalar&&t.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType&&(t.componentType=A.componentType);let r=new K(t);if(r.name=e.name,r.origin=Array.from(e.origin),r.spacing=Array.from(e.spacing),r.direction=e.direction.slice(),r.size=Array.from(e.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(e.metadata)))),e.data!==null)if(typeof A<"u"&&typeof A.componentType<"u"&&A.componentType!==e.imageType.componentType)switch(e.imageType.componentType){case Q.UInt8:case Q.Int8:case Q.UInt16:case Q.Int16:case Q.UInt32:case Q.Int32:case S.Float32:case S.Float64:switch(r.imageType.componentType){case Q.UInt8:r.data=new Uint8Array(e.data);break;case Q.Int8:r.data=new Int8Array(e.data);break;case Q.UInt16:r.data=new Uint16Array(e.data);break;case Q.Int16:r.data=new Int16Array(e.data);break;case Q.UInt32:r.data=new Uint32Array(e.data);break;case Q.Int32:r.data=new Int32Array(e.data);break;case S.Float32:r.data=new Float32Array(e.data);break;case S.Float64:r.data=new Float64Array(e.data);break;case Q.UInt64:r.data=new BigUint64Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=BigInt.asIntN(64,BigInt(e.data[a]));break;case Q.Int64:r.data=new BigInt64Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=BigInt.asUintN(64,BigInt(e.data[a]));break}break;case Q.UInt64:case Q.Int64:switch(r.imageType.componentType){case Q.UInt8:r.data=new Uint8Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case Q.Int8:r.data=new Int8Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case Q.UInt16:r.data=new Uint16Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case Q.Int16:r.data=new Int16Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case Q.UInt32:r.data=new Uint32Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case Q.Int32:r.data=new Int32Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case S.Float32:r.data=new Float32Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case S.Float64:r.data=new Float64Array(e.data.length);for(let a=0;a<r.data.length;a++)r.data[a]=Number(e.data[a]);break;case Q.UInt64:r.data=new BigUint64Array(e.data);break;case Q.Int64:r.data=new BigInt64Array(e.data);break}break}else{let a=e.data.constructor;r.data=new a(e.data.length),r.data!=null&&r.data.set(e.data,0)}return r}var T=br;var kr=function(e,A){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&A.indexOf(r)<0&&(t[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)A.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]]);return t},Te=class{constructor(A,t){this.fcn=t,this.workerQueue=new Array(A),this.workerQueue.fill(null),this.runInfo=[]}runTasks(A,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((a,o)=>{r.resolve=a,r.reject=o,r.results=new Array(A.length),r.completedTasks=0,r.addingTasks=!0,A.forEach((i,l)=>{this.addTask(r.index,l,i)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let A=0;A<this.workerQueue.length;A++){let t=this.workerQueue[A];t?.terminate(),this.workerQueue[A]=null}}cancel(A){let t=this.runInfo[A];t!=null&&(t.canceled=!0)}addTask(A,t,r){let a=this.runInfo[A];if(a?.canceled===!0){a.reject("Remaining tasks canceled"),this.clearTask(a.index);return}if(this.workerQueue.length>0){let o=this.workerQueue.pop();a.runningWorkers++,this.fcn(o,...r).then(i=>{var{webWorker:l}=i,f=kr(i,["webWorker"]);if(this.workerQueue.push(l),this.runInfo[A]!==null){if(a.runningWorkers--,a.results[t]=f,a.completedTasks++,a.progressCallback!=null&&a.progressCallback(a.completedTasks,a.results.length),a.taskQueue.length>0){let g=a.taskQueue.shift();this.addTask(A,g[0],g[1])}else if(!a.addingTasks&&a.runningWorkers===0){let g=a.results;a.resolve(g),this.clearTask(a.index)}}}).catch(i=>{a.reject(i),this.clearTask(a.index)})}else a.runningWorkers!==0||a.postponed?a.taskQueue.push([t,r]):(a.postponed=!0,setTimeout(()=>{a.postponed=!1,this.addTask(a.index,t,r)},50))}clearTask(A){this.runInfo[A].results=[],this.runInfo[A].taskQueue=[],this.runInfo[A].progressCallback=null,this.runInfo[A].canceled=null,this.runInfo[A].reject=()=>{},this.runInfo[A].resolve=()=>{}}},Je=Te;var Dr=typeof globalThis.SharedArrayBuffer<"u";function Fr(e){if(e==null)return[];let A=[];for(let t=0;t<e.length;t++){let r=Or(e[t]);r!==null&&A.push(r)}return A}function Or(e){if(e==null)return null;let A=null;return e.buffer!==void 0?A=e.buffer:e.byteLength!==void 0&&(A=e),Dr&&A instanceof SharedArrayBuffer?null:A}var lt=Fr;function ie(e,A){return function(){return e.apply(A,arguments)}}var{toString:Ur}=Object.prototype,{getPrototypeOf:He}=Object,ce=(e=>A=>{let t=Ur.call(A);return e[t]||(e[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),x=e=>(e=e.toLowerCase(),A=>ce(A)===e),de=e=>A=>typeof A===e,{isArray:j}=Array,ae=de("undefined");function Sr(e){return e!==null&&!ae(e)&&e.constructor!==null&&!ae(e.constructor)&&P(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}var mt=x("ArrayBuffer");function Wr(e){let A;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?A=ArrayBuffer.isView(e):A=e&&e.buffer&&mt(e.buffer),A}var Nr=de("string"),P=de("function"),ut=de("number"),Be=e=>e!==null&&typeof e=="object",Pr=e=>e===!0||e===!1,fe=e=>{if(ce(e)!=="object")return!1;let A=He(e);return(A===null||A===Object.prototype||Object.getPrototypeOf(A)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},xr=x("Date"),Gr=x("File"),Tr=x("Blob"),Jr=x("FileList"),Lr=e=>Be(e)&&P(e.pipe),Mr=e=>{let A;return e&&(typeof FormData=="function"&&e instanceof FormData||P(e.append)&&((A=ce(e))==="formdata"||A==="object"&&P(e.toString)&&e.toString()==="[object FormData]"))},Hr=x("URLSearchParams"),Yr=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function oe(e,A,{allOwnKeys:t=!1}={}){if(e===null||typeof e>"u")return;let r,a;if(typeof e!="object"&&(e=[e]),j(e))for(r=0,a=e.length;r<a;r++)A.call(null,e[r],r,e);else{let o=t?Object.getOwnPropertyNames(e):Object.keys(e),i=o.length,l;for(r=0;r<i;r++)l=o[r],A.call(null,e[l],l,e)}}function ft(e,A){A=A.toLowerCase();let t=Object.keys(e),r=t.length,a;for(;r-- >0;)if(a=t[r],A===a.toLowerCase())return a;return null}var ct=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),dt=e=>!ae(e)&&e!==ct;function Me(){let{caseless:e}=dt(this)&&this||{},A={},t=(r,a)=>{let o=e&&ft(A,a)||a;fe(A[o])&&fe(r)?A[o]=Me(A[o],r):fe(r)?A[o]=Me({},r):j(r)?A[o]=r.slice():A[o]=r};for(let r=0,a=arguments.length;r<a;r++)arguments[r]&&oe(arguments[r],t);return A}var qr=(e,A,t,{allOwnKeys:r}={})=>(oe(A,(a,o)=>{t&&P(a)?e[o]=ie(a,t):e[o]=a},{allOwnKeys:r}),e),vr=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),Kr=(e,A,t,r)=>{e.prototype=Object.create(A.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:A.prototype}),t&&Object.assign(e.prototype,t)},jr=(e,A,t,r)=>{let a,o,i,l={};if(A=A||{},e==null)return A;do{for(a=Object.getOwnPropertyNames(e),o=a.length;o-- >0;)i=a[o],(!r||r(i,e,A))&&!l[i]&&(A[i]=e[i],l[i]=!0);e=t!==!1&&He(e)}while(e&&(!t||t(e,A))&&e!==Object.prototype);return A},_r=(e,A,t)=>{e=String(e),(t===void 0||t>e.length)&&(t=e.length),t-=A.length;let r=e.indexOf(A,t);return r!==-1&&r===t},zr=e=>{if(!e)return null;if(j(e))return e;let A=e.length;if(!ut(A))return null;let t=new Array(A);for(;A-- >0;)t[A]=e[A];return t},Vr=(e=>A=>e&&A instanceof e)(typeof Uint8Array<"u"&&He(Uint8Array)),Zr=(e,A)=>{let r=(e&&e[Symbol.iterator]).call(e),a;for(;(a=r.next())&&!a.done;){let o=a.value;A.call(e,o[0],o[1])}},Xr=(e,A)=>{let t,r=[];for(;(t=e.exec(A))!==null;)r.push(t);return r},$r=x("HTMLFormElement"),ei=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,a){return r.toUpperCase()+a}),gt=(({hasOwnProperty:e})=>(A,t)=>e.call(A,t))(Object.prototype),Ai=x("RegExp"),Bt=(e,A)=>{let t=Object.getOwnPropertyDescriptors(e),r={};oe(t,(a,o)=>{let i;(i=A(a,o,e))!==!1&&(r[o]=i||a)}),Object.defineProperties(e,r)},ti=e=>{Bt(e,(A,t)=>{if(P(e)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=e[t];if(P(r)){if(A.enumerable=!1,"writable"in A){A.writable=!1;return}A.set||(A.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},ri=(e,A)=>{let t={},r=a=>{a.forEach(o=>{t[o]=!0})};return j(e)?r(e):r(String(e).split(A)),t},ii=()=>{},ai=(e,A)=>(e=+e,Number.isFinite(e)?e:A),Le="abcdefghijklmnopqrstuvwxyz",pt="0123456789",Ct={DIGIT:pt,ALPHA:Le,ALPHA_DIGIT:Le+Le.toUpperCase()+pt},oi=(e=16,A=Ct.ALPHA_DIGIT)=>{let t="",{length:r}=A;for(;e--;)t+=A[Math.random()*r|0];return t};function ni(e){return!!(e&&P(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}var si=e=>{let A=new Array(10),t=(r,a)=>{if(Be(r)){if(A.indexOf(r)>=0)return;if(!("toJSON"in r)){A[a]=r;let o=j(r)?[]:{};return oe(r,(i,l)=>{let f=t(i,a+1);!ae(f)&&(o[l]=f)}),A[a]=void 0,o}}return r};return t(e,0)},Ii=x("AsyncFunction"),li=e=>e&&(Be(e)||P(e))&&P(e.then)&&P(e.catch),c={isArray:j,isArrayBuffer:mt,isBuffer:Sr,isFormData:Mr,isArrayBufferView:Wr,isString:Nr,isNumber:ut,isBoolean:Pr,isObject:Be,isPlainObject:fe,isUndefined:ae,isDate:xr,isFile:Gr,isBlob:Tr,isRegExp:Ai,isFunction:P,isStream:Lr,isURLSearchParams:Hr,isTypedArray:Vr,isFileList:Jr,forEach:oe,merge:Me,extend:qr,trim:Yr,stripBOM:vr,inherits:Kr,toFlatObject:jr,kindOf:ce,kindOfTest:x,endsWith:_r,toArray:zr,forEachEntry:Zr,matchAll:Xr,isHTMLForm:$r,hasOwnProperty:gt,hasOwnProp:gt,reduceDescriptors:Bt,freezeMethods:ti,toObjectSet:ri,toCamelCase:ei,noop:ii,toFiniteNumber:ai,findKey:ft,global:ct,isContextDefined:dt,ALPHABET:Ct,generateString:oi,isSpecCompliantForm:ni,toJSONObject:si,isAsyncFn:Ii,isThenable:li};function _(e,A,t,r,a){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",A&&(this.code=A),t&&(this.config=t),r&&(this.request=r),a&&(this.response=a)}c.inherits(_,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:c.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var yt=_.prototype,Et={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Et[e]={value:e}});Object.defineProperties(_,Et);Object.defineProperty(yt,"isAxiosError",{value:!0});_.from=(e,A,t,r,a,o)=>{let i=Object.create(yt);return c.toFlatObject(e,i,function(f){return f!==Error.prototype},l=>l!=="isAxiosError"),_.call(i,e.message,A,t,r,a),i.cause=e,i.name=e.name,o&&Object.assign(i,o),i};var h=_;var Ce=null;function Ye(e){return c.isPlainObject(e)||c.isArray(e)}function ht(e){return c.endsWith(e,"[]")?e.slice(0,-2):e}function Qt(e,A,t){return e?e.concat(A).map(function(a,o){return a=ht(a),!t&&o?"["+a+"]":a}).join(t?".":""):A}function gi(e){return c.isArray(e)&&!e.some(Ye)}var pi=c.toFlatObject(c,{},null,function(A){return/^is[A-Z]/.test(A)});function mi(e,A,t){if(!c.isObject(e))throw new TypeError("target must be an object");A=A||new(Ce||FormData),t=c.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(d,E){return!c.isUndefined(E[d])});let r=t.metaTokens,a=t.visitor||n,o=t.dots,i=t.indexes,f=(t.Blob||typeof Blob<"u"&&Blob)&&c.isSpecCompliantForm(A);if(!c.isFunction(a))throw new TypeError("visitor must be a function");function g(I){if(I===null)return"";if(c.isDate(I))return I.toISOString();if(!f&&c.isBlob(I))throw new h("Blob is not supported. Use a Buffer instead.");return c.isArrayBuffer(I)||c.isTypedArray(I)?f&&typeof Blob=="function"?new Blob([I]):Buffer.from(I):I}function n(I,d,E){let R=I;if(I&&!E&&typeof I=="object"){if(c.endsWith(d,"{}"))d=r?d:d.slice(0,-2),I=JSON.stringify(I);else if(c.isArray(I)&&gi(I)||(c.isFileList(I)||c.endsWith(d,"[]"))&&(R=c.toArray(I)))return d=ht(d),R.forEach(function(k,We){!(c.isUndefined(k)||k===null)&&A.append(i===!0?Qt([d],We,o):i===null?d:d+"[]",g(k))}),!1}return Ye(I)?!0:(A.append(Qt(E,d,o),g(I)),!1)}let u=[],p=Object.assign(pi,{defaultVisitor:n,convertValue:g,isVisitable:Ye});function s(I,d){if(!c.isUndefined(I)){if(u.indexOf(I)!==-1)throw Error("Circular reference detected in "+d.join("."));u.push(I),c.forEach(I,function(R,w){(!(c.isUndefined(R)||R===null)&&a.call(A,R,c.isString(w)?w.trim():w,d,p))===!0&&s(R,d?d.concat(w):[w])}),u.pop()}}if(!c.isObject(e))throw new TypeError("data must be an object");return s(e),A}var J=mi;function wt(e){let A={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(r){return A[r]})}function Rt(e,A){this._pairs=[],e&&J(e,this,A)}var bt=Rt.prototype;bt.append=function(A,t){this._pairs.push([A,t])};bt.toString=function(A){let t=A?function(r){return A.call(this,r,wt)}:wt;return this._pairs.map(function(a){return t(a[0])+"="+t(a[1])},"").join("&")};var ye=Rt;function ui(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ne(e,A,t){if(!A)return e;let r=t&&t.encode||ui,a=t&&t.serialize,o;if(a?o=a(A,t):o=c.isURLSearchParams(A)?A.toString():new ye(A,t).toString(r),o){let i=e.indexOf("#");i!==-1&&(e=e.slice(0,i)),e+=(e.indexOf("?")===-1?"?":"&")+o}return e}var qe=class{constructor(){this.handlers=[]}use(A,t,r){return this.handlers.push({fulfilled:A,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){c.forEach(this.handlers,function(r){r!==null&&A(r)})}},ve=qe;var Ee={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var kt=typeof URLSearchParams<"u"?URLSearchParams:ye;var Dt=typeof FormData<"u"?FormData:null;var Ft=typeof Blob<"u"?Blob:null;var fi=(()=>{let e;return typeof navigator<"u"&&((e=navigator.product)==="ReactNative"||e==="NativeScript"||e==="NS")?!1:typeof window<"u"&&typeof document<"u"})(),ci=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")(),F={isBrowser:!0,classes:{URLSearchParams:kt,FormData:Dt,Blob:Ft},isStandardBrowserEnv:fi,isStandardBrowserWebWorkerEnv:ci,protocols:["http","https","file","blob","url","data"]};function Ke(e,A){return J(e,new F.classes.URLSearchParams,Object.assign({visitor:function(t,r,a,o){return F.isNode&&c.isBuffer(t)?(this.append(r,t.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},A))}function di(e){return c.matchAll(/\w+|\[(\w*)]/g,e).map(A=>A[0]==="[]"?"":A[1]||A[0])}function Bi(e){let A={},t=Object.keys(e),r,a=t.length,o;for(r=0;r<a;r++)o=t[r],A[o]=e[o];return A}function Ci(e){function A(t,r,a,o){let i=t[o++],l=Number.isFinite(+i),f=o>=t.length;return i=!i&&c.isArray(a)?a.length:i,f?(c.hasOwnProp(a,i)?a[i]=[a[i],r]:a[i]=r,!l):((!a[i]||!c.isObject(a[i]))&&(a[i]=[]),A(t,r,a[i],o)&&c.isArray(a[i])&&(a[i]=Bi(a[i])),!l)}if(c.isFormData(e)&&c.isFunction(e.entries)){let t={};return c.forEachEntry(e,(r,a)=>{A(di(r),a,t,0)}),t}return null}var Qe=Ci;function yi(e,A,t){if(c.isString(e))try{return(A||JSON.parse)(e),c.trim(e)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(e)}var je={transitional:Ee,adapter:["xhr","http"],transformRequest:[function(A,t){let r=t.getContentType()||"",a=r.indexOf("application/json")>-1,o=c.isObject(A);if(o&&c.isHTMLForm(A)&&(A=new FormData(A)),c.isFormData(A))return a&&a?JSON.stringify(Qe(A)):A;if(c.isArrayBuffer(A)||c.isBuffer(A)||c.isStream(A)||c.isFile(A)||c.isBlob(A))return A;if(c.isArrayBufferView(A))return A.buffer;if(c.isURLSearchParams(A))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let l;if(o){if(r.indexOf("application/x-www-form-urlencoded")>-1)return Ke(A,this.formSerializer).toString();if((l=c.isFileList(A))||r.indexOf("multipart/form-data")>-1){let f=this.env&&this.env.FormData;return J(l?{"files[]":A}:A,f&&new f,this.formSerializer)}}return o||a?(t.setContentType("application/json",!1),yi(A)):A}],transformResponse:[function(A){let t=this.transitional||je.transitional,r=t&&t.forcedJSONParsing,a=this.responseType==="json";if(A&&c.isString(A)&&(r&&!this.responseType||a)){let i=!(t&&t.silentJSONParsing)&&a;try{return JSON.parse(A)}catch(l){if(i)throw l.name==="SyntaxError"?h.from(l,h.ERR_BAD_RESPONSE,this,null,this.response):l}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:F.classes.FormData,Blob:F.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};c.forEach(["delete","get","head","post","put","patch"],e=>{je.headers[e]={}});var z=je;var Ei=c.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ot=e=>{let A={},t,r,a;return e&&e.split(`
`).forEach(function(i){a=i.indexOf(":"),t=i.substring(0,a).trim().toLowerCase(),r=i.substring(a+1).trim(),!(!t||A[t]&&Ei[t])&&(t==="set-cookie"?A[t]?A[t].push(r):A[t]=[r]:A[t]=A[t]?A[t]+", "+r:r)}),A};var Ut=Symbol("internals");function se(e){return e&&String(e).trim().toLowerCase()}function he(e){return e===!1||e==null?e:c.isArray(e)?e.map(he):String(e)}function Qi(e){let A=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(e);)A[r[1]]=r[2];return A}var hi=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function _e(e,A,t,r,a){if(c.isFunction(r))return r.call(this,A,t);if(a&&(A=t),!!c.isString(A)){if(c.isString(r))return A.indexOf(r)!==-1;if(c.isRegExp(r))return r.test(A)}}function wi(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(A,t,r)=>t.toUpperCase()+r)}function Ri(e,A){let t=c.toCamelCase(" "+A);["get","set","has"].forEach(r=>{Object.defineProperty(e,r+t,{value:function(a,o,i){return this[r].call(this,A,a,o,i)},configurable:!0})})}var V=class{constructor(A){A&&this.set(A)}set(A,t,r){let a=this;function o(l,f,g){let n=se(f);if(!n)throw new Error("header name must be a non-empty string");let u=c.findKey(a,n);(!u||a[u]===void 0||g===!0||g===void 0&&a[u]!==!1)&&(a[u||f]=he(l))}let i=(l,f)=>c.forEach(l,(g,n)=>o(g,n,f));return c.isPlainObject(A)||A instanceof this.constructor?i(A,t):c.isString(A)&&(A=A.trim())&&!hi(A)?i(Ot(A),t):A!=null&&o(t,A,r),this}get(A,t){if(A=se(A),A){let r=c.findKey(this,A);if(r){let a=this[r];if(!t)return a;if(t===!0)return Qi(a);if(c.isFunction(t))return t.call(this,a,r);if(c.isRegExp(t))return t.exec(a);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,t){if(A=se(A),A){let r=c.findKey(this,A);return!!(r&&this[r]!==void 0&&(!t||_e(this,this[r],r,t)))}return!1}delete(A,t){let r=this,a=!1;function o(i){if(i=se(i),i){let l=c.findKey(r,i);l&&(!t||_e(r,r[l],l,t))&&(delete r[l],a=!0)}}return c.isArray(A)?A.forEach(o):o(A),a}clear(A){let t=Object.keys(this),r=t.length,a=!1;for(;r--;){let o=t[r];(!A||_e(this,this[o],o,A,!0))&&(delete this[o],a=!0)}return a}normalize(A){let t=this,r={};return c.forEach(this,(a,o)=>{let i=c.findKey(r,o);if(i){t[i]=he(a),delete t[o];return}let l=A?wi(o):String(o).trim();l!==o&&delete t[o],t[l]=he(a),r[l]=!0}),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){let t=Object.create(null);return c.forEach(this,(r,a)=>{r!=null&&r!==!1&&(t[a]=A&&c.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([A,t])=>A+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...t){let r=new this(A);return t.forEach(a=>r.set(a)),r}static accessor(A){let r=(this[Ut]=this[Ut]={accessors:{}}).accessors,a=this.prototype;function o(i){let l=se(i);r[l]||(Ri(a,i),r[l]=!0)}return c.isArray(A)?A.forEach(o):o(A),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);c.reduceDescriptors(V.prototype,({value:e},A)=>{let t=A[0].toUpperCase()+A.slice(1);return{get:()=>e,set(r){this[t]=r}}});c.freezeMethods(V);var U=V;function Ie(e,A){let t=this||z,r=A||t,a=U.from(r.headers),o=r.data;return c.forEach(e,function(l){o=l.call(t,o,a.normalize(),A?A.status:void 0)}),a.normalize(),o}function le(e){return!!(e&&e.__CANCEL__)}function St(e,A,t){h.call(this,e??"canceled",h.ERR_CANCELED,A,t),this.name="CanceledError"}c.inherits(St,h,{__CANCEL__:!0});var L=St;function ze(e,A,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?e(t):A(new h("Request failed with status code "+t.status,[h.ERR_BAD_REQUEST,h.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var Wt=F.isStandardBrowserEnv?function(){return{write:function(t,r,a,o,i,l){let f=[];f.push(t+"="+encodeURIComponent(r)),c.isNumber(a)&&f.push("expires="+new Date(a).toGMTString()),c.isString(o)&&f.push("path="+o),c.isString(i)&&f.push("domain="+i),l===!0&&f.push("secure"),document.cookie=f.join("; ")},read:function(t){let r=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return r?decodeURIComponent(r[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function Ve(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function Ze(e,A){return A?e.replace(/\/+$/,"")+"/"+A.replace(/^\/+/,""):e}function ge(e,A){return e&&!Ve(A)?Ze(e,A):A}var Nt=F.isStandardBrowserEnv?function(){let A=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function a(o){let i=o;return A&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=a(window.location.href),function(i){let l=c.isString(i)?a(i):i;return l.protocol===r.protocol&&l.host===r.host}}():function(){return function(){return!0}}();function Xe(e){let A=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return A&&A[1]||""}function bi(e,A){e=e||10;let t=new Array(e),r=new Array(e),a=0,o=0,i;return A=A!==void 0?A:1e3,function(f){let g=Date.now(),n=r[o];i||(i=g),t[a]=f,r[a]=g;let u=o,p=0;for(;u!==a;)p+=t[u++],u=u%e;if(a=(a+1)%e,a===o&&(o=(o+1)%e),g-i<A)return;let s=n&&g-n;return s?Math.round(p*1e3/s):void 0}}var Pt=bi;function xt(e,A){let t=0,r=Pt(50,250);return a=>{let o=a.loaded,i=a.lengthComputable?a.total:void 0,l=o-t,f=r(l),g=o<=i;t=o;let n={loaded:o,total:i,progress:i?o/i:void 0,bytes:l,rate:f||void 0,estimated:f&&i&&g?(i-o)/f:void 0,event:a};n[A?"download":"upload"]=!0,e(n)}}var ki=typeof XMLHttpRequest<"u",Gt=ki&&function(e){return new Promise(function(t,r){let a=e.data,o=U.from(e.headers).normalize(),i=e.responseType,l;function f(){e.cancelToken&&e.cancelToken.unsubscribe(l),e.signal&&e.signal.removeEventListener("abort",l)}let g;c.isFormData(a)&&(F.isStandardBrowserEnv||F.isStandardBrowserWebWorkerEnv?o.setContentType(!1):o.getContentType(/^\s*multipart\/form-data/)?c.isString(g=o.getContentType())&&o.setContentType(g.replace(/^\s*(multipart\/form-data);+/,"$1")):o.setContentType("multipart/form-data"));let n=new XMLHttpRequest;if(e.auth){let I=e.auth.username||"",d=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";o.set("Authorization","Basic "+btoa(I+":"+d))}let u=ge(e.baseURL,e.url);n.open(e.method.toUpperCase(),ne(u,e.params,e.paramsSerializer),!0),n.timeout=e.timeout;function p(){if(!n)return;let I=U.from("getAllResponseHeaders"in n&&n.getAllResponseHeaders()),E={data:!i||i==="text"||i==="json"?n.responseText:n.response,status:n.status,statusText:n.statusText,headers:I,config:e,request:n};ze(function(w){t(w),f()},function(w){r(w),f()},E),n=null}if("onloadend"in n?n.onloadend=p:n.onreadystatechange=function(){!n||n.readyState!==4||n.status===0&&!(n.responseURL&&n.responseURL.indexOf("file:")===0)||setTimeout(p)},n.onabort=function(){n&&(r(new h("Request aborted",h.ECONNABORTED,e,n)),n=null)},n.onerror=function(){r(new h("Network Error",h.ERR_NETWORK,e,n)),n=null},n.ontimeout=function(){let d=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",E=e.transitional||Ee;e.timeoutErrorMessage&&(d=e.timeoutErrorMessage),r(new h(d,E.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,e,n)),n=null},F.isStandardBrowserEnv){let I=Nt(u)&&e.xsrfCookieName&&Wt.read(e.xsrfCookieName);I&&o.set(e.xsrfHeaderName,I)}a===void 0&&o.setContentType(null),"setRequestHeader"in n&&c.forEach(o.toJSON(),function(d,E){n.setRequestHeader(E,d)}),c.isUndefined(e.withCredentials)||(n.withCredentials=!!e.withCredentials),i&&i!=="json"&&(n.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&n.addEventListener("progress",xt(e.onDownloadProgress,!0)),typeof e.onUploadProgress=="function"&&n.upload&&n.upload.addEventListener("progress",xt(e.onUploadProgress)),(e.cancelToken||e.signal)&&(l=I=>{n&&(r(!I||I.type?new L(null,e,n):I),n.abort(),n=null)},e.cancelToken&&e.cancelToken.subscribe(l),e.signal&&(e.signal.aborted?l():e.signal.addEventListener("abort",l)));let s=Xe(u);if(s&&F.protocols.indexOf(s)===-1){r(new h("Unsupported protocol "+s+":",h.ERR_BAD_REQUEST,e));return}n.send(a||null)})};var $e={http:Ce,xhr:Gt};c.forEach($e,(e,A)=>{if(e){try{Object.defineProperty(e,"name",{value:A})}catch{}Object.defineProperty(e,"adapterName",{value:A})}});var Tt=e=>`- ${e}`,Di=e=>c.isFunction(e)||e===null||e===!1,we={getAdapter:e=>{e=c.isArray(e)?e:[e];let{length:A}=e,t,r,a={};for(let o=0;o<A;o++){t=e[o];let i;if(r=t,!Di(t)&&(r=$e[(i=String(t)).toLowerCase()],r===void 0))throw new h(`Unknown adapter '${i}'`);if(r)break;a[i||"#"+o]=r}if(!r){let o=Object.entries(a).map(([l,f])=>`adapter ${l} `+(f===!1?"is not supported by the environment":"is not available in the build")),i=A?o.length>1?`since :
`+o.map(Tt).join(`
`):" "+Tt(o[0]):"as no adapter specified";throw new h("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return r},adapters:$e};function eA(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new L(null,e)}function Re(e){return eA(e),e.headers=U.from(e.headers),e.data=Ie.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),we.getAdapter(e.adapter||z.adapter)(e).then(function(r){return eA(e),r.data=Ie.call(e,e.transformResponse,r),r.headers=U.from(r.headers),r},function(r){return le(r)||(eA(e),r&&r.response&&(r.response.data=Ie.call(e,e.transformResponse,r.response),r.response.headers=U.from(r.response.headers))),Promise.reject(r)})}var Jt=e=>e instanceof U?e.toJSON():e;function G(e,A){A=A||{};let t={};function r(g,n,u){return c.isPlainObject(g)&&c.isPlainObject(n)?c.merge.call({caseless:u},g,n):c.isPlainObject(n)?c.merge({},n):c.isArray(n)?n.slice():n}function a(g,n,u){if(c.isUndefined(n)){if(!c.isUndefined(g))return r(void 0,g,u)}else return r(g,n,u)}function o(g,n){if(!c.isUndefined(n))return r(void 0,n)}function i(g,n){if(c.isUndefined(n)){if(!c.isUndefined(g))return r(void 0,g)}else return r(void 0,n)}function l(g,n,u){if(u in A)return r(g,n);if(u in e)return r(void 0,g)}let f={url:o,method:o,data:o,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:l,headers:(g,n)=>a(Jt(g),Jt(n),!0)};return c.forEach(Object.keys(Object.assign({},e,A)),function(n){let u=f[n]||a,p=u(e[n],A[n],n);c.isUndefined(p)&&u!==l||(t[n]=p)}),t}var be="1.6.0";var AA={};["object","boolean","number","function","string","symbol"].forEach((e,A)=>{AA[e]=function(r){return typeof r===e||"a"+(A<1?"n ":" ")+e}});var Lt={};AA.transitional=function(A,t,r){function a(o,i){return"[Axios v"+be+"] Transitional option '"+o+"'"+i+(r?". "+r:"")}return(o,i,l)=>{if(A===!1)throw new h(a(i," has been removed"+(t?" in "+t:"")),h.ERR_DEPRECATED);return t&&!Lt[i]&&(Lt[i]=!0,console.warn(a(i," has been deprecated since v"+t+" and will be removed in the near future"))),A?A(o,i,l):!0}};function Fi(e,A,t){if(typeof e!="object")throw new h("options must be an object",h.ERR_BAD_OPTION_VALUE);let r=Object.keys(e),a=r.length;for(;a-- >0;){let o=r[a],i=A[o];if(i){let l=e[o],f=l===void 0||i(l,o,e);if(f!==!0)throw new h("option "+o+" must be "+f,h.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new h("Unknown option "+o,h.ERR_BAD_OPTION)}}var ke={assertOptions:Fi,validators:AA};var M=ke.validators,Z=class{constructor(A){this.defaults=A,this.interceptors={request:new ve,response:new ve}}request(A,t){typeof A=="string"?(t=t||{},t.url=A):t=A||{},t=G(this.defaults,t);let{transitional:r,paramsSerializer:a,headers:o}=t;r!==void 0&&ke.assertOptions(r,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),a!=null&&(c.isFunction(a)?t.paramsSerializer={serialize:a}:ke.assertOptions(a,{encode:M.function,serialize:M.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=o&&c.merge(o.common,o[t.method]);o&&c.forEach(["delete","get","head","post","put","patch","common"],I=>{delete o[I]}),t.headers=U.concat(i,o);let l=[],f=!0;this.interceptors.request.forEach(function(d){typeof d.runWhen=="function"&&d.runWhen(t)===!1||(f=f&&d.synchronous,l.unshift(d.fulfilled,d.rejected))});let g=[];this.interceptors.response.forEach(function(d){g.push(d.fulfilled,d.rejected)});let n,u=0,p;if(!f){let I=[Re.bind(this),void 0];for(I.unshift.apply(I,l),I.push.apply(I,g),p=I.length,n=Promise.resolve(t);u<p;)n=n.then(I[u++],I[u++]);return n}p=l.length;let s=t;for(u=0;u<p;){let I=l[u++],d=l[u++];try{s=I(s)}catch(E){d.call(this,E);break}}try{n=Re.call(this,s)}catch(I){return Promise.reject(I)}for(u=0,p=g.length;u<p;)n=n.then(g[u++],g[u++]);return n}getUri(A){A=G(this.defaults,A);let t=ge(A.baseURL,A.url);return ne(t,A.params,A.paramsSerializer)}};c.forEach(["delete","get","head","options"],function(A){Z.prototype[A]=function(t,r){return this.request(G(r||{},{method:A,url:t,data:(r||{}).data}))}});c.forEach(["post","put","patch"],function(A){function t(r){return function(o,i,l){return this.request(G(l||{},{method:A,headers:r?{"Content-Type":"multipart/form-data"}:{},url:o,data:i}))}}Z.prototype[A]=t(),Z.prototype[A+"Form"]=t(!0)});var pe=Z;var tA=class e{constructor(A){if(typeof A!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(o){t=o});let r=this;this.promise.then(a=>{if(!r._listeners)return;let o=r._listeners.length;for(;o-- >0;)r._listeners[o](a);r._listeners=null}),this.promise.then=a=>{let o,i=new Promise(l=>{r.subscribe(l),o=l}).then(a);return i.cancel=function(){r.unsubscribe(o)},i},A(function(o,i,l){r.reason||(r.reason=new L(o,i,l),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){if(this.reason){A(this.reason);return}this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;let t=this._listeners.indexOf(A);t!==-1&&this._listeners.splice(t,1)}static source(){let A;return{token:new e(function(a){A=a}),cancel:A}}},Mt=tA;function rA(e){return function(t){return e.apply(null,t)}}function iA(e){return c.isObject(e)&&e.isAxiosError===!0}var aA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(aA).forEach(([e,A])=>{aA[A]=e});var Ht=aA;function Yt(e){let A=new pe(e),t=ie(pe.prototype.request,A);return c.extend(t,pe.prototype,A,{allOwnKeys:!0}),c.extend(t,A,null,{allOwnKeys:!0}),t.create=function(a){return Yt(G(e,a))},t}var b=Yt(z);b.Axios=pe;b.CanceledError=L;b.CancelToken=Mt;b.isCancel=le;b.VERSION=be;b.toFormData=J;b.AxiosError=h;b.Cancel=b.CanceledError;b.all=function(A){return Promise.all(A)};b.spread=rA;b.isAxiosError=iA;b.mergeConfig=G;b.AxiosHeaders=U;b.formToJSON=e=>Qe(c.isHTMLForm(e)?new FormData(e):e);b.getAdapter=we.getAdapter;b.HttpStatusCode=Ht;b.default=b;var Y=b;var{Axios:sI,AxiosError:II,CanceledError:lI,isCancel:gI,CancelToken:pI,VERSION:mI,all:uI,Cancel:fI,isAxiosError:cI,spread:dI,toFormData:BI,AxiosHeaders:CI,HttpStatusCode:yI,formToJSON:EI,getAdapter:QI,mergeConfig:hI}=Y;var vt=Symbol("Comlink.proxy"),Oi=Symbol("Comlink.endpoint"),sA=Symbol("Comlink.releaseProxy"),oA=Symbol("Comlink.finalizer"),Fe=Symbol("Comlink.thrown"),Kt=e=>typeof e=="object"&&e!==null||typeof e=="function",Ui={canHandle:e=>Kt(e)&&e[vt],serialize(e){let{port1:A,port2:t}=new MessageChannel;return _t(e,A),[t,[t]]},deserialize(e){return e.start(),IA(e)}},Si={canHandle:e=>Kt(e)&&Fe in e,serialize({value:e}){let A;return e instanceof Error?A={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:A={isError:!1,value:e},[A,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},jt=new Map([["proxy",Ui],["throw",Si]]);function Wi(e,A){for(let t of e)if(A===t||t==="*"||t instanceof RegExp&&t.test(A))return!0;return!1}function _t(e,A=globalThis,t=["*"]){A.addEventListener("message",function r(a){if(!a||!a.data)return;if(!Wi(t,a.origin)){console.warn(`Invalid origin '${a.origin}' for comlink proxy`);return}let{id:o,type:i,path:l}=Object.assign({path:[]},a.data),f=(a.data.argumentList||[]).map(q),g;try{let n=l.slice(0,-1).reduce((p,s)=>p[s],e),u=l.reduce((p,s)=>p[s],e);switch(i){case"GET":g=u;break;case"SET":n[l.slice(-1)[0]]=q(a.data.value),g=!0;break;case"APPLY":g=u.apply(n,f);break;case"CONSTRUCT":{let p=new u(...f);g=Ti(p)}break;case"ENDPOINT":{let{port1:p,port2:s}=new MessageChannel;_t(e,s),g=lA(p,[p])}break;case"RELEASE":g=void 0;break;default:return}}catch(n){g={value:n,[Fe]:0}}Promise.resolve(g).catch(n=>({value:n,[Fe]:0})).then(n=>{let[u,p]=Se(n);A.postMessage(Object.assign(Object.assign({},u),{id:o}),p),i==="RELEASE"&&(A.removeEventListener("message",r),zt(A),oA in e&&typeof e[oA]=="function"&&e[oA]())}).catch(n=>{let[u,p]=Se({value:new TypeError("Unserializable return value"),[Fe]:0});A.postMessage(Object.assign(Object.assign({},u),{id:o}),p)})}),A.start&&A.start()}function Ni(e){return e.constructor.name==="MessagePort"}function zt(e){Ni(e)&&e.close()}function IA(e,A){return nA(e,[],A)}function De(e){if(e)throw new Error("Proxy has been released and is not useable")}function Vt(e){return X(e,{type:"RELEASE"}).then(()=>{zt(e)})}var Oe=new WeakMap,Ue="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let A=(Oe.get(e)||0)-1;Oe.set(e,A),A===0&&Vt(e)});function Pi(e,A){let t=(Oe.get(A)||0)+1;Oe.set(A,t),Ue&&Ue.register(e,A,e)}function xi(e){Ue&&Ue.unregister(e)}function nA(e,A=[],t=function(){}){let r=!1,a=new Proxy(t,{get(o,i){if(De(r),i===sA)return()=>{xi(a),Vt(e),r=!0};if(i==="then"){if(A.length===0)return{then:()=>a};let l=X(e,{type:"GET",path:A.map(f=>f.toString())}).then(q);return l.then.bind(l)}return nA(e,[...A,i])},set(o,i,l){De(r);let[f,g]=Se(l);return X(e,{type:"SET",path:[...A,i].map(n=>n.toString()),value:f},g).then(q)},apply(o,i,l){De(r);let f=A[A.length-1];if(f===Oi)return X(e,{type:"ENDPOINT"}).then(q);if(f==="bind")return nA(e,A.slice(0,-1));let[g,n]=qt(l);return X(e,{type:"APPLY",path:A.map(u=>u.toString()),argumentList:g},n).then(q)},construct(o,i){De(r);let[l,f]=qt(i);return X(e,{type:"CONSTRUCT",path:A.map(g=>g.toString()),argumentList:l},f).then(q)}});return Pi(a,e),a}function Gi(e){return Array.prototype.concat.apply([],e)}function qt(e){let A=e.map(Se);return[A.map(t=>t[0]),Gi(A.map(t=>t[1]))]}var Zt=new WeakMap;function lA(e,A){return Zt.set(e,A),e}function Ti(e){return Object.assign(e,{[vt]:!0})}function Se(e){for(let[A,t]of jt)if(t.canHandle(e)){let[r,a]=t.serialize(e);return[{type:"HANDLER",name:A,value:r},a]}return[{type:"RAW",value:e},Zt.get(e)||[]]}function q(e){switch(e.type){case"HANDLER":return jt.get(e.name).deserialize(e.value);case"RAW":return e.value}}function X(e,A,t){return new Promise(r=>{let a=Ji();e.addEventListener("message",function o(i){!i.data||!i.data.id||i.data.id!==a||(e.removeEventListener("message",o),r(i.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:a},A),t)})}function Ji(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function $t(e){let A=IA(e),t=e;return t.workerProxy=A,t.originalTerminate=t.terminate,t.terminate=()=>{t.workerProxy[sA](),t.originalTerminate()},{workerProxy:A,worker:t}}async function Li(e,A){let t;if(e!=null){let i=e;return i.workerProxy!==void 0?(t=i.workerProxy,{workerProxy:t,worker:i}):$t(e)}let r=typeof A>"u"?v.pipelineWorkerUrl:A,a=null,o=v.webWorkersUrl;if(typeof o<"u"){console.warn("itkConfig webWorkersUrl is deprecated. Please use pipelineWorkerUrl with the full path to the pipeline worker.");let i="min.",l=o;if(l.startsWith("http")){let f=await Y.get(`${l}/bundles/pipeline.${i}worker.js`,{responseType:"blob"}),g=URL.createObjectURL(f.data);a=new Worker(g,{type:"module"})}else a=new Worker(`${l}/bundles/pipeline.${i}worker.js`,{type:"module"})}else if(r===null)a=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(r.startsWith("http")){let i=await Y.get(r,{responseType:"blob"}),l=URL.createObjectURL(i.data);a=new Worker(l,{type:"module"})}else a=new Worker(r,{type:"module"});return $t(a)}var er=Li;var Mi;function Ar(){return Mi}var Hi;function tr(){return Hi}function Yi(e){let A=e.slice((e.lastIndexOf(".")-1>>>0)+2);if(A.toLowerCase()==="gz"){let t=e.slice(0,-3).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="cbor"){let t=e.slice(0,-5).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zst"){let t=e.slice(0,-10).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zip"){let t=e.slice(0,-4).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}return A}var me=Yi;function qi(e){return[e.data,e.direction]}var gA=qi;function vi(e){return[e.points,e.pointData,e.cells,e.cellData]}var rr=vi;async function Ki(e,A){let t="unknown";typeof e!="string"?t=e.href:e.startsWith("http")?t=e:t=`${A}/${e}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let r=`${t}.wasm`,o=(await Y.get(r,{responseType:"arraybuffer"})).data;return(await import(`${t}.js`)).default({wasmBinary:o})}var ir=Ki;var ar=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var sr=typeof globalThis.SharedArrayBuffer=="function",or=new TextEncoder,nr=new TextDecoder("utf-8");function H(e,A){let t={flags:"r",encoding:"binary"},r=e.fs_open(A,t.flags),o=e.fs_stat(A).size,i=null;sr?i=new SharedArrayBuffer(o):i=new ArrayBuffer(o);let l=new Uint8Array(i);return e.fs_read(r,l,0,o,0),e.fs_close(r),l}function Ir(e,A,t){let r=null;sr?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let a=new Uint8Array(r),o=new Uint8Array(e.HEAPU8.buffer,A,t);return a.set(o),a}function O(e,A,t,r){let a=0;return A!==null&&(a=e.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,A.buffer.byteLength]),e.HEAPU8.set(new Uint8Array(A.buffer),a)),a}function $(e,A,t){let r=JSON.stringify(A),a=e.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,r.length]);e.writeAsciiToMemory(r,a,!1)}function N(e,A,t,r){let a=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,A,t]),o=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,A,t]),i=Ir(e,a,o);return D(r,i.buffer)}function pA(e,A){let t=e.ccall("itk_wasm_output_json_address","number",["number","number"],[0,A]),r=e.AsciiToString(t);return JSON.parse(r)}function ji(e,A,t,r){r!=null&&r.length>0&&r.forEach(function(g,n){var u;switch(g.type){case m.TextStream:{let p=or.encode(g.data.data),s=O(e,p,n,0),I={size:p.buffer.byteLength,data:`data:application/vnd.itk.address,0:${s}`};$(e,I,n);break}case m.JsonCompatible:{let p=or.encode(JSON.stringify(g.data)),s=O(e,p,n,0),I={size:p.buffer.byteLength,data:`data:application/vnd.itk.address,0:${s}`};$(e,I,n);break}case m.BinaryStream:{let p=g.data.data,s=O(e,p,n,0),I={size:p.buffer.byteLength,data:`data:application/vnd.itk.address,0:${s}`};$(e,I,n);break}case m.TextFile:{e.fs_writeFile(g.data.path,g.data.data);break}case m.BinaryFile:{e.fs_writeFile(g.data.path,g.data.data);break}case m.Image:{let p=g.data,s=O(e,p.data,n,0),I=O(e,p.direction,n,1),d=typeof((u=p.metadata)===null||u===void 0?void 0:u.entries)<"u"?JSON.stringify(Array.from(p.metadata.entries())):"[]",E={imageType:p.imageType,name:p.name,origin:p.origin,spacing:p.spacing,direction:`data:application/vnd.itk.address,0:${I}`,size:p.size,data:`data:application/vnd.itk.address,0:${s}`,metadata:d};$(e,E,n);break}case m.Mesh:{let p=g.data,s=O(e,p.points,n,0),I=O(e,p.cells,n,1),d=O(e,p.pointData,n,2),E=O(e,p.cellData,n,3),R={meshType:p.meshType,name:p.name,numberOfPoints:p.numberOfPoints,points:`data:application/vnd.itk.address,0:${s}`,numberOfCells:p.numberOfCells,cells:`data:application/vnd.itk.address,0:${I}`,cellBufferSize:p.cellBufferSize,numberOfPointPixels:p.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${d}`,numberOfCellPixels:p.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${E}`};$(e,R,n);break}case m.PolyData:{let p=g.data,s=O(e,p.points,n,0),I=O(e,p.vertices,n,1),d=O(e,p.lines,n,2),E=O(e,p.polygons,n,3),R=O(e,p.triangleStrips,n,4),w=O(e,p.pointData,n,5),k=O(e,p.pointData,n,6),We={polyDataType:p.polyDataType,name:p.name,numberOfPoints:p.numberOfPoints,points:`data:application/vnd.itk.address,0:${s}`,verticesBufferSize:p.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${I}`,linesBufferSize:p.linesBufferSize,lines:`data:application/vnd.itk.address,0:${d}`,polygonsBufferSize:p.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${E}`,triangleStripsBufferSize:p.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${R}`,numberOfPointPixels:p.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${w}`,numberOfCellPixels:p.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${k}`};$(e,We,n);break}case W.Text:{e.fs_writeFile(g.path,g.data);break}case W.Binary:{e.fs_writeFile(g.path,g.data);break}case W.Image:{let p=g.data,s={imageType:p.imageType,name:p.name,origin:p.origin,spacing:p.spacing,direction:"data:application/vnd.itk.path,data/direction.raw",size:p.size,data:"data:application/vnd.itk.path,data/data.raw"};if(e.fs_mkdirs(`${g.path}/data`),e.fs_writeFile(`${g.path}/index.json`,JSON.stringify(s)),p.data===null)throw Error("image.data is null");e.fs_writeFile(`${g.path}/data/data.raw`,new Uint8Array(p.data.buffer)),e.fs_writeFile(`${g.path}/data/direction.raw`,new Uint8Array(p.direction.buffer));break}case W.Mesh:{let p=g.data,s={meshType:p.meshType,name:p.name,numberOfPoints:p.numberOfPoints,points:"data:application/vnd.itk.path,data/points.raw",numberOfPointPixels:p.numberOfPointPixels,pointData:"data:application/vnd.itk.path,data/pointData.raw",numberOfCells:p.numberOfCells,cells:"data:application/vnd.itk.path,data/cells.raw",numberOfCellPixels:p.numberOfCellPixels,cellData:"data:application/vnd.itk.path,data/cellData.raw",cellBufferSize:p.cellBufferSize};if(e.fs_mkdirs(`${g.path}/data`),e.fs_writeFile(`${g.path}/index.json`,JSON.stringify(s)),s.numberOfPoints>0){if(p.points===null)throw Error("mesh.points is null");e.fs_writeFile(`${g.path}/data/points.raw`,new Uint8Array(p.points.buffer))}if(s.numberOfPointPixels>0){if(p.pointData===null)throw Error("mesh.pointData is null");e.fs_writeFile(`${g.path}/data/pointData.raw`,new Uint8Array(p.pointData.buffer))}if(s.numberOfCells>0){if(p.cells===null)throw Error("mesh.cells is null");e.fs_writeFile(`${g.path}/data/cells.raw`,new Uint8Array(p.cells.buffer))}if(s.numberOfCellPixels>0){if(p.cellData===null)throw Error("mesh.cellData is null");e.fs_writeFile(`${g.path}/data/cellData.raw`,new Uint8Array(p.cellData.buffer))}break}default:throw Error("Unsupported input InterfaceType")}}),e.resetModuleStdout(),e.resetModuleStderr();let a=e.stackSave(),o=0;try{o=e.callMain(A.slice())}catch(g){throw typeof g=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",e.getModuleStdout()),console.error("stderr:",e.getModuleStderr()),typeof e.getExceptionMessage<"u"?console.error("exception:",e.getExceptionMessage(g)):console.error("Build module in Debug mode for exception message information.")),g}finally{e.stackRestore(a)}let i=e.getModuleStdout(),l=e.getModuleStderr(),f=[];return t!=null&&t.length>0&&o===0&&t.forEach(function(g,n){let u=null;switch(g.type){case m.TextStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),I=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),d=new Uint8Array(e.HEAPU8.buffer,s,I);u={data:nr.decode(d)};break}case m.JsonCompatible:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),I=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),d=new Uint8Array(e.HEAPU8.buffer,s,I);u=JSON.parse(nr.decode(d));break}case m.BinaryStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),I=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);u={data:Ir(e,s,I)};break}case m.TextFile:{u={path:g.data.path,data:e.fs_readFile(g.data.path,{encoding:"utf8"})};break}case m.BinaryFile:{u={path:g.data.path,data:H(e,g.data.path)};break}case m.Image:{let s=pA(e,n);s.data=N(e,n,0,s.imageType.componentType),s.direction=N(e,n,1,S.Float64),s.metadata=new Map(s.metadata),u=s;break}case m.Mesh:{let s=pA(e,n);s.numberOfPoints>0?s.points=N(e,n,0,s.meshType.pointComponentType):s.points=D(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=N(e,n,1,s.meshType.cellComponentType):s.cells=D(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=N(e,n,2,s.meshType.pointPixelComponentType):s.pointData=D(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=N(e,n,3,s.meshType.cellPixelComponentType):s.cellData=D(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),u=s;break}case m.PolyData:{let s=pA(e,n);s.numberOfPoints>0?s.points=N(e,n,0,S.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=N(e,n,1,Q.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=N(e,n,2,Q.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=N(e,n,3,Q.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=N(e,n,4,Q.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=N(e,n,5,s.polyDataType.pointPixelComponentType):s.pointData=D(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=N(e,n,6,s.polyDataType.cellPixelComponentType):s.cellData=D(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),u=s;break}case W.Text:{if(typeof g.path>"u")throw new Error("output.path not defined");u=e.fs_readFile(g.path,{encoding:"utf8"});break}case W.Binary:{if(typeof g.path>"u")throw new Error("output.path not defined");u=H(e,g.path);break}case W.Image:{if(typeof g.path>"u")throw new Error("output.path not defined");let s=e.fs_readFile(`${g.path}/index.json`,{encoding:"utf8"}),I=JSON.parse(s),d=H(e,`${g.path}/data/data.raw`);I.data=D(I.imageType.componentType,d.buffer);let E=H(e,`${g.path}/data/direction.raw`);I.direction=D(S.Float64,E.buffer),u=I;break}case W.Mesh:{if(typeof g.path>"u")throw new Error("output.path not defined");let s=e.fs_readFile(`${g.path}/index.json`,{encoding:"utf8"}),I=JSON.parse(s);if(I.numberOfPoints>0){let d=H(e,`${g.path}/data/points.raw`);I.points=D(I.meshType.pointComponentType,d.buffer)}else I.points=D(I.meshType.pointComponentType,new ArrayBuffer(0));if(I.numberOfPointPixels>0){let d=H(e,`${g.path}/data/pointData.raw`);I.pointData=D(I.meshType.pointPixelComponentType,d.buffer)}else I.pointData=D(I.meshType.pointPixelComponentType,new ArrayBuffer(0));if(I.numberOfCells>0){let d=H(e,`${g.path}/data/cells.raw`);I.cells=D(I.meshType.cellComponentType,d.buffer)}else I.cells=D(I.meshType.cellComponentType,new ArrayBuffer(0));if(I.numberOfCellPixels>0){let d=H(e,`${g.path}/data/cellData.raw`);I.cellData=D(I.meshType.cellPixelComponentType,d.buffer)}else I.cellData=D(I.meshType.cellPixelComponentType,new ArrayBuffer(0));u=I;break}default:throw Error("Unsupported output InterfaceType")}let p={type:g.type,data:u};f.push(p)}),{returnValue:o,stdout:i,stderr:l,outputs:f}}var lr=ji;var mA=new Map;async function _i(e){let A=e,t=e;if(typeof e!="string"&&(A=new URL(e.href),t=A.href),mA.has(t))return mA.get(t);{let r=await ir(e,v.pipelinesUrl);return mA.set(t,r),r}}async function zi(e,A,t,r,a,o){var i,l;if(!await ar()){let w="WebAssembly SIMD support is required -- please update your browser.";throw alert(w),new Error(w)}if(e===!1){let w=await _i(A.toString());return lr(w,t,r,a)}let f=e,g=(i=o?.pipelineWorkerUrl)!==null&&i!==void 0?i:null,n=typeof g!="string"&&typeof g?.href<"u"?g.href:g,{workerProxy:u,worker:p}=await er(f,n);f=p;let s=[];a!=null&&a.length>0&&a.forEach(function(w){if(w.type===m.BinaryStream){let k=w.data.data;s.push(k)}else if(w.type===m.BinaryFile){let k=w.data.data;s.push(k)}else if(w.type===m.Image){let k=w.data;if(k.data===null)throw Error("image data cannot be null");s.push(...gA(k))}else if(w.type===W.Binary)s.push(w.data);else if(w.type===W.Image){let k=w.data;if(k.data===null)throw Error("image data cannot be null");s.push(...gA(k))}else if(w.type===W.Mesh){let k=w.data;s.push(...rr(k))}});let I=(l=o?.pipelineBaseUrl)!==null&&l!==void 0?l:"pipelinesUrl",d=typeof I!="string"&&typeof I?.href<"u"?I.href:I,E=a!=null?lA(a,lt(s)):null,R=await u.runPipeline(v,A.toString(),d,t,r,E);return{returnValue:R.returnValue,stdout:R.stdout,stderr:R.stderr,outputs:R.outputs,webWorker:f}}var B=zi;var gr={name:"@itk-wasm/image-io",version:"0.5.0",description:"Input and output for scientific and medical image file formats.",type:"module",module:"./dist/index.js",types:"./dist/index.d.ts",exports:{".":{types:"./dist/index.d.js",browser:"./dist/index.js",node:"./dist/index-node.js",default:"./dist/index.js"}},scripts:{start:"npm run copyShoelaceAssets && vite -c build/vite.config.js",test:"npm run test:node && npm run test:browser","test:node":"ava","test:browser":"npm run test:browser:chrome && npm run test:browser:firefox","test:browser:firefox":"start-server-and-test rollup:start http-get://localhost:5004 cypress:runFirefox","test:browser:chrome":"start-server-and-test rollup:start http-get://localhost:5004 cypress:runChrome","test:browser:debug":"start-server-and-test rollup:start http-get://localhost:5004 cypress:open","cypress:open":"npx cypress open","cypress:runChrome":"npx cypress run --browser chrome","cypress:runFirefox":"npx cypress run --browser firefox",build:"npm run build:tsc && npm run build:browser:workerEmbedded && npm run build:browser:workerEmbeddedMin && npm run build:demo","build:browser:workerEmbedded":"esbuild --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.js ./src/index-worker-embedded.ts","build:browser:workerEmbeddedMin":"esbuild --minify --loader:.worker.js=dataurl --bundle --format=esm --outfile=./dist/bundle/index-worker-embedded.min.js ./src/index-worker-embedded.min.ts","build:tsc":"tsc --pretty",copyShoelaceAssets:"shx mkdir -p test/browser/demo-app/public && shx cp -r node_modules/@shoelace-style/shoelace/dist/assets test/browser/demo-app/public/","build:demo":"npm run copyShoelaceAssets && vite -c build/vite.config.js build","rollup:start":"npm run copyShoelaceAssets && npm run build:demo && concurrently npm:rollup:dev npm:rollup:preview","rollup:dev":"vite build --config build/vite-rollup-watch.config.ts","rollup:preview":"vite preview --config build/vite-rollup-watch.config.ts"},keywords:["itk","wasm","webassembly","wasi"],author:"",license:"Apache-2.0",dependencies:{"itk-wasm":"^1.0.0-b.154"},devDependencies:{"@shoelace-style/shoelace":"^2.5.2","@types/mime-types":"^2.1.4","@types/node":"^20.2.5",ava:"^5.3.1",concurrently:"^8.2.1",cypress:"^13.3.0",esbuild:"^0.19.5",shx:"^0.3.4","start-server-and-test":"^2.0.1",typescript:"^5.0.4",vite:"^4.5.0","vite-plugin-static-copy":"^0.17.0"},repository:{type:"git",url:"https://github.com/InsightSoftwareConsortium/itk-wasm"},ava:{files:["test/node/**/*","!test/node/common.js"]}};var uA,Zi=`https://cdn.jsdelivr.net/npm/@itk-wasm/image-io@${gr.version}/dist/pipelines`;function pl(e){uA=e}function C(){if(typeof uA<"u")return uA;let e=tr();return typeof e<"u"?e:Zi}var fA,Xi=null;function pr(e){fA=e}function y(){if(typeof fA<"u")return fA;let e=Ar();return typeof e<"u"?e:Xi}var $i=new Map([["image/jpeg","jpeg"],["image/png","png"],["image/tiff","tiff"],["image/x-ms-bmp","bmp"],["image/x-bmp","bmp"],["image/bmp","bmp"],["application/dicom","gdcm"]]),ee=$i;var ea=new Map([["bmp","bmp"],["dcm","gdcm"],["gipl","gipl"],["gipl.gz","gipl"],["hdf5","hdf5"],["jpg","jpeg"],["jpeg","jpeg"],["iwi","wasm"],["iwi.cbor","wasm"],["iwi.cbor.zst","wasmZstd"],["lsm","lsm"],["mnc","mnc"],["mnc.gz","mnc"],["mnc2","mnc"],["mgh","mgh"],["mgz","mgh"],["mgh.gz","mgh"],["mha","meta"],["mhd","meta"],["mrc","mrc"],["nia","nifti"],["nii","nifti"],["nii.gz","nifti"],["hdr","nifti"],["nrrd","nrrd"],["nhdr","nrrd"],["png","png"],["pic","bioRad"],["tif","tiff"],["tiff","tiff"],["vtk","vtk"],["isq","scanco"],["aim","scanco"],["fdf","fdf"]]),Ae=ea;async function Aa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="png-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var cA=Aa;async function ta(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="png-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var dA=ta;async function ra(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="meta-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var BA=ra;async function ia(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="meta-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var CA=ia;async function aa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="tiff-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var yA=aa;async function oa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="tiff-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var EA=oa;async function na(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="nifti-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var QA=na;async function sa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="nifti-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var hA=sa;async function Ia(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="jpeg-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var wA=Ia;async function la(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="jpeg-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var RA=la;async function ga(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="nrrd-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var bA=ga;async function pa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="nrrd-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var kA=pa;async function ma(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="vtk-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var DA=ma;async function ua(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="vtk-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var FA=ua;async function fa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="bmp-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var OA=fa;async function ca(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="bmp-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var UA=ca;async function da(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="hdf5-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var SA=da;async function Ba(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="hdf5-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var WA=Ba;async function Ca(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="minc-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var NA=Ca;async function ya(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="minc-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var PA=ya;async function Ea(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="mrc-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var xA=Ea;async function Qa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="mrc-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var GA=Qa;async function ha(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="lsm-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var TA=ha;async function wa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="lsm-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var JA=wa;async function Ra(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="mgh-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var LA=Ra;async function ba(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="mgh-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var MA=ba;async function ka(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="bio-rad-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var HA=ka;async function Da(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="bio-rad-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var YA=Da;async function Fa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="gipl-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var qA=Fa;async function Oa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="gipl-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var vA=Oa;async function Ua(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="ge-adw-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var KA=Ua;async function Sa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="ge-adw-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var jA=Sa;async function Wa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="ge4-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var _A=Wa;async function Na(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="ge4-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var zA=Na;async function Pa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="ge5-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var VA=Pa;async function xa(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="ge5-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var ZA=xa;async function Ga(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="gdcm-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var XA=Ga;async function Ta(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="gdcm-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var $A=Ta;async function Ja(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="scanco-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var et=Ja;async function La(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="scanco-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var At=La;async function Ma(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="fdf-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var tt=Ma;async function Ha(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="wasm-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var rt=Ha;async function Ya(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="wasm-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var it=Ya;async function qa(e,A,t={}){let r=[{type:m.JsonCompatible},{type:m.Image}],a=A;if(A instanceof File){let E=await A.arrayBuffer();a={path:A.name,data:new Uint8Array(E)}}let o=[{type:m.BinaryFile,data:a}],i=[],l=a.path;i.push(l);let f="0";i.push(f);let g="1";i.push(g),i.push("--memory-io"),typeof t.informationOnly<"u"&&t.informationOnly&&i.push("--information-only");let n="wasm-zstd-read-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,r,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldRead:I[0]?.data,image:I[1]?.data}}var at=qa;async function va(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="wasm-zstd-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var ot=va;var Ka=new Map([["png",[cA,dA]],["meta",[BA,CA]],["tiff",[yA,EA]],["nifti",[QA,hA]],["jpeg",[wA,RA]],["nrrd",[bA,kA]],["vtk",[DA,FA]],["bmp",[OA,UA]],["hdf5",[SA,WA]],["minc",[NA,PA]],["mrc",[xA,GA]],["lsm",[TA,JA]],["mgh",[LA,MA]],["bioRad",[HA,YA]],["gipl",[qA,vA]],["geAdw",[KA,jA]],["ge4",[_A,zA]],["ge5",[VA,ZA]],["gdcm",[XA,$A]],["scanco",[et,At]],["fdf",[tt,null]],["wasm",[rt,it]],["wasmZstd",[at,ot]]]),te=Ka;async function ja(e,A,t={}){let r=A.type??"",a=A.name??A.path??"fileName",o=me(a).toLowerCase(),i=e,l=A;if(A instanceof Blob){let I=await A.arrayBuffer();l={path:A.name,data:new Uint8Array(I)}}let f=null;if(r&&ee.has(r))f=ee.get(r);else if(Ae.has(o))f=Ae.get(o);else for(let I of te.values())if(I[0]!==null){let{webWorker:d,couldRead:E,image:R}=await I[0](i,{path:l.path,data:l.data.slice()},{informationOnly:t.informationOnly});if(i=d,E)return typeof t<"u"&&(R=T(R,t)),{webWorker:i,image:R}}if(!f)throw Error("Could not find IO for: "+a);let n=te.get(f)[0],{webWorker:u,couldRead:p,image:s}=await n(i,l,{informationOnly:t.informationOnly});if(i=u,!p)throw Error("Could not read: "+a);return typeof t<"u"&&(s=T(s,t)),{webWorker:i,image:s}}var nt=ja;var _a=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:6,mr=new Je(_a,nt);async function za(e,A){let t=1,r=0,a=!1;typeof A=="object"&&(typeof A.zSpacing<"u"&&(t=A.zSpacing),typeof A.zOrigin<"u"&&(r=A.zOrigin),typeof A.sortedSeries<"u"&&(a=A.sortedSeries));let o=Array.from(e,async function(u){return await u.arrayBuffer().then(function(p){return{name:u.name,type:u.type,data:p}})}),i=await Promise.all(o);a||i.sort((u,p)=>u.name<p.name?-1:u.name>p.name?1:0);let l=[];for(let u=0;u<i.length;u++)l.push([i[u].data,i[u].name]);let g=(await mr.runTasks(l).promise).map(u=>{let p=u.image;return p.imageType.dimension=3,p.size.push(1),p.spacing.push(t),p.origin.push(r),p.direction=new Float64Array(9),p.direction.fill(0),p.direction[0]=1,p.direction[4]=1,p.direction[8]=1,p}),n=Ge(g);return typeof A=="object"&&(typeof A.componentType<"u"||typeof A.pixelType<"u")&&(n=T(n,A)),{image:n,webWorkerPool:mr}}var Va=za;async function Za(e,A,t,r={}){let a=A;(typeof r.componentType<"u"||typeof r.pixelType<"u")&&(a=T(A,r));let o=r.mimeType,i=me(t).toLowerCase(),l=e,f=null;if(typeof o<"u"&&ee.has(o))f=ee.get(o);else if(Ae.has(i))f=Ae.get(i);else for(let d of te.values())if(d[1]!==null){let{webWorker:E,couldWrite:R,serializedImage:w}=await d[1](l,xe(a),t,r);if(l=E,R)return{webWorker:l,serializedImage:w}}if(!f)throw Error("Could not find IO for: "+t);let n=te.get(f)[1],{webWorker:u,couldWrite:p,serializedImage:s}=await n(l,a,t,r);if(l=u,!p)throw Error("Could not write: "+t);return{webWorker:l,serializedImage:s}}var Xa=Za;async function $a(e,A,t,r={}){let a=[{type:m.JsonCompatible},{type:m.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:m.Image,data:A}],i=[],l="0";i.push(l);let f="0";i.push(f);let g=t;i.push(g),i.push("--memory-io"),typeof r.informationOnly<"u"&&r.informationOnly&&i.push("--information-only"),typeof r.useCompression<"u"&&r.useCompression&&i.push("--use-compression");let n="fdf-write-image",{webWorker:u,returnValue:p,stderr:s,outputs:I}=await B(e,n,i,a,o,{pipelineBaseUrl:C(),pipelineWorkerUrl:y()});if(p!==0&&s!=="")throw new Error(s);return{webWorker:u,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var eo=$a;var ur='data:text/javascript;charset=utf-8,var ce=Symbol("Comlink.proxy"),Ct=Symbol("Comlink.endpoint"),Bt=Symbol("Comlink.releaseProxy"),MA=Symbol("Comlink.finalizer"),sA=Symbol("Comlink.thrown"),fe=A=>typeof A=="object"&&A!==null||typeof A=="function",Qt={canHandle:A=>fe(A)&&A[ce],serialize(A){let{port1:e,port2:t}=new MessageChannel;return EA(A,e),[t,[t]]},deserialize(A){return A.start(),lt(A)}},Et={canHandle:A=>fe(A)&&sA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},le=new Map([["proxy",Qt],["throw",Et]]);function ct(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function EA(A,e=globalThis,t=["*"]){e.addEventListener("message",function I(r){if(!r||!r.data)return;if(!ct(t,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:i,type:g,path:n}=Object.assign({path:[]},r.data),E=(r.data.argumentList||[]).map(q),o;try{let B=n.slice(0,-1).reduce((a,C)=>a[C],A),c=n.reduce((a,C)=>a[C],A);switch(g){case"GET":o=c;break;case"SET":B[n.slice(-1)[0]]=q(r.data.value),o=!0;break;case"APPLY":o=c.apply(B,E);break;case"CONSTRUCT":{let a=new c(...E);o=mt(a)}break;case"ENDPOINT":{let{port1:a,port2:C}=new MessageChannel;EA(A,C),o=HA(a,[a])}break;case"RELEASE":o=void 0;break;default:return}}catch(B){o={value:B,[sA]:0}}Promise.resolve(o).catch(B=>({value:B,[sA]:0})).then(B=>{let[c,a]=QA(B);e.postMessage(Object.assign(Object.assign({},c),{id:i}),a),g==="RELEASE"&&(e.removeEventListener("message",I),ue(e),MA in A&&typeof A[MA]=="function"&&A[MA]())}).catch(B=>{let[c,a]=QA({value:new TypeError("Unserializable return value"),[sA]:0});e.postMessage(Object.assign(Object.assign({},c),{id:i}),a)})}),e.start&&e.start()}function ft(A){return A.constructor.name==="MessagePort"}function ue(A){ft(A)&&A.close()}function lt(A,e){return bA(A,[],e)}function aA(A){if(A)throw new Error("Proxy has been released and is not useable")}function he(A){return x(A,{type:"RELEASE"}).then(()=>{ue(A)})}var CA=new WeakMap,BA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(CA.get(A)||0)-1;CA.set(A,e),e===0&&he(A)});function ut(A,e){let t=(CA.get(e)||0)+1;CA.set(e,t),BA&&BA.register(A,e,A)}function ht(A){BA&&BA.unregister(A)}function bA(A,e=[],t=function(){}){let I=!1,r=new Proxy(t,{get(i,g){if(aA(I),g===Bt)return()=>{ht(r),he(A),I=!0};if(g==="then"){if(e.length===0)return{then:()=>r};let n=x(A,{type:"GET",path:e.map(E=>E.toString())}).then(q);return n.then.bind(n)}return bA(A,[...e,g])},set(i,g,n){aA(I);let[E,o]=QA(n);return x(A,{type:"SET",path:[...e,g].map(B=>B.toString()),value:E},o).then(q)},apply(i,g,n){aA(I);let E=e[e.length-1];if(E===Ct)return x(A,{type:"ENDPOINT"}).then(q);if(E==="bind")return bA(A,e.slice(0,-1));let[o,B]=Ee(n);return x(A,{type:"APPLY",path:e.map(c=>c.toString()),argumentList:o},B).then(q)},construct(i,g){aA(I);let[n,E]=Ee(g);return x(A,{type:"CONSTRUCT",path:e.map(o=>o.toString()),argumentList:n},E).then(q)}});return ut(r,A),r}function dt(A){return Array.prototype.concat.apply([],A)}function Ee(A){let e=A.map(QA);return[e.map(t=>t[0]),dt(e.map(t=>t[1]))]}var de=new WeakMap;function HA(A,e){return de.set(A,e),A}function mt(A){return Object.assign(A,{[ce]:!0})}function QA(A){for(let[e,t]of le)if(t.canHandle(A)){let[I,r]=t.serialize(A);return[{type:"HANDLER",name:e,value:I},r]}return[{type:"RAW",value:A},de.get(A)||[]]}function q(A){switch(A.type){case"HANDLER":return le.get(A.name).deserialize(A.value);case"RAW":return A.value}}function x(A,e,t){return new Promise(I=>{let r=Dt();A.addEventListener("message",function i(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",i),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},e),t)})}function Dt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function X(A,e){return function(){return A.apply(e,arguments)}}var{toString:yt}=Object.prototype,{getPrototypeOf:TA}=Object,fA=(A=>e=>{let t=yt.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),U=A=>(A=A.toLowerCase(),e=>fA(e)===A),lA=A=>e=>typeof e===A,{isArray:P}=Array,v=lA("undefined");function wt(A){return A!==null&&!v(A)&&A.constructor!==null&&!v(A.constructor)&&R(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var we=U("ArrayBuffer");function pt(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&we(A.buffer),e}var Ft=lA("string"),R=lA("function"),pe=lA("number"),uA=A=>A!==null&&typeof A=="object",St=A=>A===!0||A===!1,cA=A=>{if(fA(A)!=="object")return!1;let e=TA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Nt=U("Date"),Rt=U("File"),Gt=U("Blob"),Ut=U("FileList"),kt=A=>uA(A)&&R(A.pipe),Lt=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||R(A.append)&&((e=fA(A))==="formdata"||e==="object"&&R(A.toString)&&A.toString()==="[object FormData]"))},Ot=U("URLSearchParams"),Jt=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function $(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),P(A))for(I=0,r=A.length;I<r;I++)e.call(null,A[I],I,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),g=i.length,n;for(I=0;I<g;I++)n=i[I],e.call(null,A[n],n,A)}}function Fe(A,e){e=e.toLowerCase();let t=Object.keys(A),I=t.length,r;for(;I-- >0;)if(r=t[I],e===r.toLowerCase())return r;return null}var Se=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),Ne=A=>!v(A)&&A!==Se;function qA(){let{caseless:A}=Ne(this)&&this||{},e={},t=(I,r)=>{let i=A&&Fe(e,r)||r;cA(e[i])&&cA(I)?e[i]=qA(e[i],I):cA(I)?e[i]=qA({},I):P(I)?e[i]=I.slice():e[i]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&$(arguments[I],t);return e}var Mt=(A,e,t,{allOwnKeys:I}={})=>($(e,(r,i)=>{t&&R(r)?A[i]=X(r,t):A[i]=r},{allOwnKeys:I}),A),bt=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Ht=(A,e,t,I)=>{A.prototype=Object.create(e.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Yt=(A,e,t,I)=>{let r,i,g,n={};if(e=e||{},A==null)return e;do{for(r=Object.getOwnPropertyNames(A),i=r.length;i-- >0;)g=r[i],(!I||I(g,A,e))&&!n[g]&&(e[g]=A[g],n[g]=!0);A=t!==!1&&TA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},qt=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let I=A.indexOf(e,t);return I!==-1&&I===t},Tt=A=>{if(!A)return null;if(P(A))return A;let e=A.length;if(!pe(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Kt=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&TA(Uint8Array)),xt=(A,e)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let i=r.value;e.call(A,i[0],i[1])}},Pt=(A,e)=>{let t,I=[];for(;(t=A.exec(e))!==null;)I.push(t);return I},Wt=U("HTMLFormElement"),jt=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(t,I,r){return I.toUpperCase()+r}),De=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),Zt=U("RegExp"),Re=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),I={};$(t,(r,i)=>{e(r,i,A)!==!1&&(I[i]=r)}),Object.defineProperties(A,I)},_t=A=>{Re(A,(e,t)=>{if(R(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let I=A[t];if(R(I)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method \'"+t+"\'")})}})},Vt=(A,e)=>{let t={},I=r=>{r.forEach(i=>{t[i]=!0})};return P(A)?I(A):I(String(A).split(e)),t},zt=()=>{},Xt=(A,e)=>(A=+A,Number.isFinite(A)?A:e),YA="abcdefghijklmnopqrstuvwxyz",ye="0123456789",Ge={DIGIT:ye,ALPHA:YA,ALPHA_DIGIT:YA+YA.toUpperCase()+ye},vt=(A=16,e=Ge.ALPHA_DIGIT)=>{let t="",{length:I}=e;for(;A--;)t+=e[Math.random()*I|0];return t};function $t(A){return!!(A&&R(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var AI=A=>{let e=new Array(10),t=(I,r)=>{if(uA(I)){if(e.indexOf(I)>=0)return;if(!("toJSON"in I)){e[r]=I;let i=P(I)?[]:{};return $(I,(g,n)=>{let E=t(g,r+1);!v(E)&&(i[n]=E)}),e[r]=void 0,i}}return I};return t(A,0)},eI=U("AsyncFunction"),tI=A=>A&&(uA(A)||R(A))&&R(A.then)&&R(A.catch),s={isArray:P,isArrayBuffer:we,isBuffer:wt,isFormData:Lt,isArrayBufferView:pt,isString:Ft,isNumber:pe,isBoolean:St,isObject:uA,isPlainObject:cA,isUndefined:v,isDate:Nt,isFile:Rt,isBlob:Gt,isRegExp:Zt,isFunction:R,isStream:kt,isURLSearchParams:Ot,isTypedArray:Kt,isFileList:Ut,forEach:$,merge:qA,extend:Mt,trim:Jt,stripBOM:bt,inherits:Ht,toFlatObject:Yt,kindOf:fA,kindOfTest:U,endsWith:qt,toArray:Tt,forEachEntry:xt,matchAll:Pt,isHTMLForm:Wt,hasOwnProperty:De,hasOwnProp:De,reduceDescriptors:Re,freezeMethods:_t,toObjectSet:Vt,toCamelCase:jt,noop:zt,toFiniteNumber:Xt,findKey:Fe,global:Se,isContextDefined:Ne,ALPHABET:Ge,generateString:vt,isSpecCompliantForm:$t,toJSONObject:AI,isAsyncFn:eI,isThenable:tI};function W(A,e,t,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),I&&(this.request=I),r&&(this.response=r)}s.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:s.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Ue=W.prototype,ke={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{ke[A]={value:A}});Object.defineProperties(W,ke);Object.defineProperty(Ue,"isAxiosError",{value:!0});W.from=(A,e,t,I,r,i)=>{let g=Object.create(Ue);return s.toFlatObject(A,g,function(E){return E!==Error.prototype},n=>n!=="isAxiosError"),W.call(g,A.message,e,t,I,r),g.cause=A,g.name=A.name,i&&Object.assign(g,i),g};var l=W;var hA=null;function KA(A){return s.isPlainObject(A)||s.isArray(A)}function Oe(A){return s.endsWith(A,"[]")?A.slice(0,-2):A}function Le(A,e,t){return A?A.concat(e).map(function(r,i){return r=Oe(r),!t&&i?"["+r+"]":r}).join(t?".":""):e}function II(A){return s.isArray(A)&&!A.some(KA)}var rI=s.toFlatObject(s,{},null,function(e){return/^is[A-Z]/.test(e)});function iI(A,e,t){if(!s.isObject(A))throw new TypeError("target must be an object");e=e||new(hA||FormData),t=s.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,m){return!s.isUndefined(m[f])});let I=t.metaTokens,r=t.visitor||B,i=t.dots,g=t.indexes,E=(t.Blob||typeof Blob<"u"&&Blob)&&s.isSpecCompliantForm(e);if(!s.isFunction(r))throw new TypeError("visitor must be a function");function o(Q){if(Q===null)return"";if(s.isDate(Q))return Q.toISOString();if(!E&&s.isBlob(Q))throw new l("Blob is not supported. Use a Buffer instead.");return s.isArrayBuffer(Q)||s.isTypedArray(Q)?E&&typeof Blob=="function"?new Blob([Q]):Buffer.from(Q):Q}function B(Q,f,m){let w=Q;if(Q&&!m&&typeof Q=="object"){if(s.endsWith(f,"{}"))f=I?f:f.slice(0,-2),Q=JSON.stringify(Q);else if(s.isArray(Q)&&II(Q)||(s.isFileList(Q)||s.endsWith(f,"[]"))&&(w=s.toArray(Q)))return f=Oe(f),w.forEach(function(K,JA){!(s.isUndefined(K)||K===null)&&e.append(g===!0?Le([f],JA,i):g===null?f:f+"[]",o(K))}),!1}return KA(Q)?!0:(e.append(Le(m,f,i),o(Q)),!1)}let c=[],a=Object.assign(rI,{defaultVisitor:B,convertValue:o,isVisitable:KA});function C(Q,f){if(!s.isUndefined(Q)){if(c.indexOf(Q)!==-1)throw Error("Circular reference detected in "+f.join("."));c.push(Q),s.forEach(Q,function(w,O){(!(s.isUndefined(w)||w===null)&&r.call(e,w,s.isString(O)?O.trim():O,f,a))===!0&&C(w,f?f.concat(O):[O])}),c.pop()}}if(!s.isObject(A))throw new TypeError("data must be an object");return C(A),e}var J=iI;function Je(A){let e={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return e[I]})}function Me(A,e){this._pairs=[],A&&J(A,this,e)}var be=Me.prototype;be.append=function(e,t){this._pairs.push([e,t])};be.toString=function(e){let t=e?function(I){return e.call(this,I,Je)}:Je;return this._pairs.map(function(r){return t(r[0])+"="+t(r[1])},"").join("&")};var dA=Me;function gI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function AA(A,e,t){if(!e)return A;let I=t&&t.encode||gI,r=t&&t.serialize,i;if(r?i=r(e,t):i=s.isURLSearchParams(e)?e.toString():new dA(e,t).toString(I),i){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var xA=class{constructor(){this.handlers=[]}use(e,t,I){return this.handlers.push({fulfilled:e,rejected:t,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){s.forEach(this.handlers,function(I){I!==null&&e(I)})}},PA=xA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var He=typeof URLSearchParams<"u"?URLSearchParams:dA;var Ye=typeof FormData<"u"?FormData:null;var qe=typeof Blob<"u"?Blob:null;var oI=(()=>{let A;return typeof navigator<"u"&&((A=navigator.product)==="ReactNative"||A==="NativeScript"||A==="NS")?!1:typeof window<"u"&&typeof document<"u"})(),nI=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")(),D={isBrowser:!0,classes:{URLSearchParams:He,FormData:Ye,Blob:qe},isStandardBrowserEnv:oI,isStandardBrowserWebWorkerEnv:nI,protocols:["http","https","file","blob","url","data"]};function WA(A,e){return J(A,new D.classes.URLSearchParams,Object.assign({visitor:function(t,I,r,i){return D.isNode&&s.isBuffer(t)?(this.append(I,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function aI(A){return s.matchAll(/\\w+|\\[(\\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function sI(A){let e={},t=Object.keys(A),I,r=t.length,i;for(I=0;I<r;I++)i=t[I],e[i]=A[i];return e}function CI(A){function e(t,I,r,i){let g=t[i++],n=Number.isFinite(+g),E=i>=t.length;return g=!g&&s.isArray(r)?r.length:g,E?(s.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!n):((!r[g]||!s.isObject(r[g]))&&(r[g]=[]),e(t,I,r[g],i)&&s.isArray(r[g])&&(r[g]=sI(r[g])),!n)}if(s.isFormData(A)&&s.isFunction(A.entries)){let t={};return s.forEachEntry(A,(I,r)=>{e(aI(I),r,t,0)}),t}return null}var DA=CI;var BI={"Content-Type":void 0};function QI(A,e,t){if(s.isString(A))try{return(e||JSON.parse)(A),s.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(t||JSON.stringify)(A)}var yA={transitional:mA,adapter:["xhr","http"],transformRequest:[function(e,t){let I=t.getContentType()||"",r=I.indexOf("application/json")>-1,i=s.isObject(e);if(i&&s.isHTMLForm(e)&&(e=new FormData(e)),s.isFormData(e))return r&&r?JSON.stringify(DA(e)):e;if(s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let n;if(i){if(I.indexOf("application/x-www-form-urlencoded")>-1)return WA(e,this.formSerializer).toString();if((n=s.isFileList(e))||I.indexOf("multipart/form-data")>-1){let E=this.env&&this.env.FormData;return J(n?{"files[]":e}:e,E&&new E,this.formSerializer)}}return i||r?(t.setContentType("application/json",!1),QI(e)):e}],transformResponse:[function(e){let t=this.transitional||yA.transitional,I=t&&t.forcedJSONParsing,r=this.responseType==="json";if(e&&s.isString(e)&&(I&&!this.responseType||r)){let g=!(t&&t.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(n){if(g)throw n.name==="SyntaxError"?l.from(n,l.ERR_BAD_RESPONSE,this,null,this.response):n}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:D.classes.FormData,Blob:D.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};s.forEach(["delete","get","head"],function(e){yA.headers[e]={}});s.forEach(["post","put","patch"],function(e){yA.headers[e]=s.merge(BI)});var j=yA;var EI=s.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Te=A=>{let e={},t,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),t=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!t||e[t]&&EI[t])&&(t==="set-cookie"?e[t]?e[t].push(I):e[t]=[I]:e[t]=e[t]?e[t]+", "+I:I)}),e};var Ke=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function wA(A){return A===!1||A==null?A:s.isArray(A)?A.map(wA):String(A)}function cI(A){let e=Object.create(null),t=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=t.exec(A);)e[I[1]]=I[2];return e}var fI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function jA(A,e,t,I,r){if(s.isFunction(I))return I.call(this,e,t);if(r&&(e=t),!!s.isString(e)){if(s.isString(I))return e.indexOf(I)!==-1;if(s.isRegExp(I))return I.test(e)}}function lI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(e,t,I)=>t.toUpperCase()+I)}function uI(A,e){let t=s.toCamelCase(" "+e);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+t,{value:function(r,i,g){return this[I].call(this,e,r,i,g)},configurable:!0})})}var Z=class{constructor(e){e&&this.set(e)}set(e,t,I){let r=this;function i(n,E,o){let B=eA(E);if(!B)throw new Error("header name must be a non-empty string");let c=s.findKey(r,B);(!c||r[c]===void 0||o===!0||o===void 0&&r[c]!==!1)&&(r[c||E]=wA(n))}let g=(n,E)=>s.forEach(n,(o,B)=>i(o,B,E));return s.isPlainObject(e)||e instanceof this.constructor?g(e,t):s.isString(e)&&(e=e.trim())&&!fI(e)?g(Te(e),t):e!=null&&i(t,e,I),this}get(e,t){if(e=eA(e),e){let I=s.findKey(this,e);if(I){let r=this[I];if(!t)return r;if(t===!0)return cI(r);if(s.isFunction(t))return t.call(this,r,I);if(s.isRegExp(t))return t.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=eA(e),e){let I=s.findKey(this,e);return!!(I&&this[I]!==void 0&&(!t||jA(this,this[I],I,t)))}return!1}delete(e,t){let I=this,r=!1;function i(g){if(g=eA(g),g){let n=s.findKey(I,g);n&&(!t||jA(I,I[n],n,t))&&(delete I[n],r=!0)}}return s.isArray(e)?e.forEach(i):i(e),r}clear(e){let t=Object.keys(this),I=t.length,r=!1;for(;I--;){let i=t[I];(!e||jA(this,this[i],i,e,!0))&&(delete this[i],r=!0)}return r}normalize(e){let t=this,I={};return s.forEach(this,(r,i)=>{let g=s.findKey(I,i);if(g){t[g]=wA(r),delete t[i];return}let n=e?lI(i):String(i).trim();n!==i&&delete t[i],t[n]=wA(r),I[n]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return s.forEach(this,(I,r)=>{I!=null&&I!==!1&&(t[r]=e&&s.isArray(I)?I.join(", "):I)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let I=new this(e);return t.forEach(r=>I.set(r)),I}static accessor(e){let I=(this[Ke]=this[Ke]={accessors:{}}).accessors,r=this.prototype;function i(g){let n=eA(g);I[n]||(uI(r,g),I[n]=!0)}return s.isArray(e)?e.forEach(i):i(e),this}};Z.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);s.freezeMethods(Z.prototype);s.freezeMethods(Z);var p=Z;function tA(A,e){let t=this||j,I=e||t,r=p.from(I.headers),i=I.data;return s.forEach(A,function(n){i=n.call(t,i,r.normalize(),e?e.status:void 0)}),r.normalize(),i}function IA(A){return!!(A&&A.__CANCEL__)}function xe(A,e,t){l.call(this,A??"canceled",l.ERR_CANCELED,e,t),this.name="CanceledError"}s.inherits(xe,l,{__CANCEL__:!0});var M=xe;function ZA(A,e,t){let I=t.config.validateStatus;!t.status||!I||I(t.status)?A(t):e(new l("Request failed with status code "+t.status,[l.ERR_BAD_REQUEST,l.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var Pe=D.isStandardBrowserEnv?function(){return{write:function(t,I,r,i,g,n){let E=[];E.push(t+"="+encodeURIComponent(I)),s.isNumber(r)&&E.push("expires="+new Date(r).toGMTString()),s.isString(i)&&E.push("path="+i),s.isString(g)&&E.push("domain="+g),n===!0&&E.push("secure"),document.cookie=E.join("; ")},read:function(t){let I=document.cookie.match(new RegExp("(^|;\\\\s*)("+t+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function _A(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function VA(A,e){return e?A.replace(/\\/+$/,"")+"/"+e.replace(/^\\/+/,""):A}function rA(A,e){return A&&!_A(e)?VA(A,e):e}var We=D.isStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),I;function r(i){let g=i;return e&&(t.setAttribute("href",g),g=t.href),t.setAttribute("href",g),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\\?/,""):"",hash:t.hash?t.hash.replace(/^%23/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return I=r(window.location.href),function(g){let n=s.isString(g)?r(g):g;return n.protocol===I.protocol&&n.host===I.host}}():function(){return function(){return!0}}();function zA(A){let e=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return e&&e[1]||""}function hI(A,e){A=A||10;let t=new Array(A),I=new Array(A),r=0,i=0,g;return e=e!==void 0?e:1e3,function(E){let o=Date.now(),B=I[i];g||(g=o),t[r]=E,I[r]=o;let c=i,a=0;for(;c!==r;)a+=t[c++],c=c%A;if(r=(r+1)%A,r===i&&(i=(i+1)%A),o-g<e)return;let C=B&&o-B;return C?Math.round(a*1e3/C):void 0}}var je=hI;function Ze(A,e){let t=0,I=je(50,250);return r=>{let i=r.loaded,g=r.lengthComputable?r.total:void 0,n=i-t,E=I(n),o=i<=g;t=i;let B={loaded:i,total:g,progress:g?i/g:void 0,bytes:n,rate:E||void 0,estimated:E&&g&&o?(g-i)/E:void 0,event:r};B[e?"download":"upload"]=!0,A(B)}}var dI=typeof XMLHttpRequest<"u",_e=dI&&function(A){return new Promise(function(t,I){let r=A.data,i=p.from(A.headers).normalize(),g=A.responseType,n;function E(){A.cancelToken&&A.cancelToken.unsubscribe(n),A.signal&&A.signal.removeEventListener("abort",n)}s.isFormData(r)&&(D.isStandardBrowserEnv||D.isStandardBrowserWebWorkerEnv?i.setContentType(!1):i.setContentType("multipart/form-data;",!1));let o=new XMLHttpRequest;if(A.auth){let C=A.auth.username||"",Q=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";i.set("Authorization","Basic "+btoa(C+":"+Q))}let B=rA(A.baseURL,A.url);o.open(A.method.toUpperCase(),AA(B,A.params,A.paramsSerializer),!0),o.timeout=A.timeout;function c(){if(!o)return;let C=p.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders()),f={data:!g||g==="text"||g==="json"?o.responseText:o.response,status:o.status,statusText:o.statusText,headers:C,config:A,request:o};ZA(function(w){t(w),E()},function(w){I(w),E()},f),o=null}if("onloadend"in o?o.onloadend=c:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf("file:")===0)||setTimeout(c)},o.onabort=function(){o&&(I(new l("Request aborted",l.ECONNABORTED,A,o)),o=null)},o.onerror=function(){I(new l("Network Error",l.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let Q=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",f=A.transitional||mA;A.timeoutErrorMessage&&(Q=A.timeoutErrorMessage),I(new l(Q,f.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,A,o)),o=null},D.isStandardBrowserEnv){let C=(A.withCredentials||We(B))&&A.xsrfCookieName&&Pe.read(A.xsrfCookieName);C&&i.set(A.xsrfHeaderName,C)}r===void 0&&i.setContentType(null),"setRequestHeader"in o&&s.forEach(i.toJSON(),function(Q,f){o.setRequestHeader(f,Q)}),s.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),g&&g!=="json"&&(o.responseType=A.responseType),typeof A.onDownloadProgress=="function"&&o.addEventListener("progress",Ze(A.onDownloadProgress,!0)),typeof A.onUploadProgress=="function"&&o.upload&&o.upload.addEventListener("progress",Ze(A.onUploadProgress)),(A.cancelToken||A.signal)&&(n=C=>{o&&(I(!C||C.type?new M(null,A,o):C),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(n),A.signal&&(A.signal.aborted?n():A.signal.addEventListener("abort",n)));let a=zA(B);if(a&&D.protocols.indexOf(a)===-1){I(new l("Unsupported protocol "+a+":",l.ERR_BAD_REQUEST,A));return}o.send(r||null)})};var pA={http:hA,xhr:_e};s.forEach(pA,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Ve={getAdapter:A=>{A=s.isArray(A)?A:[A];let{length:e}=A,t,I;for(let r=0;r<e&&(t=A[r],!(I=s.isString(t)?pA[t.toLowerCase()]:t));r++);if(!I)throw I===!1?new l(`Adapter ${t} is not supported by the environment`,"ERR_NOT_SUPPORT"):new Error(s.hasOwnProp(pA,t)?`Adapter \'${t}\' is not available in the build`:`Unknown adapter \'${t}\'`);if(!s.isFunction(I))throw new TypeError("adapter is not a function");return I},adapters:pA};function XA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new M(null,A)}function FA(A){return XA(A),A.headers=p.from(A.headers),A.data=tA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),Ve.getAdapter(A.adapter||j.adapter)(A).then(function(I){return XA(A),I.data=tA.call(A,A.transformResponse,I),I.headers=p.from(I.headers),I},function(I){return IA(I)||(XA(A),I&&I.response&&(I.response.data=tA.call(A,A.transformResponse,I.response),I.response.headers=p.from(I.response.headers))),Promise.reject(I)})}var ze=A=>A instanceof p?A.toJSON():A;function k(A,e){e=e||{};let t={};function I(o,B,c){return s.isPlainObject(o)&&s.isPlainObject(B)?s.merge.call({caseless:c},o,B):s.isPlainObject(B)?s.merge({},B):s.isArray(B)?B.slice():B}function r(o,B,c){if(s.isUndefined(B)){if(!s.isUndefined(o))return I(void 0,o,c)}else return I(o,B,c)}function i(o,B){if(!s.isUndefined(B))return I(void 0,B)}function g(o,B){if(s.isUndefined(B)){if(!s.isUndefined(o))return I(void 0,o)}else return I(void 0,B)}function n(o,B,c){if(c in e)return I(o,B);if(c in A)return I(void 0,o)}let E={url:i,method:i,data:i,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:n,headers:(o,B)=>r(ze(o),ze(B),!0)};return s.forEach(Object.keys(Object.assign({},A,e)),function(B){let c=E[B]||r,a=c(A[B],e[B],B);s.isUndefined(a)&&c!==n||(t[B]=a)}),t}var SA="1.4.0";var vA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{vA[A]=function(I){return typeof I===A||"a"+(e<1?"n ":" ")+A}});var Xe={};vA.transitional=function(e,t,I){function r(i,g){return"[Axios v"+SA+"] Transitional option \'"+i+"\'"+g+(I?". "+I:"")}return(i,g,n)=>{if(e===!1)throw new l(r(g," has been removed"+(t?" in "+t:"")),l.ERR_DEPRECATED);return t&&!Xe[g]&&(Xe[g]=!0,console.warn(r(g," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,g,n):!0}};function mI(A,e,t){if(typeof A!="object")throw new l("options must be an object",l.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let i=I[r],g=e[i];if(g){let n=A[i],E=n===void 0||g(n,i,A);if(E!==!0)throw new l("option "+i+" must be "+E,l.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new l("Unknown option "+i,l.ERR_BAD_OPTION)}}var NA={assertOptions:mI,validators:vA};var b=NA.validators,_=class{constructor(e){this.defaults=e,this.interceptors={request:new PA,response:new PA}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=k(this.defaults,t);let{transitional:I,paramsSerializer:r,headers:i}=t;I!==void 0&&NA.assertOptions(I,{silentJSONParsing:b.transitional(b.boolean),forcedJSONParsing:b.transitional(b.boolean),clarifyTimeoutError:b.transitional(b.boolean)},!1),r!=null&&(s.isFunction(r)?t.paramsSerializer={serialize:r}:NA.assertOptions(r,{encode:b.function,serialize:b.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let g;g=i&&s.merge(i.common,i[t.method]),g&&s.forEach(["delete","get","head","post","put","patch","common"],Q=>{delete i[Q]}),t.headers=p.concat(g,i);let n=[],E=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(t)===!1||(E=E&&f.synchronous,n.unshift(f.fulfilled,f.rejected))});let o=[];this.interceptors.response.forEach(function(f){o.push(f.fulfilled,f.rejected)});let B,c=0,a;if(!E){let Q=[FA.bind(this),void 0];for(Q.unshift.apply(Q,n),Q.push.apply(Q,o),a=Q.length,B=Promise.resolve(t);c<a;)B=B.then(Q[c++],Q[c++]);return B}a=n.length;let C=t;for(c=0;c<a;){let Q=n[c++],f=n[c++];try{C=Q(C)}catch(m){f.call(this,m);break}}try{B=FA.call(this,C)}catch(Q){return Promise.reject(Q)}for(c=0,a=o.length;c<a;)B=B.then(o[c++],o[c++]);return B}getUri(e){e=k(this.defaults,e);let t=rA(e.baseURL,e.url);return AA(t,e.params,e.paramsSerializer)}};s.forEach(["delete","get","head","options"],function(e){_.prototype[e]=function(t,I){return this.request(k(I||{},{method:e,url:t,data:(I||{}).data}))}});s.forEach(["post","put","patch"],function(e){function t(I){return function(i,g,n){return this.request(k(n||{},{method:e,headers:I?{"Content-Type":"multipart/form-data"}:{},url:i,data:g}))}}_.prototype[e]=t(),_.prototype[e+"Form"]=t(!0)});var iA=_;var $A=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let I=this;this.promise.then(r=>{if(!I._listeners)return;let i=I._listeners.length;for(;i-- >0;)I._listeners[i](r);I._listeners=null}),this.promise.then=r=>{let i,g=new Promise(n=>{I.subscribe(n),i=n}).then(r);return g.cancel=function(){I.unsubscribe(i)},g},e(function(i,g,n){I.reason||(I.reason=new M(i,g,n),t(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(r){e=r}),cancel:e}}},ve=$A;function Ae(A){return function(t){return A.apply(null,t)}}function ee(A){return s.isObject(A)&&A.isAxiosError===!0}var te={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(te).forEach(([A,e])=>{te[e]=A});var $e=te;function At(A){let e=new iA(A),t=X(iA.prototype.request,e);return s.extend(t,iA.prototype,e,{allOwnKeys:!0}),s.extend(t,e,null,{allOwnKeys:!0}),t.create=function(r){return At(k(A,r))},t}var h=At(j);h.Axios=iA;h.CanceledError=M;h.CancelToken=ve;h.isCancel=IA;h.VERSION=SA;h.toFormData=J;h.AxiosError=l;h.Cancel=h.CanceledError;h.all=function(e){return Promise.all(e)};h.spread=Ae;h.isAxiosError=ee;h.mergeConfig=k;h.AxiosHeaders=p;h.formToJSON=A=>DA(s.isHTMLForm(A)?new FormData(A):A);h.HttpStatusCode=$e;h.default=h;var RA=h;var{Axios:Sg,AxiosError:Ng,CanceledError:Rg,isCancel:Gg,CancelToken:Ug,VERSION:kg,all:Lg,Cancel:Og,isAxiosError:Jg,spread:Mg,toFormData:bg,AxiosHeaders:Hg,HttpStatusCode:Yg,formToJSON:qg,mergeConfig:Tg}=RA;var gA,L,re,Ie={env:{emscripten_notify_memory_growth:function(A){re=new Uint8Array(L.exports.memory.buffer)}}},GA=class{init(){return gA||(typeof fetch<"u"?gA=fetch("data:application/wasm;base64,"+et).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,Ie)).then(this._init):gA=WebAssembly.instantiate(Buffer.from(et,"base64"),Ie).then(this._init),gA)}_init(e){L=e.instance,Ie.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!L)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=e.byteLength,r=L.exports.malloc(I);re.set(e,r),t=t||Number(L.exports.ZSTD_findDecompressedSize(r,I));let i=L.exports.malloc(t),g=L.exports.ZSTD_decompress(i,t,r,I),n=re.slice(i,i+g);return L.exports.free(r),L.exports.free(i),n}},et="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var tt=new GA,It=!1;async function DI(A,e){let t=null;typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=`${e}/${A}`,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let I=`${t}.wasm`,r=await RA.get(`${I}.zst`,{responseType:"arraybuffer"});It||(await tt.init(),It=!0);let g=tt.decode(new Uint8Array(r.data)).buffer;return(await import(`${t}.js`)).default({wasmBinary:g})}var rt=DI;var UA=new Map;async function yI(A,e){let t=A,I=A,r=null;return typeof A!="string"&&(t=new URL(A.href),I=t.href),UA.has(I)||UA.set(I,await rt(t,e)),r=UA.get(I),r}var G=yI;var wI=new Map([["image/jpeg","JPEGImageIO"],["image/png","PNGImageIO"],["image/tiff","TIFFImageIO"],["image/x-ms-bmp","BMPImageIO"],["image/x-bmp","BMPImageIO"],["image/bmp","BMPImageIO"],["application/dicom","GDCMImageIO"]]),ie=wI;var pI=new Map([["bmp","BMPImageIO"],["BMP","BMPImageIO"],["dcm","GDCMImageIO"],["DCM","GDCMImageIO"],["gipl","GiplImageIO"],["gipl.gz","GiplImageIO"],["hdf5","HDF5ImageIO"],["jpg","JPEGImageIO"],["JPG","JPEGImageIO"],["jpeg","JPEGImageIO"],["JPEG","JPEGImageIO"],["iwi","WasmImageIO"],["iwi.cbor","WasmImageIO"],["iwi.cbor.zst","WasmZstdImageIO"],["lsm","LSMImageIO"],["mnc","MINCImageIO"],["MNC","MINCImageIO"],["mnc.gz","MINCImageIO"],["MNC.GZ","MINCImageIO"],["mnc2","MINCImageIO"],["MNC2","MINCImageIO"],["mgh","MGHImageIO"],["mgz","MGHImageIO"],["mgh.gz","MGHImageIO"],["mha","MetaImageIO"],["mhd","MetaImageIO"],["mrc","MRCImageIO"],["nia","NiftiImageIO"],["nii","NiftiImageIO"],["nii.gz","NiftiImageIO"],["hdr","NiftiImageIO"],["nrrd","NrrdImageIO"],["NRRD","NrrdImageIO"],["nhdr","NrrdImageIO"],["NHDR","NrrdImageIO"],["png","PNGImageIO"],["PNG","PNGImageIO"],["pic","BioRadImageIO"],["PIC","BioRadImageIO"],["tif","TIFFImageIO"],["TIF","TIFFImageIO"],["tiff","TIFFImageIO"],["TIFF","TIFFImageIO"],["vtk","VTKImageIO"],["VTK","VTKImageIO"],["isq","ScancoImageIO"],["ISQ","ScancoImageIO"],["fdf","FDFImageIO"],["FDF","FDFImageIO"]]),ge=pI;function FI(A){let e=A.slice((A.lastIndexOf(".")-1>>>0)+2);if(e.toLowerCase()==="gz"){let t=A.slice(0,-3).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="cbor"){let t=A.slice(0,-5).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zst"){let t=A.slice(0,-10).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zip"){let t=A.slice(0,-4).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}return e}var kA=FI;var SI=["PNGImageIO","MetaImageIO","TIFFImageIO","NiftiImageIO","JPEGImageIO","NrrdImageIO","VTKImageIO","BMPImageIO","HDF5ImageIO","MINCImageIO","MRCImageIO","LSMImageIO","MGHImageIO","BioRadImageIO","GiplImageIO","GEAdwImageIO","GE4ImageIO","GE5ImageIO","GDCMImageIO","ScancoImageIO","FDFImageIO","WasmImageIO","WasmZstdImageIO"],LA=SI;var NI={TextFile:"InterfaceTextFile",BinaryFile:"InterfaceBinaryFile",TextStream:"InterfaceTextStream",BinaryStream:"InterfaceBinaryStream",Image:"InterfaceImage",Mesh:"InterfaceMesh",PolyData:"InterfacePolyData",JsonCompatible:"InterfaceJsonCompatible"},u=NI;var RI={Text:"Text",Binary:"Binary",Image:"Image",Mesh:"Mesh"},S=RI;var GI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},F=GI;var UI={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},T=UI;function kI(A,e){let t=null;switch(A){case F.UInt8:{t=new Uint8Array(e);break}case F.Int8:{t=new Int8Array(e);break}case F.UInt16:{t=new Uint16Array(e);break}case F.Int16:{t=new Int16Array(e);break}case F.UInt32:{t=new Uint32Array(e);break}case F.Int32:{t=new Int32Array(e);break}case F.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case F.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case T.Float32:{t=new Float32Array(e);break}case T.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var d=kI;var ot=typeof globalThis.SharedArrayBuffer=="function",it=new TextEncoder,gt=new TextDecoder("utf-8");function H(A,e){let t={flags:"r",encoding:"binary"},I=A.fs_open(e,t.flags),i=A.fs_stat(e).size,g=null;ot?g=new SharedArrayBuffer(i):g=new ArrayBuffer(i);let n=new Uint8Array(g);return A.fs_read(I,n,0,i,0),A.fs_close(I),n}function nt(A,e,t){let I=null;ot?I=new SharedArrayBuffer(t):I=new ArrayBuffer(t);let r=new Uint8Array(I),i=new Uint8Array(A.HEAPU8.buffer,e,t);return r.set(i),r}function y(A,e,t,I){let r=0;return e!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,I,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),r)),r}function V(A,e,t){let I=JSON.stringify(e),r=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,I.length]);A.writeAsciiToMemory(I,r,!1)}function N(A,e,t,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),g=nt(A,r,i);return d(I,g.buffer)}function oe(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),I=A.AsciiToString(t);return JSON.parse(I)}function LI(A,e,t,I){I!=null&&I.length>0&&I.forEach(function(o,B){var c;switch(o.type){case u.TextStream:{let a=it.encode(o.data.data),C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.JsonCompatible:{let a=it.encode(JSON.stringify(o.data)),C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.BinaryStream:{let a=o.data.data,C=y(A,a,B,0),Q={size:a.buffer.byteLength,data:`data:application/vnd.itk.address,0:${C}`};V(A,Q,B);break}case u.TextFile:{A.fs_writeFile(o.data.path,o.data.data);break}case u.BinaryFile:{A.fs_writeFile(o.data.path,o.data.data);break}case u.Image:{let a=o.data,C=y(A,a.data,B,0),Q=y(A,a.direction,B,1),f=typeof((c=a.metadata)===null||c===void 0?void 0:c.entries)<"u"?JSON.stringify(Array.from(a.metadata.entries())):"[]",m={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:`data:application/vnd.itk.address,0:${Q}`,size:a.size,data:`data:application/vnd.itk.address,0:${C}`,metadata:f};V(A,m,B);break}case u.Mesh:{let a=o.data,C=y(A,a.points,B,0),Q=y(A,a.cells,B,1),f=y(A,a.pointData,B,2),m=y(A,a.cellData,B,3),w={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,numberOfCells:a.numberOfCells,cells:`data:application/vnd.itk.address,0:${Q}`,cellBufferSize:a.cellBufferSize,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${f}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${m}`};V(A,w,B);break}case u.PolyData:{let a=o.data,C=y(A,a.points,B,0),Q=y(A,a.vertices,B,1),f=y(A,a.lines,B,2),m=y(A,a.polygons,B,3),w=y(A,a.triangleStrips,B,4),O=y(A,a.pointData,B,5),K=y(A,a.pointData,B,6),JA={polyDataType:a.polyDataType,name:a.name,numberOfPoints:a.numberOfPoints,points:`data:application/vnd.itk.address,0:${C}`,verticesBufferSize:a.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${Q}`,linesBufferSize:a.linesBufferSize,lines:`data:application/vnd.itk.address,0:${f}`,polygonsBufferSize:a.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${m}`,triangleStripsBufferSize:a.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${w}`,numberOfPointPixels:a.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${O}`,numberOfCellPixels:a.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${K}`};V(A,JA,B);break}case S.Text:{A.fs_writeFile(o.path,o.data);break}case S.Binary:{A.fs_writeFile(o.path,o.data);break}case S.Image:{let a=o.data,C={imageType:a.imageType,name:a.name,origin:a.origin,spacing:a.spacing,direction:"data:application/vnd.itk.path,data/direction.raw",size:a.size,data:"data:application/vnd.itk.path,data/data.raw"};if(A.fs_mkdirs(`${o.path}/data`),A.fs_writeFile(`${o.path}/index.json`,JSON.stringify(C)),a.data===null)throw Error("image.data is null");A.fs_writeFile(`${o.path}/data/data.raw`,new Uint8Array(a.data.buffer)),A.fs_writeFile(`${o.path}/data/direction.raw`,new Uint8Array(a.direction.buffer));break}case S.Mesh:{let a=o.data,C={meshType:a.meshType,name:a.name,numberOfPoints:a.numberOfPoints,points:"data:application/vnd.itk.path,data/points.raw",numberOfPointPixels:a.numberOfPointPixels,pointData:"data:application/vnd.itk.path,data/pointData.raw",numberOfCells:a.numberOfCells,cells:"data:application/vnd.itk.path,data/cells.raw",numberOfCellPixels:a.numberOfCellPixels,cellData:"data:application/vnd.itk.path,data/cellData.raw",cellBufferSize:a.cellBufferSize};if(A.fs_mkdirs(`${o.path}/data`),A.fs_writeFile(`${o.path}/index.json`,JSON.stringify(C)),C.numberOfPoints>0){if(a.points===null)throw Error("mesh.points is null");A.fs_writeFile(`${o.path}/data/points.raw`,new Uint8Array(a.points.buffer))}if(C.numberOfPointPixels>0){if(a.pointData===null)throw Error("mesh.pointData is null");A.fs_writeFile(`${o.path}/data/pointData.raw`,new Uint8Array(a.pointData.buffer))}if(C.numberOfCells>0){if(a.cells===null)throw Error("mesh.cells is null");A.fs_writeFile(`${o.path}/data/cells.raw`,new Uint8Array(a.cells.buffer))}if(C.numberOfCellPixels>0){if(a.cellData===null)throw Error("mesh.cellData is null");A.fs_writeFile(`${o.path}/data/cellData.raw`,new Uint8Array(a.cellData.buffer))}break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(o){throw typeof o=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(o)):console.error("Build module in Debug mode for exception message information.")),o}finally{A.stackRestore(r)}let g=A.getModuleStdout(),n=A.getModuleStderr(),E=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(o,B){let c=null;switch(o.type){case u.TextStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),f=new Uint8Array(A.HEAPU8.buffer,C,Q);c={data:gt.decode(f)};break}case u.JsonCompatible:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]),f=new Uint8Array(A.HEAPU8.buffer,C,Q);c=JSON.parse(gt.decode(f));break}case u.BinaryStream:{let C=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,B,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,B,0]);c={data:nt(A,C,Q)};break}case u.TextFile:{c={path:o.data.path,data:A.fs_readFile(o.data.path,{encoding:"utf8"})};break}case u.BinaryFile:{c={path:o.data.path,data:H(A,o.data.path)};break}case u.Image:{let C=oe(A,B);C.data=N(A,B,0,C.imageType.componentType),C.direction=N(A,B,1,T.Float64),C.metadata=new Map(C.metadata),c=C;break}case u.Mesh:{let C=oe(A,B);C.numberOfPoints>0?C.points=N(A,B,0,C.meshType.pointComponentType):C.points=d(C.meshType.pointComponentType,new ArrayBuffer(0)),C.numberOfCells>0?C.cells=N(A,B,1,C.meshType.cellComponentType):C.cells=d(C.meshType.cellComponentType,new ArrayBuffer(0)),C.numberOfPointPixels>0?C.pointData=N(A,B,2,C.meshType.pointPixelComponentType):C.pointData=d(C.meshType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,B,3,C.meshType.cellPixelComponentType):C.cellData=d(C.meshType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case u.PolyData:{let C=oe(A,B);C.numberOfPoints>0?C.points=N(A,B,0,T.Float32):C.points=new Float32Array,C.verticesBufferSize>0?C.vertices=N(A,B,1,F.UInt32):C.vertices=new Uint32Array,C.linesBufferSize>0?C.lines=N(A,B,2,F.UInt32):C.lines=new Uint32Array,C.polygonsBufferSize>0?C.polygons=N(A,B,3,F.UInt32):C.polygons=new Uint32Array,C.triangleStripsBufferSize>0?C.triangleStrips=N(A,B,4,F.UInt32):C.triangleStrips=new Uint32Array,C.numberOfPointPixels>0?C.pointData=N(A,B,5,C.polyDataType.pointPixelComponentType):C.pointData=d(C.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),C.numberOfCellPixels>0?C.cellData=N(A,B,6,C.polyDataType.cellPixelComponentType):C.cellData=d(C.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),c=C;break}case S.Text:{if(typeof o.path>"u")throw new Error("output.path not defined");c=A.fs_readFile(o.path,{encoding:"utf8"});break}case S.Binary:{if(typeof o.path>"u")throw new Error("output.path not defined");c=H(A,o.path);break}case S.Image:{if(typeof o.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${o.path}/index.json`,{encoding:"utf8"}),Q=JSON.parse(C),f=H(A,`${o.path}/data/data.raw`);Q.data=d(Q.imageType.componentType,f.buffer);let m=H(A,`${o.path}/data/direction.raw`);Q.direction=d(T.Float64,m.buffer),c=Q;break}case S.Mesh:{if(typeof o.path>"u")throw new Error("output.path not defined");let C=A.fs_readFile(`${o.path}/index.json`,{encoding:"utf8"}),Q=JSON.parse(C);if(Q.numberOfPoints>0){let f=H(A,`${o.path}/data/points.raw`);Q.points=d(Q.meshType.pointComponentType,f.buffer)}else Q.points=d(Q.meshType.pointComponentType,new ArrayBuffer(0));if(Q.numberOfPointPixels>0){let f=H(A,`${o.path}/data/pointData.raw`);Q.pointData=d(Q.meshType.pointPixelComponentType,f.buffer)}else Q.pointData=d(Q.meshType.pointPixelComponentType,new ArrayBuffer(0));if(Q.numberOfCells>0){let f=H(A,`${o.path}/data/cells.raw`);Q.cells=d(Q.meshType.cellComponentType,f.buffer)}else Q.cells=d(Q.meshType.cellComponentType,new ArrayBuffer(0));if(Q.numberOfCellPixels>0){let f=H(A,`${o.path}/data/cellData.raw`);Q.cellData=d(Q.meshType.cellPixelComponentType,f.buffer)}else Q.cellData=d(Q.meshType.cellPixelComponentType,new ArrayBuffer(0));c=Q;break}default:throw Error("Unsupported output InterfaceType")}let a={type:o.type,data:c};E.push(a)}),{returnValue:i,stdout:g,stderr:n,outputs:E}}var z=LI;var oA=function(A){return this instanceof oA?(this.v=A,this):new oA(A)},OI=function(A,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var I=t.apply(A,e||[]),r,i=[];return r={},g("next"),g("throw"),g("return"),r[Symbol.asyncIterator]=function(){return this},r;function g(a){I[a]&&(r[a]=function(C){return new Promise(function(Q,f){i.push([a,C,Q,f])>1||n(a,C)})})}function n(a,C){try{E(I[a](C))}catch(Q){c(i[0][3],Q)}}function E(a){a.value instanceof oA?Promise.resolve(a.value.v).then(o,B):c(i[0][2],a)}function o(a){n("next",a)}function B(a){n("throw",a)}function c(a,C){a(C),i.shift(),i.length&&n(i[0][0],i[0][1])}},JI=function(A){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=A[Symbol.asyncIterator],t;return e?e.call(A):(A=typeof __values=="function"?__values(A):A[Symbol.iterator](),t={},I("next"),I("throw"),I("return"),t[Symbol.asyncIterator]=function(){return this},t);function I(i){t[i]=A[i]&&function(g){return new Promise(function(n,E){g=A[i](g),r(n,E,g.done,g.value)})}}function r(i,g,n,E){Promise.resolve(E).then(function(o){i({value:o,done:n})},g)}};function MI(A){return OI(this,arguments,function*(){for(let t=0;t<LA.length;t++){let I=LA[t]+"-read-image",r=yield oA(G(I,A.config.imageIOUrl));yield yield oA(r)}})}async function bI(A,e){var t,I;if(A.mimeType&&ie.has(A.mimeType)){let n=ie.get(A.mimeType)+e;return await G(n,A.config.imageIOUrl)}let r=kA(A.fileName);if(ge.has(r)){let n=ge.get(r)+e;return await G(n,A.config.imageIOUrl)}for(let n=0;n<LA.length;++n){let E=0;try{for(var i=(t=void 0,JI(MI(A))),g;g=await i.next(),!g.done;){let o=g.value;try{let{returnValue:B,outputs:c}=await z(o,A.args,A.outputs,A.inputs);if(B===0)return o}catch{}E++}}catch(o){t={error:o}}finally{try{g&&!g.done&&(I=i.return)&&await I.call(i)}finally{if(t)throw t.error}}}throw Error(`Could not find IO for: ${A.fileName}`)}var ne=bI;var HI=new Map([]),ae=HI;var YI=new Map([["vtk","VTKPolyDataMeshIO"],["VTK","VTKPolyDataMeshIO"],["byu","BYUMeshIO"],["BYU","BYUMeshIO"],["fsa","FreeSurferAsciiMeshIO"],["FSA","FreeSurferAsciiMeshIO"],["fsb","FreeSurferBinaryMeshIO"],["FSB","FreeSurferBinaryMeshIO"],["obj","OBJMeshIO"],["OBJ","OBJMeshIO"],["off","OFFMeshIO"],["OFF","OFFMeshIO"],["stl","STLMeshIO"],["STL","STLMeshIO"],["swc","SWCMeshIO"],["SWC","SWCMeshIO"],["iwm","WasmMeshIO"],["iwm.cbor","WasmMeshIO"],["iwm.cbor.zst","WasmZstdMeshIO"]]),se=YI;var qI=["BYUMeshIO","FreeSurferAsciiMeshIO","FreeSurferBinaryMeshIO","OBJMeshIO","OFFMeshIO","STLMeshIO","SWCMeshIO","VTKPolyDataMeshIO","WasmMeshIO","WasmZstdMeshIO"],OA=qI;var nA=function(A){return this instanceof nA?(this.v=A,this):new nA(A)},TI=function(A,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var I=t.apply(A,e||[]),r,i=[];return r={},g("next"),g("throw"),g("return"),r[Symbol.asyncIterator]=function(){return this},r;function g(a){I[a]&&(r[a]=function(C){return new Promise(function(Q,f){i.push([a,C,Q,f])>1||n(a,C)})})}function n(a,C){try{E(I[a](C))}catch(Q){c(i[0][3],Q)}}function E(a){a.value instanceof nA?Promise.resolve(a.value.v).then(o,B):c(i[0][2],a)}function o(a){n("next",a)}function B(a){n("throw",a)}function c(a,C){a(C),i.shift(),i.length&&n(i[0][0],i[0][1])}},KI=function(A){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=A[Symbol.asyncIterator],t;return e?e.call(A):(A=typeof __values=="function"?__values(A):A[Symbol.iterator](),t={},I("next"),I("throw"),I("return"),t[Symbol.asyncIterator]=function(){return this},t);function I(i){t[i]=A[i]&&function(g){return new Promise(function(n,E){g=A[i](g),r(n,E,g.done,g.value)})}}function r(i,g,n,E){Promise.resolve(E).then(function(o){i({value:o,done:n})},g)}};function xI(A){return TI(this,arguments,function*(){for(let t=0;t<OA.length;t++){let I=OA[t]+"-read-mesh",r=yield nA(G(I,A.config.meshIOUrl));yield yield nA(r)}})}async function PI(A,e){var t,I;if(A.mimeType&&ae.has(A.mimeType)){let n=ae.get(A.mimeType)+e;return await G(n,A.config.meshIOUrl)}let r=kA(A.fileName);if(se.has(r)){let n=se.get(r)+e;return await G(n,A.config.meshIOUrl)}for(let n=0;n<OA.length;++n){let E=0;try{for(var i=(t=void 0,KI(xI(A))),g;g=await i.next(),!g.done;){let o=g.value;try{let{returnValue:B,outputs:c}=await z(o,A.args,A.outputs,A.inputs);if(B===0)return o}catch{}E++}}catch(o){t={error:o}}finally{try{g&&!g.done&&(I=i.return)&&await I.call(i)}finally{if(t)throw t.error}}}throw Error(`Could not find IO for: ${A.fileName}`)}var Ce=PI;var WI=typeof globalThis.SharedArrayBuffer<"u";function jI(A){if(A==null)return[];let e=[];for(let t=0;t<A.length;t++){let I=ZI(A[t]);I!==null&&e.push(I)}return e}function ZI(A){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),WI&&e instanceof SharedArrayBuffer?null:e}var at=jI;function _I(A){return[A.data,A.direction]}var Be=_I;function VI(A){return[A.points,A.pointData,A.cells,A.cellData]}var Qe=VI;function zI(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var st=zI;async function XI(A,e,t,I){let r=z(A,e,t,I),i=[];return r.outputs&&r.outputs.forEach(function(g){if(g.type===u.BinaryStream||g.type===u.BinaryFile){let n=g.data;i.push(n)}else if(g.type===u.Image){let n=g.data;i.push(...Be(n))}else if(g.type===u.Mesh){let n=g.data;i.push(...Qe(n))}else if(g.type===u.PolyData){let n=g.data;i.push(...st(n))}else if(g.type===S.Binary){let n=g.data;i.push(n)}else if(g.type===S.Image){let n=g.data;i.push(...Be(n))}else if(g.type===S.Mesh){let n=g.data;i.push(...Qe(n))}}),HA(r,at(i))}var Y=XI;var vI={meshToPolyData:async function(A,e,t,I){let r=await G("mesh-to-polydata",A.meshIOUrl);return Y(r,e,t,I)},polyDataToMesh:async function(A,e,t,I){let r=await G("polydata-to-mesh",A.meshIOUrl);return Y(r,e,t,I)},readImage:async function(A,e,t,I,r,i){let g=await ne({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-read-image");return Y(g,I,r,i)},writeImage:async function(A,e,t,I,r,i){let g=await ne({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-write-image");return Y(g,I,r,i)},readMesh:async function(A,e,t,I,r,i){let g=await Ce({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-read-mesh");return Y(g,I,r,i)},writeMesh:async function(A,e,t,I,r,i){let g=await Ce({fileName:t,mimeType:e,config:A,args:I,outputs:r,inputs:i},"-write-mesh");return Y(g,I,r,i)},runPipeline:async function(A,e,t,I,r,i){let g=typeof A[t]>"u"?t:A[t],n=await G(e,g);return Y(n,I,r,i)}};EA(vI);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';pr(ur);export{HA as bioRadReadImage,YA as bioRadWriteImage,OA as bmpReadImage,UA as bmpWriteImage,tt as fdfReadImage,eo as fdfWriteImage,XA as gdcmReadImage,$A as gdcmWriteImage,_A as ge4ReadImage,zA as ge4WriteImage,VA as ge5ReadImage,ZA as ge5WriteImage,KA as geAdwReadImage,jA as geAdwWriteImage,y as getPipelineWorkerUrl,C as getPipelinesBaseUrl,qA as giplReadImage,vA as giplWriteImage,SA as hdf5ReadImage,WA as hdf5WriteImage,wA as jpegReadImage,RA as jpegWriteImage,TA as lsmReadImage,JA as lsmWriteImage,BA as metaReadImage,CA as metaWriteImage,LA as mghReadImage,MA as mghWriteImage,NA as mincReadImage,PA as mincWriteImage,xA as mrcReadImage,GA as mrcWriteImage,QA as niftiReadImage,hA as niftiWriteImage,bA as nrrdReadImage,kA as nrrdWriteImage,cA as pngReadImage,dA as pngWriteImage,nt as readImage,Va as readImageFileSeries,et as scancoReadImage,At as scancoWriteImage,pr as setPipelineWorkerUrl,pl as setPipelinesBaseUrl,yA as tiffReadImage,EA as tiffWriteImage,DA as vtkReadImage,FA as vtkWriteImage,rt as wasmReadImage,it as wasmWriteImage,at as wasmZstdReadImage,ot as wasmZstdWriteImage,Xa as writeImage};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
