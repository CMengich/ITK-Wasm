# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,dmFyIGhyPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgd3I9KGUsQSk9Pntmb3IodmFyIHQgaW4gQSlocihlLHQse2dldDpBW3RdLGVudW1lcmFibGU6ITB9KX07dmFyIFJyPW5ldyBNYXAoW1siYm1wIiwiYm1wIl0sWyJkY20iLCJnZGNtIl0sWyJnaXBsIiwiZ2lwbCJdLFsiZ2lwbC5neiIsImdpcGwiXSxbImhkZjUiLCJoZGY1Il0sWyJqcGciLCJqcGVnIl0sWyJqcGVnIiwianBlZyJdLFsiaXdpIiwid2FzbSJdLFsiaXdpLmNib3IiLCJ3YXNtIl0sWyJpd2kuY2Jvci56c3QiLCJ3YXNtWnN0ZCJdLFsibHNtIiwibHNtIl0sWyJtbmMiLCJtbmMiXSxbIm1uYy5neiIsIm1uYyJdLFsibW5jMiIsIm1uYyJdLFsibWdoIiwibWdoIl0sWyJtZ3oiLCJtZ2giXSxbIm1naC5neiIsIm1naCJdLFsibWhhIiwibWV0YSJdLFsibWhkIiwibWV0YSJdLFsibXJjIiwibXJjIl0sWyJuaWEiLCJuaWZ0aSJdLFsibmlpIiwibmlmdGkiXSxbIm5paS5neiIsIm5pZnRpIl0sWyJoZHIiLCJuaWZ0aSJdLFsibnJyZCIsIm5ycmQiXSxbIm5oZHIiLCJucnJkIl0sWyJwbmciLCJwbmciXSxbInBpYyIsImJpb1JhZCJdLFsidGlmIiwidGlmZiJdLFsidGlmZiIsInRpZmYiXSxbInZ0ayIsInZ0ayJdLFsiaXNxIiwic2NhbmNvIl0sWyJhaW0iLCJzY2FuY28iXSxbImZkZiIsImZkZiJdXSksWT1Scjt2YXIga3I9e0ludDg6ImludDgiLFVJbnQ4OiJ1aW50OCIsSW50MTY6ImludDE2IixVSW50MTY6InVpbnQxNiIsSW50MzI6ImludDMyIixVSW50MzI6InVpbnQzMiIsSW50NjQ6ImludDY0IixVSW50NjQ6InVpbnQ2NCIsU2l6ZVZhbHVlVHlwZToidWludDY0IixJZGVudGlmaWVyVHlwZToidWludDY0IixJbmRleFZhbHVlVHlwZToiaW50NjQiLE9mZnNldFZhbHVlVHlwZToiaW50NjQifSxoPWtyO3ZhciBicj17RmxvYXQzMjoiZmxvYXQzMiIsRmxvYXQ2NDoiZmxvYXQ2NCIsU3BhY2VQcmVjaXNpb25UeXBlOiJmbG9hdDY0In0sYj1icjtmdW5jdGlvbiBEcihlLEEpe2xldCB0PW51bGw7c3dpdGNoKGUpe2Nhc2UgaC5VSW50ODp7dD1uZXcgVWludDhBcnJheShBKTticmVha31jYXNlIGguSW50ODp7dD1uZXcgSW50OEFycmF5KEEpO2JyZWFrfWNhc2UgaC5VSW50MTY6e3Q9bmV3IFVpbnQxNkFycmF5KEEpO2JyZWFrfWNhc2UgaC5JbnQxNjp7dD1uZXcgSW50MTZBcnJheShBKTticmVha31jYXNlIGguVUludDMyOnt0PW5ldyBVaW50MzJBcnJheShBKTticmVha31jYXNlIGguSW50MzI6e3Q9bmV3IEludDMyQXJyYXkoQSk7YnJlYWt9Y2FzZSBoLlVJbnQ2NDp7dHlwZW9mIGdsb2JhbFRoaXMuQmlnVWludDY0QXJyYXk9PSJmdW5jdGlvbiI/dD1uZXcgQmlnVWludDY0QXJyYXkoQSk6dD1uZXcgVWludDhBcnJheShBKTticmVha31jYXNlIGguSW50NjQ6e3R5cGVvZiBnbG9iYWxUaGlzLkJpZ0ludDY0QXJyYXk9PSJmdW5jdGlvbiI/dD1uZXcgQmlnSW50NjRBcnJheShBKTp0PW5ldyBVaW50OEFycmF5KEEpO2JyZWFrfWNhc2UgYi5GbG9hdDMyOnt0PW5ldyBGbG9hdDMyQXJyYXkoQSk7YnJlYWt9Y2FzZSBiLkZsb2F0NjQ6e3Q9bmV3IEZsb2F0NjRBcnJheShBKTticmVha31jYXNlIm51bGwiOnt0PW51bGw7YnJlYWt9Y2FzZSBudWxsOnt0PW51bGw7YnJlYWt9ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoIlR5cGUgaXMgbm90IHN1cHBvcnRlZCBhcyBhIFR5cGVkQXJyYXkiKX1yZXR1cm4gdH12YXIgUz1Ecjt2YXIgV3I9e1Vua25vd246IlVua25vd24iLFNjYWxhcjoiU2NhbGFyIixSR0I6IlJHQiIsUkdCQToiUkdCQSIsT2Zmc2V0OiJPZmZzZXQiLFZlY3RvcjoiVmVjdG9yIixQb2ludDoiUG9pbnQiLENvdmFyaWFudFZlY3RvcjoiQ292YXJpYW50VmVjdG9yIixTeW1tZXRyaWNTZWNvbmRSYW5rVGVuc29yOiJTeW1tZXRyaWNTZWNvbmRSYW5rVGVuc29yIixEaWZmdXNpb25UZW5zb3IzRDoiRGlmZnVzaW9uVGVuc29yM0QiLENvbXBsZXg6IkNvbXBsZXgiLEZpeGVkQXJyYXk6IkZpeGVkQXJyYXkiLEFycmF5OiJBcnJheSIsTWF0cml4OiJNYXRyaXgiLFZhcmlhYmxlTGVuZ3RoVmVjdG9yOiJWYXJpYWJsZUxlbmd0aFZlY3RvciIsVmFyaWFibGVTaXplTWF0cml4OiJWYXJpYWJsZVNpemVNYXRyaXgifSxtZT1Xcjt2YXIgUGU9Y2xhc3N7ZGltZW5zaW9uO2NvbXBvbmVudFR5cGU7cGl4ZWxUeXBlO2NvbXBvbmVudHM7Y29uc3RydWN0b3IoQT0yLHQ9aC5VSW50OCxyPW1lLlNjYWxhcixvPTEpe3RoaXMuZGltZW5zaW9uPUEsdGhpcy5jb21wb25lbnRUeXBlPXQsdGhpcy5waXhlbFR5cGU9cix0aGlzLmNvbXBvbmVudHM9b319LEl0PVBlO2Z1bmN0aW9uIEZyKGUsQSx0LHIsbyl7ZVtyK3QqQV09b312YXIgZ3Q9RnI7dmFyIHhlPWNsYXNze2ltYWdlVHlwZTtuYW1lPSJpbWFnZSI7b3JpZ2luO3NwYWNpbmc7ZGlyZWN0aW9uO3NpemU7bWV0YWRhdGE7ZGF0YTtjb25zdHJ1Y3RvcihBPW5ldyBJdCl7dGhpcy5pbWFnZVR5cGU9QTtsZXQgdD1BLmRpbWVuc2lvbjt0aGlzLm9yaWdpbj1uZXcgQXJyYXkodCksdGhpcy5vcmlnaW4uZmlsbCgwKSx0aGlzLnNwYWNpbmc9bmV3IEFycmF5KHQpLHRoaXMuc3BhY2luZy5maWxsKDEpLHRoaXMuZGlyZWN0aW9uPW5ldyBGbG9hdDY0QXJyYXkodCp0KSx0aGlzLmRpcmVjdGlvbi5maWxsKDApO2ZvcihsZXQgcj0wO3I8dDtyKyspZ3QodGhpcy5kaXJlY3Rpb24sdCxyLHIsMSk7dGhpcy5zaXplPW5ldyBBcnJheSh0KSx0aGlzLnNpemUuZmlsbCgwKSx0aGlzLm1ldGFkYXRhPW5ldyBNYXAsdGhpcy5kYXRhPW51bGx9fSxLPXhlO2Z1bmN0aW9uIFVyKGUpe2xldCBBPW5ldyBLKGUuaW1hZ2VUeXBlKTtpZihBLm5hbWU9ZS5uYW1lLEEub3JpZ2luPUFycmF5LmZyb20oZS5vcmlnaW4pLEEuc3BhY2luZz1BcnJheS5mcm9tKGUuc3BhY2luZyksQS5kaXJlY3Rpb249ZS5kaXJlY3Rpb24uc2xpY2UoKSxBLnNpemU9QXJyYXkuZnJvbShlLnNpemUpLGUuZGF0YSE9PW51bGwpe2xldCB0PWUuZGF0YS5jb25zdHJ1Y3RvcjtBLmRhdGE9bmV3IHQoZS5kYXRhLmxlbmd0aCksQS5kYXRhIT1udWxsJiZBLmRhdGEuc2V0KGUuZGF0YSwwKX1yZXR1cm4gQX12YXIgR2U9VXI7ZnVuY3Rpb24gU3IoZSl7aWYoZS5sZW5ndGg8MSl0aHJvdyBFcnJvcigiQXQgbGVhc3Qgb25lIGltYWdlcyBpcyByZXF1aXJlZC4iKTtsZXQgQT1lWzBdO2lmKEEuZGF0YT09PW51bGwpdGhyb3cgRXJyb3IoIkltYWdlIGRhdGEgaXMgbnVsbC4iKTtsZXQgdD1uZXcgSyhBLmltYWdlVHlwZSk7dC5vcmlnaW49QXJyYXkuZnJvbShBLm9yaWdpbiksdC5zcGFjaW5nPUFycmF5LmZyb20oQS5zcGFjaW5nKTtsZXQgcj10LmltYWdlVHlwZS5kaW1lbnNpb247dC5kaXJlY3Rpb249QS5kaXJlY3Rpb24uc2xpY2UoKTtsZXQgbz1yLTE7dC5zaXplPUFycmF5LmZyb20oQS5zaXplKTtsZXQgaT1lLnJlZHVjZSgoYSxzKT0+YStzLnNpemVbb10sMCk7dC5zaXplW29dPWk7bGV0IG49dC5zaXplLnJlZHVjZSgoYSxzKT0+YSpzLDEpKnQuaW1hZ2VUeXBlLmNvbXBvbmVudHMsZz1BLmRhdGEuY29uc3RydWN0b3I7dC5kYXRhPW5ldyBnKG4pO2xldCBmPXQuaW1hZ2VUeXBlLmNvbXBvbmVudHM7Zm9yKGxldCBhPTA7YTx0LnNpemUubGVuZ3RoLTE7YSsrKWYqPXQuc2l6ZVthXTtsZXQgbT0wO2lmKHQuZGF0YSE9bnVsbClmb3IobGV0IGE9MDthPGUubGVuZ3RoO2ErKyl0LmRhdGEuc2V0KGVbYV0uZGF0YSxmKm0pLG0rPWVbYV0uc2l6ZVtvXTtlbHNlIHRocm93IEVycm9yKCJDb3VsZCBub3QgY3JlYXRlIHJlc3VsdCBpbWFnZSBkYXRhLiIpO3JldHVybiB0fXZhciBUZT1TcjtmdW5jdGlvbiBPcihlKXtsZXQgQT1lLnNsaWNlKChlLmxhc3RJbmRleE9mKCIuIiktMT4+PjApKzIpO2lmKEEudG9Mb3dlckNhc2UoKT09PSJneiIpe2xldCB0PWUuc2xpY2UoMCwtMykubGFzdEluZGV4T2YoIi4iKTtBPWUuc2xpY2UoKHQtMT4+PjApKzIpfWVsc2UgaWYoQS50b0xvd2VyQ2FzZSgpPT09ImNib3IiKXtsZXQgdD1lLnNsaWNlKDAsLTUpLmxhc3RJbmRleE9mKCIuIik7QT1lLnNsaWNlKCh0LTE+Pj4wKSsyKX1lbHNlIGlmKEEudG9Mb3dlckNhc2UoKT09PSJ6c3QiKXtsZXQgdD1lLnNsaWNlKDAsLTEwKS5sYXN0SW5kZXhPZigiLiIpO0E9ZS5zbGljZSgodC0xPj4+MCkrMil9ZWxzZSBpZihBLnRvTG93ZXJDYXNlKCk9PT0iemlwIil7bGV0IHQ9ZS5zbGljZSgwLC00KS5sYXN0SW5kZXhPZigiLiIpO0E9ZS5zbGljZSgodC0xPj4+MCkrMil9cmV0dXJuIEF9dmFyIHRlPU9yO2Z1bmN0aW9uIE5yKGUsQSl7bGV0IHQ9ey4uLmUuaW1hZ2VUeXBlfTtpZih0eXBlb2YgQTwidSImJnR5cGVvZiBBLnBpeGVsVHlwZTwidSImJih0LnBpeGVsVHlwZT1BLnBpeGVsVHlwZSxBLnBpeGVsVHlwZT09PW1lLlNjYWxhciYmdC5jb21wb25lbnRzIT09MSkpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgY2FzdCBtdWx0aS1jb21wb25lbnQgaW1hZ2UgdG8gYSBzY2FsYXIgaW1hZ2UiKTt0eXBlb2YgQTwidSImJnR5cGVvZiBBLmNvbXBvbmVudFR5cGU8InUiJiZBLmNvbXBvbmVudFR5cGUhPT1lLmltYWdlVHlwZS5jb21wb25lbnRUeXBlJiYodC5jb21wb25lbnRUeXBlPUEuY29tcG9uZW50VHlwZSk7bGV0IHI9bmV3IEsodCk7aWYoci5uYW1lPWUubmFtZSxyLm9yaWdpbj1BcnJheS5mcm9tKGUub3JpZ2luKSxyLnNwYWNpbmc9QXJyYXkuZnJvbShlLnNwYWNpbmcpLHIuZGlyZWN0aW9uPWUuZGlyZWN0aW9uLnNsaWNlKCksci5zaXplPUFycmF5LmZyb20oZS5zaXplKSxyLm1ldGFkYXRhPW5ldyBNYXAoSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShBcnJheS5mcm9tKGUubWV0YWRhdGEpKSkpLGUuZGF0YSE9PW51bGwpaWYodHlwZW9mIEE8InUiJiZ0eXBlb2YgQS5jb21wb25lbnRUeXBlPCJ1IiYmQS5jb21wb25lbnRUeXBlIT09ZS5pbWFnZVR5cGUuY29tcG9uZW50VHlwZSlzd2l0Y2goZS5pbWFnZVR5cGUuY29tcG9uZW50VHlwZSl7Y2FzZSBoLlVJbnQ4OmNhc2UgaC5JbnQ4OmNhc2UgaC5VSW50MTY6Y2FzZSBoLkludDE2OmNhc2UgaC5VSW50MzI6Y2FzZSBoLkludDMyOmNhc2UgYi5GbG9hdDMyOmNhc2UgYi5GbG9hdDY0OnN3aXRjaChyLmltYWdlVHlwZS5jb21wb25lbnRUeXBlKXtjYXNlIGguVUludDg6ci5kYXRhPW5ldyBVaW50OEFycmF5KGUuZGF0YSk7YnJlYWs7Y2FzZSBoLkludDg6ci5kYXRhPW5ldyBJbnQ4QXJyYXkoZS5kYXRhKTticmVhaztjYXNlIGguVUludDE2OnIuZGF0YT1uZXcgVWludDE2QXJyYXkoZS5kYXRhKTticmVhaztjYXNlIGguSW50MTY6ci5kYXRhPW5ldyBJbnQxNkFycmF5KGUuZGF0YSk7YnJlYWs7Y2FzZSBoLlVJbnQzMjpyLmRhdGE9bmV3IFVpbnQzMkFycmF5KGUuZGF0YSk7YnJlYWs7Y2FzZSBoLkludDMyOnIuZGF0YT1uZXcgSW50MzJBcnJheShlLmRhdGEpO2JyZWFrO2Nhc2UgYi5GbG9hdDMyOnIuZGF0YT1uZXcgRmxvYXQzMkFycmF5KGUuZGF0YSk7YnJlYWs7Y2FzZSBiLkZsb2F0NjQ6ci5kYXRhPW5ldyBGbG9hdDY0QXJyYXkoZS5kYXRhKTticmVhaztjYXNlIGguVUludDY0OnIuZGF0YT1uZXcgQmlnVWludDY0QXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109QmlnSW50LmFzSW50Tig2NCxCaWdJbnQoZS5kYXRhW29dKSk7YnJlYWs7Y2FzZSBoLkludDY0OnIuZGF0YT1uZXcgQmlnSW50NjRBcnJheShlLmRhdGEubGVuZ3RoKTtmb3IobGV0IG89MDtvPHIuZGF0YS5sZW5ndGg7bysrKXIuZGF0YVtvXT1CaWdJbnQuYXNVaW50Tig2NCxCaWdJbnQoZS5kYXRhW29dKSk7YnJlYWt9YnJlYWs7Y2FzZSBoLlVJbnQ2NDpjYXNlIGguSW50NjQ6c3dpdGNoKHIuaW1hZ2VUeXBlLmNvbXBvbmVudFR5cGUpe2Nhc2UgaC5VSW50ODpyLmRhdGE9bmV3IFVpbnQ4QXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109TnVtYmVyKGUuZGF0YVtvXSk7YnJlYWs7Y2FzZSBoLkludDg6ci5kYXRhPW5ldyBJbnQ4QXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109TnVtYmVyKGUuZGF0YVtvXSk7YnJlYWs7Y2FzZSBoLlVJbnQxNjpyLmRhdGE9bmV3IFVpbnQxNkFycmF5KGUuZGF0YS5sZW5ndGgpO2ZvcihsZXQgbz0wO288ci5kYXRhLmxlbmd0aDtvKyspci5kYXRhW29dPU51bWJlcihlLmRhdGFbb10pO2JyZWFrO2Nhc2UgaC5JbnQxNjpyLmRhdGE9bmV3IEludDE2QXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109TnVtYmVyKGUuZGF0YVtvXSk7YnJlYWs7Y2FzZSBoLlVJbnQzMjpyLmRhdGE9bmV3IFVpbnQzMkFycmF5KGUuZGF0YS5sZW5ndGgpO2ZvcihsZXQgbz0wO288ci5kYXRhLmxlbmd0aDtvKyspci5kYXRhW29dPU51bWJlcihlLmRhdGFbb10pO2JyZWFrO2Nhc2UgaC5JbnQzMjpyLmRhdGE9bmV3IEludDMyQXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109TnVtYmVyKGUuZGF0YVtvXSk7YnJlYWs7Y2FzZSBiLkZsb2F0MzI6ci5kYXRhPW5ldyBGbG9hdDMyQXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109TnVtYmVyKGUuZGF0YVtvXSk7YnJlYWs7Y2FzZSBiLkZsb2F0NjQ6ci5kYXRhPW5ldyBGbG9hdDY0QXJyYXkoZS5kYXRhLmxlbmd0aCk7Zm9yKGxldCBvPTA7bzxyLmRhdGEubGVuZ3RoO28rKylyLmRhdGFbb109TnVtYmVyKGUuZGF0YVtvXSk7YnJlYWs7Y2FzZSBoLlVJbnQ2NDpyLmRhdGE9bmV3IEJpZ1VpbnQ2NEFycmF5KGUuZGF0YSk7YnJlYWs7Y2FzZSBoLkludDY0OnIuZGF0YT1uZXcgQmlnSW50NjRBcnJheShlLmRhdGEpO2JyZWFrfWJyZWFrfWVsc2V7bGV0IG89ZS5kYXRhLmNvbnN0cnVjdG9yO3IuZGF0YT1uZXcgbyhlLmRhdGEubGVuZ3RoKSxyLmRhdGEhPW51bGwmJnIuZGF0YS5zZXQoZS5kYXRhLDApfXJldHVybiByfXZhciBKPU5yO3ZhciBKZT1jbGFzc3tmY247d29ya2VyUXVldWU7cnVuSW5mbztjb25zdHJ1Y3RvcihBLHQpe3RoaXMuZmNuPXQsdGhpcy53b3JrZXJRdWV1ZT1uZXcgQXJyYXkoQSksdGhpcy53b3JrZXJRdWV1ZS5maWxsKG51bGwpLHRoaXMucnVuSW5mbz1bXX1ydW5UYXNrcyhBLHQ9bnVsbCl7bGV0IHI9e3Rhc2tRdWV1ZTpbXSxyZXN1bHRzOltdLGFkZGluZ1Rhc2tzOiExLHBvc3Rwb25lZDohMSxydW5uaW5nV29ya2VyczowLGluZGV4OjAsY29tcGxldGVkVGFza3M6MCxwcm9ncmVzc0NhbGxiYWNrOnQsY2FuY2VsZWQ6ITF9O3JldHVybiB0aGlzLnJ1bkluZm8ucHVzaChyKSxyLmluZGV4PXRoaXMucnVuSW5mby5sZW5ndGgtMSx7cHJvbWlzZTpuZXcgUHJvbWlzZSgobyxpKT0+e3IucmVzb2x2ZT1vLHIucmVqZWN0PWksci5yZXN1bHRzPW5ldyBBcnJheShBLmxlbmd0aCksci5jb21wbGV0ZWRUYXNrcz0wLHIuYWRkaW5nVGFza3M9ITAsQS5mb3JFYWNoKChuLGcpPT57dGhpcy5hZGRUYXNrKHIuaW5kZXgsZyxuKX0pLHIuYWRkaW5nVGFza3M9ITF9KSxydW5JZDpyLmluZGV4fX10ZXJtaW5hdGVXb3JrZXJzKCl7Zm9yKGxldCBBPTA7QTx0aGlzLndvcmtlclF1ZXVlLmxlbmd0aDtBKyspe2xldCB0PXRoaXMud29ya2VyUXVldWVbQV07dD8udGVybWluYXRlKCksdGhpcy53b3JrZXJRdWV1ZVtBXT1udWxsfX1jYW5jZWwoQSl7bGV0IHQ9dGhpcy5ydW5JbmZvW0FdO3QhPW51bGwmJih0LmNhbmNlbGVkPSEwKX1hZGRUYXNrKEEsdCxyKXtsZXQgbz10aGlzLnJ1bkluZm9bQV07aWYobz8uY2FuY2VsZWQ9PT0hMCl7by5yZWplY3QoIlJlbWFpbmluZyB0YXNrcyBjYW5jZWxlZCIpLHRoaXMuY2xlYXJUYXNrKG8uaW5kZXgpO3JldHVybn1pZih0aGlzLndvcmtlclF1ZXVlLmxlbmd0aD4wKXtsZXQgaT10aGlzLndvcmtlclF1ZXVlLnBvcCgpO28ucnVubmluZ1dvcmtlcnMrKyxyW3IubGVuZ3RoLTFdLndlYldvcmtlcj1pLHRoaXMuZmNuKC4uLnIpLnRoZW4oKHt3ZWJXb3JrZXI6biwuLi5nfSk9PntpZih0aGlzLndvcmtlclF1ZXVlLnB1c2gobiksdGhpcy5ydW5JbmZvW0FdIT09bnVsbCl7aWYoby5ydW5uaW5nV29ya2Vycy0tLG8ucmVzdWx0c1t0XT1nLG8uY29tcGxldGVkVGFza3MrKyxvLnByb2dyZXNzQ2FsbGJhY2shPW51bGwmJm8ucHJvZ3Jlc3NDYWxsYmFjayhvLmNvbXBsZXRlZFRhc2tzLG8ucmVzdWx0cy5sZW5ndGgpLG8udGFza1F1ZXVlLmxlbmd0aD4wKXtsZXQgZj1vLnRhc2tRdWV1ZS5zaGlmdCgpO3RoaXMuYWRkVGFzayhBLGZbMF0sZlsxXSl9ZWxzZSBpZighby5hZGRpbmdUYXNrcyYmby5ydW5uaW5nV29ya2Vycz09PTApe2xldCBmPW8ucmVzdWx0cztvLnJlc29sdmUoZiksdGhpcy5jbGVhclRhc2soby5pbmRleCl9fX0pLmNhdGNoKG49PntvLnJlamVjdChuKSx0aGlzLmNsZWFyVGFzayhvLmluZGV4KX0pfWVsc2Ugby5ydW5uaW5nV29ya2VycyE9PTB8fG8ucG9zdHBvbmVkP28udGFza1F1ZXVlLnB1c2goW3Qscl0pOihvLnBvc3Rwb25lZD0hMCxzZXRUaW1lb3V0KCgpPT57by5wb3N0cG9uZWQ9ITEsdGhpcy5hZGRUYXNrKG8uaW5kZXgsdCxyKX0sNTApKX1jbGVhclRhc2soQSl7dGhpcy5ydW5JbmZvW0FdLnJlc3VsdHM9W10sdGhpcy5ydW5JbmZvW0FdLnRhc2tRdWV1ZT1bXSx0aGlzLnJ1bkluZm9bQV0ucHJvZ3Jlc3NDYWxsYmFjaz1udWxsLHRoaXMucnVuSW5mb1tBXS5jYW5jZWxlZD1udWxsLHRoaXMucnVuSW5mb1tBXS5yZWplY3Q9KCk9Pnt9LHRoaXMucnVuSW5mb1tBXS5yZXNvbHZlPSgpPT57fX19LExlPUplO3ZhciBQcj17VGV4dEZpbGU6IlRleHRGaWxlIixCaW5hcnlGaWxlOiJCaW5hcnlGaWxlIixUZXh0U3RyZWFtOiJUZXh0U3RyZWFtIixCaW5hcnlTdHJlYW06IkJpbmFyeVN0cmVhbSIsSW1hZ2U6IkltYWdlIixNZXNoOiJNZXNoIixQb2x5RGF0YToiUG9seURhdGEiLEpzb25Db21wYXRpYmxlOiJKc29uQ29tcGF0aWJsZSJ9LGw9UHI7dmFyIHB0PVN5bWJvbCgiQ29tbGluay5wcm94eSIpLHhyPVN5bWJvbCgiQ29tbGluay5lbmRwb2ludCIpLFllPVN5bWJvbCgiQ29tbGluay5yZWxlYXNlUHJveHkiKSxNZT1TeW1ib2woIkNvbWxpbmsuZmluYWxpemVyIiksZmU9U3ltYm9sKCJDb21saW5rLnRocm93biIpLG10PWU9PnR5cGVvZiBlPT0ib2JqZWN0IiYmZSE9PW51bGx8fHR5cGVvZiBlPT0iZnVuY3Rpb24iLEdyPXtjYW5IYW5kbGU6ZT0+bXQoZSkmJmVbcHRdLHNlcmlhbGl6ZShlKXtsZXR7cG9ydDE6QSxwb3J0Mjp0fT1uZXcgTWVzc2FnZUNoYW5uZWw7cmV0dXJuIGZ0KGUsQSksW3QsW3RdXX0sZGVzZXJpYWxpemUoZSl7cmV0dXJuIGUuc3RhcnQoKSxxZShlKX19LFRyPXtjYW5IYW5kbGU6ZT0+bXQoZSkmJmZlIGluIGUsc2VyaWFsaXplKHt2YWx1ZTplfSl7bGV0IEE7cmV0dXJuIGUgaW5zdGFuY2VvZiBFcnJvcj9BPXtpc0Vycm9yOiEwLHZhbHVlOnttZXNzYWdlOmUubWVzc2FnZSxuYW1lOmUubmFtZSxzdGFjazplLnN0YWNrfX06QT17aXNFcnJvcjohMSx2YWx1ZTplfSxbQSxbXV19LGRlc2VyaWFsaXplKGUpe3Rocm93IGUuaXNFcnJvcj9PYmplY3QuYXNzaWduKG5ldyBFcnJvcihlLnZhbHVlLm1lc3NhZ2UpLGUudmFsdWUpOmUudmFsdWV9fSx1dD1uZXcgTWFwKFtbInByb3h5IixHcl0sWyJ0aHJvdyIsVHJdXSk7ZnVuY3Rpb24gSnIoZSxBKXtmb3IobGV0IHQgb2YgZSlpZihBPT09dHx8dD09PSIqInx8dCBpbnN0YW5jZW9mIFJlZ0V4cCYmdC50ZXN0KEEpKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIGZ0KGUsQT1nbG9iYWxUaGlzLHQ9WyIqIl0pe0EuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24gcihvKXtpZighb3x8IW8uZGF0YSlyZXR1cm47aWYoIUpyKHQsby5vcmlnaW4pKXtjb25zb2xlLndhcm4oYEludmFsaWQgb3JpZ2luICcke28ub3JpZ2lufScgZm9yIGNvbWxpbmsgcHJveHlgKTtyZXR1cm59bGV0e2lkOmksdHlwZTpuLHBhdGg6Z309T2JqZWN0LmFzc2lnbih7cGF0aDpbXX0sby5kYXRhKSxmPShvLmRhdGEuYXJndW1lbnRMaXN0fHxbXSkubWFwKHEpLG07dHJ5e2xldCBhPWcuc2xpY2UoMCwtMSkucmVkdWNlKCh1LEkpPT51W0ldLGUpLHM9Zy5yZWR1Y2UoKHUsSSk9PnVbSV0sZSk7c3dpdGNoKG4pe2Nhc2UiR0VUIjptPXM7YnJlYWs7Y2FzZSJTRVQiOmFbZy5zbGljZSgtMSlbMF1dPXEoby5kYXRhLnZhbHVlKSxtPSEwO2JyZWFrO2Nhc2UiQVBQTFkiOm09cy5hcHBseShhLGYpO2JyZWFrO2Nhc2UiQ09OU1RSVUNUIjp7bGV0IHU9bmV3IHMoLi4uZik7bT1xcih1KX1icmVhaztjYXNlIkVORFBPSU5UIjp7bGV0e3BvcnQxOnUscG9ydDI6SX09bmV3IE1lc3NhZ2VDaGFubmVsO2Z0KGUsSSksbT1LZSh1LFt1XSl9YnJlYWs7Y2FzZSJSRUxFQVNFIjptPXZvaWQgMDticmVhaztkZWZhdWx0OnJldHVybn19Y2F0Y2goYSl7bT17dmFsdWU6YSxbZmVdOjB9fVByb21pc2UucmVzb2x2ZShtKS5jYXRjaChhPT4oe3ZhbHVlOmEsW2ZlXTowfSkpLnRoZW4oYT0+e2xldFtzLHVdPWRlKGEpO0EucG9zdE1lc3NhZ2UoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHMpLHtpZDppfSksdSksbj09PSJSRUxFQVNFIiYmKEEucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsciksY3QoQSksTWUgaW4gZSYmdHlwZW9mIGVbTWVdPT0iZnVuY3Rpb24iJiZlW01lXSgpKX0pLmNhdGNoKGE9PntsZXRbcyx1XT1kZSh7dmFsdWU6bmV3IFR5cGVFcnJvcigiVW5zZXJpYWxpemFibGUgcmV0dXJuIHZhbHVlIiksW2ZlXTowfSk7QS5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30scykse2lkOml9KSx1KX0pfSksQS5zdGFydCYmQS5zdGFydCgpfWZ1bmN0aW9uIExyKGUpe3JldHVybiBlLmNvbnN0cnVjdG9yLm5hbWU9PT0iTWVzc2FnZVBvcnQifWZ1bmN0aW9uIGN0KGUpe0xyKGUpJiZlLmNsb3NlKCl9ZnVuY3Rpb24gcWUoZSxBKXtyZXR1cm4gSGUoZSxbXSxBKX1mdW5jdGlvbiB1ZShlKXtpZihlKXRocm93IG5ldyBFcnJvcigiUHJveHkgaGFzIGJlZW4gcmVsZWFzZWQgYW5kIGlzIG5vdCB1c2VhYmxlIil9ZnVuY3Rpb24gQnQoZSl7cmV0dXJuIGooZSx7dHlwZToiUkVMRUFTRSJ9KS50aGVuKCgpPT57Y3QoZSl9KX12YXIgY2U9bmV3IFdlYWtNYXAsQmU9IkZpbmFsaXphdGlvblJlZ2lzdHJ5ImluIGdsb2JhbFRoaXMmJm5ldyBGaW5hbGl6YXRpb25SZWdpc3RyeShlPT57bGV0IEE9KGNlLmdldChlKXx8MCktMTtjZS5zZXQoZSxBKSxBPT09MCYmQnQoZSl9KTtmdW5jdGlvbiBNcihlLEEpe2xldCB0PShjZS5nZXQoQSl8fDApKzE7Y2Uuc2V0KEEsdCksQmUmJkJlLnJlZ2lzdGVyKGUsQSxlKX1mdW5jdGlvbiBIcihlKXtCZSYmQmUudW5yZWdpc3RlcihlKX1mdW5jdGlvbiBIZShlLEE9W10sdD1mdW5jdGlvbigpe30pe2xldCByPSExLG89bmV3IFByb3h5KHQse2dldChpLG4pe2lmKHVlKHIpLG49PT1ZZSlyZXR1cm4oKT0+e0hyKG8pLEJ0KGUpLHI9ITB9O2lmKG49PT0idGhlbiIpe2lmKEEubGVuZ3RoPT09MClyZXR1cm57dGhlbjooKT0+b307bGV0IGc9aihlLHt0eXBlOiJHRVQiLHBhdGg6QS5tYXAoZj0+Zi50b1N0cmluZygpKX0pLnRoZW4ocSk7cmV0dXJuIGcudGhlbi5iaW5kKGcpfXJldHVybiBIZShlLFsuLi5BLG5dKX0sc2V0KGksbixnKXt1ZShyKTtsZXRbZixtXT1kZShnKTtyZXR1cm4gaihlLHt0eXBlOiJTRVQiLHBhdGg6Wy4uLkEsbl0ubWFwKGE9PmEudG9TdHJpbmcoKSksdmFsdWU6Zn0sbSkudGhlbihxKX0sYXBwbHkoaSxuLGcpe3VlKHIpO2xldCBmPUFbQS5sZW5ndGgtMV07aWYoZj09PXhyKXJldHVybiBqKGUse3R5cGU6IkVORFBPSU5UIn0pLnRoZW4ocSk7aWYoZj09PSJiaW5kIilyZXR1cm4gSGUoZSxBLnNsaWNlKDAsLTEpKTtsZXRbbSxhXT1sdChnKTtyZXR1cm4gaihlLHt0eXBlOiJBUFBMWSIscGF0aDpBLm1hcChzPT5zLnRvU3RyaW5nKCkpLGFyZ3VtZW50TGlzdDptfSxhKS50aGVuKHEpfSxjb25zdHJ1Y3QoaSxuKXt1ZShyKTtsZXRbZyxmXT1sdChuKTtyZXR1cm4gaihlLHt0eXBlOiJDT05TVFJVQ1QiLHBhdGg6QS5tYXAobT0+bS50b1N0cmluZygpKSxhcmd1bWVudExpc3Q6Z30sZikudGhlbihxKX19KTtyZXR1cm4gTXIobyxlKSxvfWZ1bmN0aW9uIFlyKGUpe3JldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLGUpfWZ1bmN0aW9uIGx0KGUpe2xldCBBPWUubWFwKGRlKTtyZXR1cm5bQS5tYXAodD0+dFswXSksWXIoQS5tYXAodD0+dFsxXSkpXX12YXIgZHQ9bmV3IFdlYWtNYXA7ZnVuY3Rpb24gS2UoZSxBKXtyZXR1cm4gZHQuc2V0KGUsQSksZX1mdW5jdGlvbiBxcihlKXtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLHtbcHRdOiEwfSl9ZnVuY3Rpb24gZGUoZSl7Zm9yKGxldFtBLHRdb2YgdXQpaWYodC5jYW5IYW5kbGUoZSkpe2xldFtyLG9dPXQuc2VyaWFsaXplKGUpO3JldHVyblt7dHlwZToiSEFORExFUiIsbmFtZTpBLHZhbHVlOnJ9LG9dfXJldHVyblt7dHlwZToiUkFXIix2YWx1ZTplfSxkdC5nZXQoZSl8fFtdXX1mdW5jdGlvbiBxKGUpe3N3aXRjaChlLnR5cGUpe2Nhc2UiSEFORExFUiI6cmV0dXJuIHV0LmdldChlLm5hbWUpLmRlc2VyaWFsaXplKGUudmFsdWUpO2Nhc2UiUkFXIjpyZXR1cm4gZS52YWx1ZX19ZnVuY3Rpb24gaihlLEEsdCl7cmV0dXJuIG5ldyBQcm9taXNlKHI9PntsZXQgbz1LcigpO2UuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24gaShuKXshbi5kYXRhfHwhbi5kYXRhLmlkfHxuLmRhdGEuaWQhPT1vfHwoZS5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixpKSxyKG4uZGF0YSkpfSksZS5zdGFydCYmZS5zdGFydCgpLGUucG9zdE1lc3NhZ2UoT2JqZWN0LmFzc2lnbih7aWQ6b30sQSksdCl9KX1mdW5jdGlvbiBLcigpe3JldHVybiBuZXcgQXJyYXkoNCkuZmlsbCgwKS5tYXAoKCk9Pk1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSpOdW1iZXIuTUFYX1NBRkVfSU5URUdFUikudG9TdHJpbmcoMTYpKS5qb2luKCItIil9ZnVuY3Rpb24gcmUoZSxBKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseShBLGFyZ3VtZW50cyl9fXZhcnt0b1N0cmluZzpqcn09T2JqZWN0LnByb3RvdHlwZSx7Z2V0UHJvdG90eXBlT2Y6emV9PU9iamVjdCxFZT0oZT0+QT0+e2xldCB0PWpyLmNhbGwoQSk7cmV0dXJuIGVbdF18fChlW3RdPXQuc2xpY2UoOCwtMSkudG9Mb3dlckNhc2UoKSl9KShPYmplY3QuY3JlYXRlKG51bGwpKSx4PWU9PihlPWUudG9Mb3dlckNhc2UoKSxBPT5FZShBKT09PWUpLHllPWU9PkE9PnR5cGVvZiBBPT09ZSx7aXNBcnJheTp2fT1BcnJheSxpZT15ZSgidW5kZWZpbmVkIik7ZnVuY3Rpb24gdnIoZSl7cmV0dXJuIGUhPT1udWxsJiYhaWUoZSkmJmUuY29uc3RydWN0b3IhPT1udWxsJiYhaWUoZS5jb25zdHJ1Y3RvcikmJk8oZS5jb25zdHJ1Y3Rvci5pc0J1ZmZlcikmJmUuY29uc3RydWN0b3IuaXNCdWZmZXIoZSl9dmFyIFF0PXgoIkFycmF5QnVmZmVyIik7ZnVuY3Rpb24genIoZSl7bGV0IEE7cmV0dXJuIHR5cGVvZiBBcnJheUJ1ZmZlcjwidSImJkFycmF5QnVmZmVyLmlzVmlldz9BPUFycmF5QnVmZmVyLmlzVmlldyhlKTpBPWUmJmUuYnVmZmVyJiZRdChlLmJ1ZmZlciksQX12YXIgVnI9eWUoInN0cmluZyIpLE89eWUoImZ1bmN0aW9uIiksaHQ9eWUoIm51bWJlciIpLFFlPWU9PmUhPT1udWxsJiZ0eXBlb2YgZT09Im9iamVjdCIsX3I9ZT0+ZT09PSEwfHxlPT09ITEsQ2U9ZT0+e2lmKEVlKGUpIT09Im9iamVjdCIpcmV0dXJuITE7bGV0IEE9emUoZSk7cmV0dXJuKEE9PT1udWxsfHxBPT09T2JqZWN0LnByb3RvdHlwZXx8T2JqZWN0LmdldFByb3RvdHlwZU9mKEEpPT09bnVsbCkmJiEoU3ltYm9sLnRvU3RyaW5nVGFnIGluIGUpJiYhKFN5bWJvbC5pdGVyYXRvciBpbiBlKX0sWnI9eCgiRGF0ZSIpLFhyPXgoIkZpbGUiKSwkcj14KCJCbG9iIiksZWk9eCgiRmlsZUxpc3QiKSxBaT1lPT5RZShlKSYmTyhlLnBpcGUpLHRpPWU9PntsZXQgQTtyZXR1cm4gZSYmKHR5cGVvZiBGb3JtRGF0YT09ImZ1bmN0aW9uIiYmZSBpbnN0YW5jZW9mIEZvcm1EYXRhfHxPKGUuYXBwZW5kKSYmKChBPUVlKGUpKT09PSJmb3JtZGF0YSJ8fEE9PT0ib2JqZWN0IiYmTyhlLnRvU3RyaW5nKSYmZS50b1N0cmluZygpPT09IltvYmplY3QgRm9ybURhdGFdIikpfSxyaT14KCJVUkxTZWFyY2hQYXJhbXMiKSxpaT1lPT5lLnRyaW0/ZS50cmltKCk6ZS5yZXBsYWNlKC9eW1xzXHVGRUZGXHhBMF0rfFtcc1x1RkVGRlx4QTBdKyQvZywiIik7ZnVuY3Rpb24gb2UoZSxBLHthbGxPd25LZXlzOnQ9ITF9PXt9KXtpZihlPT09bnVsbHx8dHlwZW9mIGU+InUiKXJldHVybjtsZXQgcixvO2lmKHR5cGVvZiBlIT0ib2JqZWN0IiYmKGU9W2VdKSx2KGUpKWZvcihyPTAsbz1lLmxlbmd0aDtyPG87cisrKUEuY2FsbChudWxsLGVbcl0scixlKTtlbHNle2xldCBpPXQ/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSk6T2JqZWN0LmtleXMoZSksbj1pLmxlbmd0aCxnO2ZvcihyPTA7cjxuO3IrKylnPWlbcl0sQS5jYWxsKG51bGwsZVtnXSxnLGUpfX1mdW5jdGlvbiB3dChlLEEpe0E9QS50b0xvd2VyQ2FzZSgpO2xldCB0PU9iamVjdC5rZXlzKGUpLHI9dC5sZW5ndGgsbztmb3IoO3ItLSA+MDspaWYobz10W3JdLEE9PT1vLnRvTG93ZXJDYXNlKCkpcmV0dXJuIG87cmV0dXJuIG51bGx9dmFyIFJ0PXR5cGVvZiBnbG9iYWxUaGlzPCJ1Ij9nbG9iYWxUaGlzOnR5cGVvZiBzZWxmPCJ1Ij9zZWxmOnR5cGVvZiB3aW5kb3c8InUiP3dpbmRvdzpnbG9iYWwsa3Q9ZT0+IWllKGUpJiZlIT09UnQ7ZnVuY3Rpb24gdmUoKXtsZXR7Y2FzZWxlc3M6ZX09a3QodGhpcykmJnRoaXN8fHt9LEE9e30sdD0ocixvKT0+e2xldCBpPWUmJnd0KEEsbyl8fG87Q2UoQVtpXSkmJkNlKHIpP0FbaV09dmUoQVtpXSxyKTpDZShyKT9BW2ldPXZlKHt9LHIpOnYocik/QVtpXT1yLnNsaWNlKCk6QVtpXT1yfTtmb3IobGV0IHI9MCxvPWFyZ3VtZW50cy5sZW5ndGg7cjxvO3IrKylhcmd1bWVudHNbcl0mJm9lKGFyZ3VtZW50c1tyXSx0KTtyZXR1cm4gQX12YXIgb2k9KGUsQSx0LHthbGxPd25LZXlzOnJ9PXt9KT0+KG9lKEEsKG8saSk9Pnt0JiZPKG8pP2VbaV09cmUobyx0KTplW2ldPW99LHthbGxPd25LZXlzOnJ9KSxlKSxhaT1lPT4oZS5jaGFyQ29kZUF0KDApPT09NjUyNzkmJihlPWUuc2xpY2UoMSkpLGUpLG5pPShlLEEsdCxyKT0+e2UucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoQS5wcm90b3R5cGUsciksZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwic3VwZXIiLHt2YWx1ZTpBLnByb3RvdHlwZX0pLHQmJk9iamVjdC5hc3NpZ24oZS5wcm90b3R5cGUsdCl9LHNpPShlLEEsdCxyKT0+e2xldCBvLGksbixnPXt9O2lmKEE9QXx8e30sZT09bnVsbClyZXR1cm4gQTtkb3tmb3Iobz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKSxpPW8ubGVuZ3RoO2ktLSA+MDspbj1vW2ldLCghcnx8cihuLGUsQSkpJiYhZ1tuXSYmKEFbbl09ZVtuXSxnW25dPSEwKTtlPXQhPT0hMSYmemUoZSl9d2hpbGUoZSYmKCF0fHx0KGUsQSkpJiZlIT09T2JqZWN0LnByb3RvdHlwZSk7cmV0dXJuIEF9LElpPShlLEEsdCk9PntlPVN0cmluZyhlKSwodD09PXZvaWQgMHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKSx0LT1BLmxlbmd0aDtsZXQgcj1lLmluZGV4T2YoQSx0KTtyZXR1cm4gciE9PS0xJiZyPT09dH0sZ2k9ZT0+e2lmKCFlKXJldHVybiBudWxsO2lmKHYoZSkpcmV0dXJuIGU7bGV0IEE9ZS5sZW5ndGg7aWYoIWh0KEEpKXJldHVybiBudWxsO2xldCB0PW5ldyBBcnJheShBKTtmb3IoO0EtLSA+MDspdFtBXT1lW0FdO3JldHVybiB0fSxsaT0oZT0+QT0+ZSYmQSBpbnN0YW5jZW9mIGUpKHR5cGVvZiBVaW50OEFycmF5PCJ1IiYmemUoVWludDhBcnJheSkpLHBpPShlLEEpPT57bGV0IHI9KGUmJmVbU3ltYm9sLml0ZXJhdG9yXSkuY2FsbChlKSxvO2Zvcig7KG89ci5uZXh0KCkpJiYhby5kb25lOyl7bGV0IGk9by52YWx1ZTtBLmNhbGwoZSxpWzBdLGlbMV0pfX0sbWk9KGUsQSk9PntsZXQgdCxyPVtdO2Zvcig7KHQ9ZS5leGVjKEEpKSE9PW51bGw7KXIucHVzaCh0KTtyZXR1cm4gcn0sdWk9eCgiSFRNTEZvcm1FbGVtZW50IiksZmk9ZT0+ZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1stX1xzXShbYS16XGRdKShcdyopL2csZnVuY3Rpb24odCxyLG8pe3JldHVybiByLnRvVXBwZXJDYXNlKCkrb30pLEV0PSgoe2hhc093blByb3BlcnR5OmV9KT0+KEEsdCk9PmUuY2FsbChBLHQpKShPYmplY3QucHJvdG90eXBlKSxjaT14KCJSZWdFeHAiKSxidD0oZSxBKT0+e2xldCB0PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGUpLHI9e307b2UodCwobyxpKT0+e2xldCBuOyhuPUEobyxpLGUpKSE9PSExJiYocltpXT1ufHxvKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUscil9LEJpPWU9PntidChlLChBLHQpPT57aWYoTyhlKSYmWyJhcmd1bWVudHMiLCJjYWxsZXIiLCJjYWxsZWUiXS5pbmRleE9mKHQpIT09LTEpcmV0dXJuITE7bGV0IHI9ZVt0XTtpZihPKHIpKXtpZihBLmVudW1lcmFibGU9ITEsIndyaXRhYmxlImluIEEpe0Eud3JpdGFibGU9ITE7cmV0dXJufUEuc2V0fHwoQS5zZXQ9KCk9Pnt0aHJvdyBFcnJvcigiQ2FuIG5vdCByZXdyaXRlIHJlYWQtb25seSBtZXRob2QgJyIrdCsiJyIpfSl9fSl9LGRpPShlLEEpPT57bGV0IHQ9e30scj1vPT57by5mb3JFYWNoKGk9Pnt0W2ldPSEwfSl9O3JldHVybiB2KGUpP3IoZSk6cihTdHJpbmcoZSkuc3BsaXQoQSkpLHR9LENpPSgpPT57fSxFaT0oZSxBKT0+KGU9K2UsTnVtYmVyLmlzRmluaXRlKGUpP2U6QSksamU9ImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6Iix5dD0iMDEyMzQ1Njc4OSIsRHQ9e0RJR0lUOnl0LEFMUEhBOmplLEFMUEhBX0RJR0lUOmplK2plLnRvVXBwZXJDYXNlKCkreXR9LHlpPShlPTE2LEE9RHQuQUxQSEFfRElHSVQpPT57bGV0IHQ9IiIse2xlbmd0aDpyfT1BO2Zvcig7ZS0tOyl0Kz1BW01hdGgucmFuZG9tKCkqcnwwXTtyZXR1cm4gdH07ZnVuY3Rpb24gUWkoZSl7cmV0dXJuISEoZSYmTyhlLmFwcGVuZCkmJmVbU3ltYm9sLnRvU3RyaW5nVGFnXT09PSJGb3JtRGF0YSImJmVbU3ltYm9sLml0ZXJhdG9yXSl9dmFyIGhpPWU9PntsZXQgQT1uZXcgQXJyYXkoMTApLHQ9KHIsbyk9PntpZihRZShyKSl7aWYoQS5pbmRleE9mKHIpPj0wKXJldHVybjtpZighKCJ0b0pTT04iaW4gcikpe0Fbb109cjtsZXQgaT12KHIpP1tdOnt9O3JldHVybiBvZShyLChuLGcpPT57bGV0IGY9dChuLG8rMSk7IWllKGYpJiYoaVtnXT1mKX0pLEFbb109dm9pZCAwLGl9fXJldHVybiByfTtyZXR1cm4gdChlLDApfSx3aT14KCJBc3luY0Z1bmN0aW9uIiksUmk9ZT0+ZSYmKFFlKGUpfHxPKGUpKSYmTyhlLnRoZW4pJiZPKGUuY2F0Y2gpLGM9e2lzQXJyYXk6dixpc0FycmF5QnVmZmVyOlF0LGlzQnVmZmVyOnZyLGlzRm9ybURhdGE6dGksaXNBcnJheUJ1ZmZlclZpZXc6enIsaXNTdHJpbmc6VnIsaXNOdW1iZXI6aHQsaXNCb29sZWFuOl9yLGlzT2JqZWN0OlFlLGlzUGxhaW5PYmplY3Q6Q2UsaXNVbmRlZmluZWQ6aWUsaXNEYXRlOlpyLGlzRmlsZTpYcixpc0Jsb2I6JHIsaXNSZWdFeHA6Y2ksaXNGdW5jdGlvbjpPLGlzU3RyZWFtOkFpLGlzVVJMU2VhcmNoUGFyYW1zOnJpLGlzVHlwZWRBcnJheTpsaSxpc0ZpbGVMaXN0OmVpLGZvckVhY2g6b2UsbWVyZ2U6dmUsZXh0ZW5kOm9pLHRyaW06aWksc3RyaXBCT006YWksaW5oZXJpdHM6bmksdG9GbGF0T2JqZWN0OnNpLGtpbmRPZjpFZSxraW5kT2ZUZXN0OngsZW5kc1dpdGg6SWksdG9BcnJheTpnaSxmb3JFYWNoRW50cnk6cGksbWF0Y2hBbGw6bWksaXNIVE1MRm9ybTp1aSxoYXNPd25Qcm9wZXJ0eTpFdCxoYXNPd25Qcm9wOkV0LHJlZHVjZURlc2NyaXB0b3JzOmJ0LGZyZWV6ZU1ldGhvZHM6QmksdG9PYmplY3RTZXQ6ZGksdG9DYW1lbENhc2U6Zmksbm9vcDpDaSx0b0Zpbml0ZU51bWJlcjpFaSxmaW5kS2V5Ond0LGdsb2JhbDpSdCxpc0NvbnRleHREZWZpbmVkOmt0LEFMUEhBQkVUOkR0LGdlbmVyYXRlU3RyaW5nOnlpLGlzU3BlY0NvbXBsaWFudEZvcm06UWksdG9KU09OT2JqZWN0OmhpLGlzQXN5bmNGbjp3aSxpc1RoZW5hYmxlOlJpfTtmdW5jdGlvbiB6KGUsQSx0LHIsbyl7RXJyb3IuY2FsbCh0aGlzKSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZT9FcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLHRoaXMuY29uc3RydWN0b3IpOnRoaXMuc3RhY2s9bmV3IEVycm9yKCkuc3RhY2ssdGhpcy5tZXNzYWdlPWUsdGhpcy5uYW1lPSJBeGlvc0Vycm9yIixBJiYodGhpcy5jb2RlPUEpLHQmJih0aGlzLmNvbmZpZz10KSxyJiYodGhpcy5yZXF1ZXN0PXIpLG8mJih0aGlzLnJlc3BvbnNlPW8pfWMuaW5oZXJpdHMoeixFcnJvcix7dG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJue21lc3NhZ2U6dGhpcy5tZXNzYWdlLG5hbWU6dGhpcy5uYW1lLGRlc2NyaXB0aW9uOnRoaXMuZGVzY3JpcHRpb24sbnVtYmVyOnRoaXMubnVtYmVyLGZpbGVOYW1lOnRoaXMuZmlsZU5hbWUsbGluZU51bWJlcjp0aGlzLmxpbmVOdW1iZXIsY29sdW1uTnVtYmVyOnRoaXMuY29sdW1uTnVtYmVyLHN0YWNrOnRoaXMuc3RhY2ssY29uZmlnOmMudG9KU09OT2JqZWN0KHRoaXMuY29uZmlnKSxjb2RlOnRoaXMuY29kZSxzdGF0dXM6dGhpcy5yZXNwb25zZSYmdGhpcy5yZXNwb25zZS5zdGF0dXM/dGhpcy5yZXNwb25zZS5zdGF0dXM6bnVsbH19fSk7dmFyIFd0PXoucHJvdG90eXBlLEZ0PXt9O1siRVJSX0JBRF9PUFRJT05fVkFMVUUiLCJFUlJfQkFEX09QVElPTiIsIkVDT05OQUJPUlRFRCIsIkVUSU1FRE9VVCIsIkVSUl9ORVRXT1JLIiwiRVJSX0ZSX1RPT19NQU5ZX1JFRElSRUNUUyIsIkVSUl9ERVBSRUNBVEVEIiwiRVJSX0JBRF9SRVNQT05TRSIsIkVSUl9CQURfUkVRVUVTVCIsIkVSUl9DQU5DRUxFRCIsIkVSUl9OT1RfU1VQUE9SVCIsIkVSUl9JTlZBTElEX1VSTCJdLmZvckVhY2goZT0+e0Z0W2VdPXt2YWx1ZTplfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHosRnQpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShXdCwiaXNBeGlvc0Vycm9yIix7dmFsdWU6ITB9KTt6LmZyb209KGUsQSx0LHIsbyxpKT0+e2xldCBuPU9iamVjdC5jcmVhdGUoV3QpO3JldHVybiBjLnRvRmxhdE9iamVjdChlLG4sZnVuY3Rpb24oZil7cmV0dXJuIGYhPT1FcnJvci5wcm90b3R5cGV9LGc9PmchPT0iaXNBeGlvc0Vycm9yIiksei5jYWxsKG4sZS5tZXNzYWdlLEEsdCxyLG8pLG4uY2F1c2U9ZSxuLm5hbWU9ZS5uYW1lLGkmJk9iamVjdC5hc3NpZ24obixpKSxufTt2YXIgdz16O3ZhciBoZT1udWxsO2Z1bmN0aW9uIFZlKGUpe3JldHVybiBjLmlzUGxhaW5PYmplY3QoZSl8fGMuaXNBcnJheShlKX1mdW5jdGlvbiBTdChlKXtyZXR1cm4gYy5lbmRzV2l0aChlLCJbXSIpP2Uuc2xpY2UoMCwtMik6ZX1mdW5jdGlvbiBVdChlLEEsdCl7cmV0dXJuIGU/ZS5jb25jYXQoQSkubWFwKGZ1bmN0aW9uKG8saSl7cmV0dXJuIG89U3QobyksIXQmJmk/IlsiK28rIl0iOm99KS5qb2luKHQ/Ii4iOiIiKTpBfWZ1bmN0aW9uIGtpKGUpe3JldHVybiBjLmlzQXJyYXkoZSkmJiFlLnNvbWUoVmUpfXZhciBiaT1jLnRvRmxhdE9iamVjdChjLHt9LG51bGwsZnVuY3Rpb24oQSl7cmV0dXJuL15pc1tBLVpdLy50ZXN0KEEpfSk7ZnVuY3Rpb24gRGkoZSxBLHQpe2lmKCFjLmlzT2JqZWN0KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoInRhcmdldCBtdXN0IGJlIGFuIG9iamVjdCIpO0E9QXx8bmV3KGhlfHxGb3JtRGF0YSksdD1jLnRvRmxhdE9iamVjdCh0LHttZXRhVG9rZW5zOiEwLGRvdHM6ITEsaW5kZXhlczohMX0sITEsZnVuY3Rpb24oQixRKXtyZXR1cm4hYy5pc1VuZGVmaW5lZChRW0JdKX0pO2xldCByPXQubWV0YVRva2VucyxvPXQudmlzaXRvcnx8YSxpPXQuZG90cyxuPXQuaW5kZXhlcyxmPSh0LkJsb2J8fHR5cGVvZiBCbG9iPCJ1IiYmQmxvYikmJmMuaXNTcGVjQ29tcGxpYW50Rm9ybShBKTtpZighYy5pc0Z1bmN0aW9uKG8pKXRocm93IG5ldyBUeXBlRXJyb3IoInZpc2l0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uIik7ZnVuY3Rpb24gbShwKXtpZihwPT09bnVsbClyZXR1cm4iIjtpZihjLmlzRGF0ZShwKSlyZXR1cm4gcC50b0lTT1N0cmluZygpO2lmKCFmJiZjLmlzQmxvYihwKSl0aHJvdyBuZXcgdygiQmxvYiBpcyBub3Qgc3VwcG9ydGVkLiBVc2UgYSBCdWZmZXIgaW5zdGVhZC4iKTtyZXR1cm4gYy5pc0FycmF5QnVmZmVyKHApfHxjLmlzVHlwZWRBcnJheShwKT9mJiZ0eXBlb2YgQmxvYj09ImZ1bmN0aW9uIj9uZXcgQmxvYihbcF0pOkJ1ZmZlci5mcm9tKHApOnB9ZnVuY3Rpb24gYShwLEIsUSl7bGV0IFI9cDtpZihwJiYhUSYmdHlwZW9mIHA9PSJvYmplY3QiKXtpZihjLmVuZHNXaXRoKEIsInt9IikpQj1yP0I6Qi5zbGljZSgwLC0yKSxwPUpTT04uc3RyaW5naWZ5KHApO2Vsc2UgaWYoYy5pc0FycmF5KHApJiZraShwKXx8KGMuaXNGaWxlTGlzdChwKXx8Yy5lbmRzV2l0aChCLCJbXSIpKSYmKFI9Yy50b0FycmF5KHApKSlyZXR1cm4gQj1TdChCKSxSLmZvckVhY2goZnVuY3Rpb24oUCxRcil7IShjLmlzVW5kZWZpbmVkKFApfHxQPT09bnVsbCkmJkEuYXBwZW5kKG49PT0hMD9VdChbQl0sUXIsaSk6bj09PW51bGw/QjpCKyJbXSIsbShQKSl9KSwhMX1yZXR1cm4gVmUocCk/ITA6KEEuYXBwZW5kKFV0KFEsQixpKSxtKHApKSwhMSl9bGV0IHM9W10sdT1PYmplY3QuYXNzaWduKGJpLHtkZWZhdWx0VmlzaXRvcjphLGNvbnZlcnRWYWx1ZTptLGlzVmlzaXRhYmxlOlZlfSk7ZnVuY3Rpb24gSShwLEIpe2lmKCFjLmlzVW5kZWZpbmVkKHApKXtpZihzLmluZGV4T2YocCkhPT0tMSl0aHJvdyBFcnJvcigiQ2lyY3VsYXIgcmVmZXJlbmNlIGRldGVjdGVkIGluICIrQi5qb2luKCIuIikpO3MucHVzaChwKSxjLmZvckVhY2gocCxmdW5jdGlvbihSLE4peyghKGMuaXNVbmRlZmluZWQoUil8fFI9PT1udWxsKSYmby5jYWxsKEEsUixjLmlzU3RyaW5nKE4pP04udHJpbSgpOk4sQix1KSk9PT0hMCYmSShSLEI/Qi5jb25jYXQoTik6W05dKX0pLHMucG9wKCl9fWlmKCFjLmlzT2JqZWN0KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoImRhdGEgbXVzdCBiZSBhbiBvYmplY3QiKTtyZXR1cm4gSShlKSxBfXZhciBMPURpO2Z1bmN0aW9uIE90KGUpe2xldCBBPXsiISI6IiUyMSIsIiciOiIlMjciLCIoIjoiJTI4IiwiKSI6IiUyOSIsIn4iOiIlN0UiLCIlMjAiOiIrIiwiJTAwIjoiXDAifTtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGUpLnJlcGxhY2UoL1shJygpfl18JTIwfCUwMC9nLGZ1bmN0aW9uKHIpe3JldHVybiBBW3JdfSl9ZnVuY3Rpb24gTnQoZSxBKXt0aGlzLl9wYWlycz1bXSxlJiZMKGUsdGhpcyxBKX12YXIgUHQ9TnQucHJvdG90eXBlO1B0LmFwcGVuZD1mdW5jdGlvbihBLHQpe3RoaXMuX3BhaXJzLnB1c2goW0EsdF0pfTtQdC50b1N0cmluZz1mdW5jdGlvbihBKXtsZXQgdD1BP2Z1bmN0aW9uKHIpe3JldHVybiBBLmNhbGwodGhpcyxyLE90KX06T3Q7cmV0dXJuIHRoaXMuX3BhaXJzLm1hcChmdW5jdGlvbihvKXtyZXR1cm4gdChvWzBdKSsiPSIrdChvWzFdKX0sIiIpLmpvaW4oIiYiKX07dmFyIHdlPU50O2Z1bmN0aW9uIFdpKGUpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoZSkucmVwbGFjZSgvJTNBL2dpLCI6IikucmVwbGFjZSgvJTI0L2csIiQiKS5yZXBsYWNlKC8lMkMvZ2ksIiwiKS5yZXBsYWNlKC8lMjAvZywiKyIpLnJlcGxhY2UoLyU1Qi9naSwiWyIpLnJlcGxhY2UoLyU1RC9naSwiXSIpfWZ1bmN0aW9uIGFlKGUsQSx0KXtpZighQSlyZXR1cm4gZTtsZXQgcj10JiZ0LmVuY29kZXx8V2ksbz10JiZ0LnNlcmlhbGl6ZSxpO2lmKG8/aT1vKEEsdCk6aT1jLmlzVVJMU2VhcmNoUGFyYW1zKEEpP0EudG9TdHJpbmcoKTpuZXcgd2UoQSx0KS50b1N0cmluZyhyKSxpKXtsZXQgbj1lLmluZGV4T2YoIiMiKTtuIT09LTEmJihlPWUuc2xpY2UoMCxuKSksZSs9KGUuaW5kZXhPZigiPyIpPT09LTE/Ij8iOiImIikraX1yZXR1cm4gZX12YXIgX2U9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLmhhbmRsZXJzPVtdfXVzZShBLHQscil7cmV0dXJuIHRoaXMuaGFuZGxlcnMucHVzaCh7ZnVsZmlsbGVkOkEscmVqZWN0ZWQ6dCxzeW5jaHJvbm91czpyP3Iuc3luY2hyb25vdXM6ITEscnVuV2hlbjpyP3IucnVuV2hlbjpudWxsfSksdGhpcy5oYW5kbGVycy5sZW5ndGgtMX1lamVjdChBKXt0aGlzLmhhbmRsZXJzW0FdJiYodGhpcy5oYW5kbGVyc1tBXT1udWxsKX1jbGVhcigpe3RoaXMuaGFuZGxlcnMmJih0aGlzLmhhbmRsZXJzPVtdKX1mb3JFYWNoKEEpe2MuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLGZ1bmN0aW9uKHIpe3IhPT1udWxsJiZBKHIpfSl9fSxaZT1fZTt2YXIgUmU9e3NpbGVudEpTT05QYXJzaW5nOiEwLGZvcmNlZEpTT05QYXJzaW5nOiEwLGNsYXJpZnlUaW1lb3V0RXJyb3I6ITF9O3ZhciB4dD10eXBlb2YgVVJMU2VhcmNoUGFyYW1zPCJ1Ij9VUkxTZWFyY2hQYXJhbXM6d2U7dmFyIEd0PXR5cGVvZiBGb3JtRGF0YTwidSI/Rm9ybURhdGE6bnVsbDt2YXIgVHQ9dHlwZW9mIEJsb2I8InUiP0Jsb2I6bnVsbDt2YXIgSnQ9e2lzQnJvd3NlcjohMCxjbGFzc2VzOntVUkxTZWFyY2hQYXJhbXM6eHQsRm9ybURhdGE6R3QsQmxvYjpUdH0scHJvdG9jb2xzOlsiaHR0cCIsImh0dHBzIiwiZmlsZSIsImJsb2IiLCJ1cmwiLCJkYXRhIl19O3ZhciBYZT17fTt3cihYZSx7aGFzQnJvd3NlckVudjooKT0+THQsaGFzU3RhbmRhcmRCcm93c2VyRW52OigpPT5GaSxoYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnY6KCk9PlVpfSk7dmFyIEx0PXR5cGVvZiB3aW5kb3c8InUiJiZ0eXBlb2YgZG9jdW1lbnQ8InUiLEZpPShlPT5MdCYmWyJSZWFjdE5hdGl2ZSIsIk5hdGl2ZVNjcmlwdCIsIk5TIl0uaW5kZXhPZihlKTwwKSh0eXBlb2YgbmF2aWdhdG9yPCJ1IiYmbmF2aWdhdG9yLnByb2R1Y3QpLFVpPXR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZTwidSImJnNlbGYgaW5zdGFuY2VvZiBXb3JrZXJHbG9iYWxTY29wZSYmdHlwZW9mIHNlbGYuaW1wb3J0U2NyaXB0cz09ImZ1bmN0aW9uIjt2YXIgVz17Li4uWGUsLi4uSnR9O2Z1bmN0aW9uICRlKGUsQSl7cmV0dXJuIEwoZSxuZXcgVy5jbGFzc2VzLlVSTFNlYXJjaFBhcmFtcyxPYmplY3QuYXNzaWduKHt2aXNpdG9yOmZ1bmN0aW9uKHQscixvLGkpe3JldHVybiBXLmlzTm9kZSYmYy5pc0J1ZmZlcih0KT8odGhpcy5hcHBlbmQocix0LnRvU3RyaW5nKCJiYXNlNjQiKSksITEpOmkuZGVmYXVsdFZpc2l0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0sQSkpfWZ1bmN0aW9uIFNpKGUpe3JldHVybiBjLm1hdGNoQWxsKC9cdyt8XFsoXHcqKV0vZyxlKS5tYXAoQT0+QVswXT09PSJbXSI/IiI6QVsxXXx8QVswXSl9ZnVuY3Rpb24gT2koZSl7bGV0IEE9e30sdD1PYmplY3Qua2V5cyhlKSxyLG89dC5sZW5ndGgsaTtmb3Iocj0wO3I8bztyKyspaT10W3JdLEFbaV09ZVtpXTtyZXR1cm4gQX1mdW5jdGlvbiBOaShlKXtmdW5jdGlvbiBBKHQscixvLGkpe2xldCBuPXRbaSsrXSxnPU51bWJlci5pc0Zpbml0ZSgrbiksZj1pPj10Lmxlbmd0aDtyZXR1cm4gbj0hbiYmYy5pc0FycmF5KG8pP28ubGVuZ3RoOm4sZj8oYy5oYXNPd25Qcm9wKG8sbik/b1tuXT1bb1tuXSxyXTpvW25dPXIsIWcpOigoIW9bbl18fCFjLmlzT2JqZWN0KG9bbl0pKSYmKG9bbl09W10pLEEodCxyLG9bbl0saSkmJmMuaXNBcnJheShvW25dKSYmKG9bbl09T2kob1tuXSkpLCFnKX1pZihjLmlzRm9ybURhdGEoZSkmJmMuaXNGdW5jdGlvbihlLmVudHJpZXMpKXtsZXQgdD17fTtyZXR1cm4gYy5mb3JFYWNoRW50cnkoZSwocixvKT0+e0EoU2kociksbyx0LDApfSksdH1yZXR1cm4gbnVsbH12YXIga2U9Tmk7ZnVuY3Rpb24gUGkoZSxBLHQpe2lmKGMuaXNTdHJpbmcoZSkpdHJ5e3JldHVybihBfHxKU09OLnBhcnNlKShlKSxjLnRyaW0oZSl9Y2F0Y2gocil7aWYoci5uYW1lIT09IlN5bnRheEVycm9yIil0aHJvdyByfXJldHVybih0fHxKU09OLnN0cmluZ2lmeSkoZSl9dmFyIGVBPXt0cmFuc2l0aW9uYWw6UmUsYWRhcHRlcjpbInhociIsImh0dHAiXSx0cmFuc2Zvcm1SZXF1ZXN0OltmdW5jdGlvbihBLHQpe2xldCByPXQuZ2V0Q29udGVudFR5cGUoKXx8IiIsbz1yLmluZGV4T2YoImFwcGxpY2F0aW9uL2pzb24iKT4tMSxpPWMuaXNPYmplY3QoQSk7aWYoaSYmYy5pc0hUTUxGb3JtKEEpJiYoQT1uZXcgRm9ybURhdGEoQSkpLGMuaXNGb3JtRGF0YShBKSlyZXR1cm4gbyYmbz9KU09OLnN0cmluZ2lmeShrZShBKSk6QTtpZihjLmlzQXJyYXlCdWZmZXIoQSl8fGMuaXNCdWZmZXIoQSl8fGMuaXNTdHJlYW0oQSl8fGMuaXNGaWxlKEEpfHxjLmlzQmxvYihBKSlyZXR1cm4gQTtpZihjLmlzQXJyYXlCdWZmZXJWaWV3KEEpKXJldHVybiBBLmJ1ZmZlcjtpZihjLmlzVVJMU2VhcmNoUGFyYW1zKEEpKXJldHVybiB0LnNldENvbnRlbnRUeXBlKCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCIsITEpLEEudG9TdHJpbmcoKTtsZXQgZztpZihpKXtpZihyLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpPi0xKXJldHVybiAkZShBLHRoaXMuZm9ybVNlcmlhbGl6ZXIpLnRvU3RyaW5nKCk7aWYoKGc9Yy5pc0ZpbGVMaXN0KEEpKXx8ci5pbmRleE9mKCJtdWx0aXBhcnQvZm9ybS1kYXRhIik+LTEpe2xldCBmPXRoaXMuZW52JiZ0aGlzLmVudi5Gb3JtRGF0YTtyZXR1cm4gTChnP3siZmlsZXNbXSI6QX06QSxmJiZuZXcgZix0aGlzLmZvcm1TZXJpYWxpemVyKX19cmV0dXJuIGl8fG8/KHQuc2V0Q29udGVudFR5cGUoImFwcGxpY2F0aW9uL2pzb24iLCExKSxQaShBKSk6QX1dLHRyYW5zZm9ybVJlc3BvbnNlOltmdW5jdGlvbihBKXtsZXQgdD10aGlzLnRyYW5zaXRpb25hbHx8ZUEudHJhbnNpdGlvbmFsLHI9dCYmdC5mb3JjZWRKU09OUGFyc2luZyxvPXRoaXMucmVzcG9uc2VUeXBlPT09Impzb24iO2lmKEEmJmMuaXNTdHJpbmcoQSkmJihyJiYhdGhpcy5yZXNwb25zZVR5cGV8fG8pKXtsZXQgbj0hKHQmJnQuc2lsZW50SlNPTlBhcnNpbmcpJiZvO3RyeXtyZXR1cm4gSlNPTi5wYXJzZShBKX1jYXRjaChnKXtpZihuKXRocm93IGcubmFtZT09PSJTeW50YXhFcnJvciI/dy5mcm9tKGcsdy5FUlJfQkFEX1JFU1BPTlNFLHRoaXMsbnVsbCx0aGlzLnJlc3BvbnNlKTpnfX1yZXR1cm4gQX1dLHRpbWVvdXQ6MCx4c3JmQ29va2llTmFtZToiWFNSRi1UT0tFTiIseHNyZkhlYWRlck5hbWU6IlgtWFNSRi1UT0tFTiIsbWF4Q29udGVudExlbmd0aDotMSxtYXhCb2R5TGVuZ3RoOi0xLGVudjp7Rm9ybURhdGE6Vy5jbGFzc2VzLkZvcm1EYXRhLEJsb2I6Vy5jbGFzc2VzLkJsb2J9LHZhbGlkYXRlU3RhdHVzOmZ1bmN0aW9uKEEpe3JldHVybiBBPj0yMDAmJkE8MzAwfSxoZWFkZXJzOntjb21tb246e0FjY2VwdDoiYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qIiwiQ29udGVudC1UeXBlIjp2b2lkIDB9fX07Yy5mb3JFYWNoKFsiZGVsZXRlIiwiZ2V0IiwiaGVhZCIsInBvc3QiLCJwdXQiLCJwYXRjaCJdLGU9PntlQS5oZWFkZXJzW2VdPXt9fSk7dmFyIFY9ZUE7dmFyIHhpPWMudG9PYmplY3RTZXQoWyJhZ2UiLCJhdXRob3JpemF0aW9uIiwiY29udGVudC1sZW5ndGgiLCJjb250ZW50LXR5cGUiLCJldGFnIiwiZXhwaXJlcyIsImZyb20iLCJob3N0IiwiaWYtbW9kaWZpZWQtc2luY2UiLCJpZi11bm1vZGlmaWVkLXNpbmNlIiwibGFzdC1tb2RpZmllZCIsImxvY2F0aW9uIiwibWF4LWZvcndhcmRzIiwicHJveHktYXV0aG9yaXphdGlvbiIsInJlZmVyZXIiLCJyZXRyeS1hZnRlciIsInVzZXItYWdlbnQiXSksTXQ9ZT0+e2xldCBBPXt9LHQscixvO3JldHVybiBlJiZlLnNwbGl0KGAKYCkuZm9yRWFjaChmdW5jdGlvbihuKXtvPW4uaW5kZXhPZigiOiIpLHQ9bi5zdWJzdHJpbmcoMCxvKS50cmltKCkudG9Mb3dlckNhc2UoKSxyPW4uc3Vic3RyaW5nKG8rMSkudHJpbSgpLCEoIXR8fEFbdF0mJnhpW3RdKSYmKHQ9PT0ic2V0LWNvb2tpZSI/QVt0XT9BW3RdLnB1c2gocik6QVt0XT1bcl06QVt0XT1BW3RdP0FbdF0rIiwgIityOnIpfSksQX07dmFyIEh0PVN5bWJvbCgiaW50ZXJuYWxzIik7ZnVuY3Rpb24gbmUoZSl7cmV0dXJuIGUmJlN0cmluZyhlKS50cmltKCkudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBiZShlKXtyZXR1cm4gZT09PSExfHxlPT1udWxsP2U6Yy5pc0FycmF5KGUpP2UubWFwKGJlKTpTdHJpbmcoZSl9ZnVuY3Rpb24gR2koZSl7bGV0IEE9T2JqZWN0LmNyZWF0ZShudWxsKSx0PS8oW15ccyw7PV0rKVxzKig/Oj1ccyooW14sO10rKSk/L2cscjtmb3IoO3I9dC5leGVjKGUpOylBW3JbMV1dPXJbMl07cmV0dXJuIEF9dmFyIFRpPWU9Pi9eWy1fYS16QS1aMC05XmB8fiwhIyQlJicqKy5dKyQvLnRlc3QoZS50cmltKCkpO2Z1bmN0aW9uIEFBKGUsQSx0LHIsbyl7aWYoYy5pc0Z1bmN0aW9uKHIpKXJldHVybiByLmNhbGwodGhpcyxBLHQpO2lmKG8mJihBPXQpLCEhYy5pc1N0cmluZyhBKSl7aWYoYy5pc1N0cmluZyhyKSlyZXR1cm4gQS5pbmRleE9mKHIpIT09LTE7aWYoYy5pc1JlZ0V4cChyKSlyZXR1cm4gci50ZXN0KEEpfX1mdW5jdGlvbiBKaShlKXtyZXR1cm4gZS50cmltKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8oW2EtelxkXSkoXHcqKS9nLChBLHQscik9PnQudG9VcHBlckNhc2UoKStyKX1mdW5jdGlvbiBMaShlLEEpe2xldCB0PWMudG9DYW1lbENhc2UoIiAiK0EpO1siZ2V0Iiwic2V0IiwiaGFzIl0uZm9yRWFjaChyPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KGUscit0LHt2YWx1ZTpmdW5jdGlvbihvLGksbil7cmV0dXJuIHRoaXNbcl0uY2FsbCh0aGlzLEEsbyxpLG4pfSxjb25maWd1cmFibGU6ITB9KX0pfXZhciBfPWNsYXNze2NvbnN0cnVjdG9yKEEpe0EmJnRoaXMuc2V0KEEpfXNldChBLHQscil7bGV0IG89dGhpcztmdW5jdGlvbiBpKGcsZixtKXtsZXQgYT1uZShmKTtpZighYSl0aHJvdyBuZXcgRXJyb3IoImhlYWRlciBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nIik7bGV0IHM9Yy5maW5kS2V5KG8sYSk7KCFzfHxvW3NdPT09dm9pZCAwfHxtPT09ITB8fG09PT12b2lkIDAmJm9bc10hPT0hMSkmJihvW3N8fGZdPWJlKGcpKX1sZXQgbj0oZyxmKT0+Yy5mb3JFYWNoKGcsKG0sYSk9PmkobSxhLGYpKTtyZXR1cm4gYy5pc1BsYWluT2JqZWN0KEEpfHxBIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3Rvcj9uKEEsdCk6Yy5pc1N0cmluZyhBKSYmKEE9QS50cmltKCkpJiYhVGkoQSk/bihNdChBKSx0KTpBIT1udWxsJiZpKHQsQSxyKSx0aGlzfWdldChBLHQpe2lmKEE9bmUoQSksQSl7bGV0IHI9Yy5maW5kS2V5KHRoaXMsQSk7aWYocil7bGV0IG89dGhpc1tyXTtpZighdClyZXR1cm4gbztpZih0PT09ITApcmV0dXJuIEdpKG8pO2lmKGMuaXNGdW5jdGlvbih0KSlyZXR1cm4gdC5jYWxsKHRoaXMsbyxyKTtpZihjLmlzUmVnRXhwKHQpKXJldHVybiB0LmV4ZWMobyk7dGhyb3cgbmV3IFR5cGVFcnJvcigicGFyc2VyIG11c3QgYmUgYm9vbGVhbnxyZWdleHB8ZnVuY3Rpb24iKX19fWhhcyhBLHQpe2lmKEE9bmUoQSksQSl7bGV0IHI9Yy5maW5kS2V5KHRoaXMsQSk7cmV0dXJuISEociYmdGhpc1tyXSE9PXZvaWQgMCYmKCF0fHxBQSh0aGlzLHRoaXNbcl0scix0KSkpfXJldHVybiExfWRlbGV0ZShBLHQpe2xldCByPXRoaXMsbz0hMTtmdW5jdGlvbiBpKG4pe2lmKG49bmUobiksbil7bGV0IGc9Yy5maW5kS2V5KHIsbik7ZyYmKCF0fHxBQShyLHJbZ10sZyx0KSkmJihkZWxldGUgcltnXSxvPSEwKX19cmV0dXJuIGMuaXNBcnJheShBKT9BLmZvckVhY2goaSk6aShBKSxvfWNsZWFyKEEpe2xldCB0PU9iamVjdC5rZXlzKHRoaXMpLHI9dC5sZW5ndGgsbz0hMTtmb3IoO3ItLTspe2xldCBpPXRbcl07KCFBfHxBQSh0aGlzLHRoaXNbaV0saSxBLCEwKSkmJihkZWxldGUgdGhpc1tpXSxvPSEwKX1yZXR1cm4gb31ub3JtYWxpemUoQSl7bGV0IHQ9dGhpcyxyPXt9O3JldHVybiBjLmZvckVhY2godGhpcywobyxpKT0+e2xldCBuPWMuZmluZEtleShyLGkpO2lmKG4pe3Rbbl09YmUobyksZGVsZXRlIHRbaV07cmV0dXJufWxldCBnPUE/SmkoaSk6U3RyaW5nKGkpLnRyaW0oKTtnIT09aSYmZGVsZXRlIHRbaV0sdFtnXT1iZShvKSxyW2ddPSEwfSksdGhpc31jb25jYXQoLi4uQSl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3IuY29uY2F0KHRoaXMsLi4uQSl9dG9KU09OKEEpe2xldCB0PU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGMuZm9yRWFjaCh0aGlzLChyLG8pPT57ciE9bnVsbCYmciE9PSExJiYodFtvXT1BJiZjLmlzQXJyYXkocik/ci5qb2luKCIsICIpOnIpfSksdH1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiBPYmplY3QuZW50cmllcyh0aGlzLnRvSlNPTigpKVtTeW1ib2wuaXRlcmF0b3JdKCl9dG9TdHJpbmcoKXtyZXR1cm4gT2JqZWN0LmVudHJpZXModGhpcy50b0pTT04oKSkubWFwKChbQSx0XSk9PkErIjogIit0KS5qb2luKGAKYCl9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm4iQXhpb3NIZWFkZXJzIn1zdGF0aWMgZnJvbShBKXtyZXR1cm4gQSBpbnN0YW5jZW9mIHRoaXM/QTpuZXcgdGhpcyhBKX1zdGF0aWMgY29uY2F0KEEsLi4udCl7bGV0IHI9bmV3IHRoaXMoQSk7cmV0dXJuIHQuZm9yRWFjaChvPT5yLnNldChvKSkscn1zdGF0aWMgYWNjZXNzb3IoQSl7bGV0IHI9KHRoaXNbSHRdPXRoaXNbSHRdPXthY2Nlc3NvcnM6e319KS5hY2Nlc3NvcnMsbz10aGlzLnByb3RvdHlwZTtmdW5jdGlvbiBpKG4pe2xldCBnPW5lKG4pO3JbZ118fChMaShvLG4pLHJbZ109ITApfXJldHVybiBjLmlzQXJyYXkoQSk/QS5mb3JFYWNoKGkpOmkoQSksdGhpc319O18uYWNjZXNzb3IoWyJDb250ZW50LVR5cGUiLCJDb250ZW50LUxlbmd0aCIsIkFjY2VwdCIsIkFjY2VwdC1FbmNvZGluZyIsIlVzZXItQWdlbnQiLCJBdXRob3JpemF0aW9uIl0pO2MucmVkdWNlRGVzY3JpcHRvcnMoXy5wcm90b3R5cGUsKHt2YWx1ZTplfSxBKT0+e2xldCB0PUFbMF0udG9VcHBlckNhc2UoKStBLnNsaWNlKDEpO3JldHVybntnZXQ6KCk9PmUsc2V0KHIpe3RoaXNbdF09cn19fSk7Yy5mcmVlemVNZXRob2RzKF8pO3ZhciBGPV87ZnVuY3Rpb24gc2UoZSxBKXtsZXQgdD10aGlzfHxWLHI9QXx8dCxvPUYuZnJvbShyLmhlYWRlcnMpLGk9ci5kYXRhO3JldHVybiBjLmZvckVhY2goZSxmdW5jdGlvbihnKXtpPWcuY2FsbCh0LGksby5ub3JtYWxpemUoKSxBP0Euc3RhdHVzOnZvaWQgMCl9KSxvLm5vcm1hbGl6ZSgpLGl9ZnVuY3Rpb24gSWUoZSl7cmV0dXJuISEoZSYmZS5fX0NBTkNFTF9fKX1mdW5jdGlvbiBZdChlLEEsdCl7dy5jYWxsKHRoaXMsZT8/ImNhbmNlbGVkIix3LkVSUl9DQU5DRUxFRCxBLHQpLHRoaXMubmFtZT0iQ2FuY2VsZWRFcnJvciJ9Yy5pbmhlcml0cyhZdCx3LHtfX0NBTkNFTF9fOiEwfSk7dmFyIE09WXQ7ZnVuY3Rpb24gdEEoZSxBLHQpe2xldCByPXQuY29uZmlnLnZhbGlkYXRlU3RhdHVzOyF0LnN0YXR1c3x8IXJ8fHIodC5zdGF0dXMpP2UodCk6QShuZXcgdygiUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAiK3Quc3RhdHVzLFt3LkVSUl9CQURfUkVRVUVTVCx3LkVSUl9CQURfUkVTUE9OU0VdW01hdGguZmxvb3IodC5zdGF0dXMvMTAwKS00XSx0LmNvbmZpZyx0LnJlcXVlc3QsdCkpfXZhciBxdD1XLmhhc1N0YW5kYXJkQnJvd3NlckVudj97d3JpdGUoZSxBLHQscixvLGkpe2xldCBuPVtlKyI9IitlbmNvZGVVUklDb21wb25lbnQoQSldO2MuaXNOdW1iZXIodCkmJm4ucHVzaCgiZXhwaXJlcz0iK25ldyBEYXRlKHQpLnRvR01UU3RyaW5nKCkpLGMuaXNTdHJpbmcocikmJm4ucHVzaCgicGF0aD0iK3IpLGMuaXNTdHJpbmcobykmJm4ucHVzaCgiZG9tYWluPSIrbyksaT09PSEwJiZuLnB1c2goInNlY3VyZSIpLGRvY3VtZW50LmNvb2tpZT1uLmpvaW4oIjsgIil9LHJlYWQoZSl7bGV0IEE9ZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoIihefDtcXHMqKSgiK2UrIik9KFteO10qKSIpKTtyZXR1cm4gQT9kZWNvZGVVUklDb21wb25lbnQoQVszXSk6bnVsbH0scmVtb3ZlKGUpe3RoaXMud3JpdGUoZSwiIixEYXRlLm5vdygpLTg2NGU1KX19Ont3cml0ZSgpe30scmVhZCgpe3JldHVybiBudWxsfSxyZW1vdmUoKXt9fTtmdW5jdGlvbiByQShlKXtyZXR1cm4vXihbYS16XVthLXpcZCtcLS5dKjopP1wvXC8vaS50ZXN0KGUpfWZ1bmN0aW9uIGlBKGUsQSl7cmV0dXJuIEE/ZS5yZXBsYWNlKC9cLyskLywiIikrIi8iK0EucmVwbGFjZSgvXlwvKy8sIiIpOmV9ZnVuY3Rpb24gZ2UoZSxBKXtyZXR1cm4gZSYmIXJBKEEpP2lBKGUsQSk6QX12YXIgS3Q9Vy5oYXNTdGFuZGFyZEJyb3dzZXJFbnY/ZnVuY3Rpb24oKXtsZXQgQT0vKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpLHI7ZnVuY3Rpb24gbyhpKXtsZXQgbj1pO3JldHVybiBBJiYodC5zZXRBdHRyaWJ1dGUoImhyZWYiLG4pLG49dC5ocmVmKSx0LnNldEF0dHJpYnV0ZSgiaHJlZiIsbikse2hyZWY6dC5ocmVmLHByb3RvY29sOnQucHJvdG9jb2w/dC5wcm90b2NvbC5yZXBsYWNlKC86JC8sIiIpOiIiLGhvc3Q6dC5ob3N0LHNlYXJjaDp0LnNlYXJjaD90LnNlYXJjaC5yZXBsYWNlKC9eXD8vLCIiKToiIixoYXNoOnQuaGFzaD90Lmhhc2gucmVwbGFjZSgvXiMvLCIiKToiIixob3N0bmFtZTp0Lmhvc3RuYW1lLHBvcnQ6dC5wb3J0LHBhdGhuYW1lOnQucGF0aG5hbWUuY2hhckF0KDApPT09Ii8iP3QucGF0aG5hbWU6Ii8iK3QucGF0aG5hbWV9fXJldHVybiByPW8od2luZG93LmxvY2F0aW9uLmhyZWYpLGZ1bmN0aW9uKG4pe2xldCBnPWMuaXNTdHJpbmcobik/byhuKTpuO3JldHVybiBnLnByb3RvY29sPT09ci5wcm90b2NvbCYmZy5ob3N0PT09ci5ob3N0fX0oKTpmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiEwfX0oKTtmdW5jdGlvbiBvQShlKXtsZXQgQT0vXihbLStcd117MSwyNX0pKDo/XC9cL3w6KS8uZXhlYyhlKTtyZXR1cm4gQSYmQVsxXXx8IiJ9ZnVuY3Rpb24gTWkoZSxBKXtlPWV8fDEwO2xldCB0PW5ldyBBcnJheShlKSxyPW5ldyBBcnJheShlKSxvPTAsaT0wLG47cmV0dXJuIEE9QSE9PXZvaWQgMD9BOjFlMyxmdW5jdGlvbihmKXtsZXQgbT1EYXRlLm5vdygpLGE9cltpXTtufHwobj1tKSx0W29dPWYscltvXT1tO2xldCBzPWksdT0wO2Zvcig7cyE9PW87KXUrPXRbcysrXSxzPXMlZTtpZihvPShvKzEpJWUsbz09PWkmJihpPShpKzEpJWUpLG0tbjxBKXJldHVybjtsZXQgST1hJiZtLWE7cmV0dXJuIEk/TWF0aC5yb3VuZCh1KjFlMy9JKTp2b2lkIDB9fXZhciBqdD1NaTtmdW5jdGlvbiB2dChlLEEpe2xldCB0PTAscj1qdCg1MCwyNTApO3JldHVybiBvPT57bGV0IGk9by5sb2FkZWQsbj1vLmxlbmd0aENvbXB1dGFibGU/by50b3RhbDp2b2lkIDAsZz1pLXQsZj1yKGcpLG09aTw9bjt0PWk7bGV0IGE9e2xvYWRlZDppLHRvdGFsOm4scHJvZ3Jlc3M6bj9pL246dm9pZCAwLGJ5dGVzOmcscmF0ZTpmfHx2b2lkIDAsZXN0aW1hdGVkOmYmJm4mJm0/KG4taSkvZjp2b2lkIDAsZXZlbnQ6b307YVtBPyJkb3dubG9hZCI6InVwbG9hZCJdPSEwLGUoYSl9fXZhciBIaT10eXBlb2YgWE1MSHR0cFJlcXVlc3Q8InUiLHp0PUhpJiZmdW5jdGlvbihlKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxyKXtsZXQgbz1lLmRhdGEsaT1GLmZyb20oZS5oZWFkZXJzKS5ub3JtYWxpemUoKSx7cmVzcG9uc2VUeXBlOm4sd2l0aFhTUkZUb2tlbjpnfT1lLGY7ZnVuY3Rpb24gbSgpe2UuY2FuY2VsVG9rZW4mJmUuY2FuY2VsVG9rZW4udW5zdWJzY3JpYmUoZiksZS5zaWduYWwmJmUuc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoImFib3J0IixmKX1sZXQgYTtpZihjLmlzRm9ybURhdGEobykpe2lmKFcuaGFzU3RhbmRhcmRCcm93c2VyRW52fHxXLmhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudilpLnNldENvbnRlbnRUeXBlKCExKTtlbHNlIGlmKChhPWkuZ2V0Q29udGVudFR5cGUoKSkhPT0hMSl7bGV0W0IsLi4uUV09YT9hLnNwbGl0KCI7IikubWFwKFI9PlIudHJpbSgpKS5maWx0ZXIoQm9vbGVhbik6W107aS5zZXRDb250ZW50VHlwZShbQnx8Im11bHRpcGFydC9mb3JtLWRhdGEiLC4uLlFdLmpvaW4oIjsgIikpfX1sZXQgcz1uZXcgWE1MSHR0cFJlcXVlc3Q7aWYoZS5hdXRoKXtsZXQgQj1lLmF1dGgudXNlcm5hbWV8fCIiLFE9ZS5hdXRoLnBhc3N3b3JkP3VuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChlLmF1dGgucGFzc3dvcmQpKToiIjtpLnNldCgiQXV0aG9yaXphdGlvbiIsIkJhc2ljICIrYnRvYShCKyI6IitRKSl9bGV0IHU9Z2UoZS5iYXNlVVJMLGUudXJsKTtzLm9wZW4oZS5tZXRob2QudG9VcHBlckNhc2UoKSxhZSh1LGUucGFyYW1zLGUucGFyYW1zU2VyaWFsaXplciksITApLHMudGltZW91dD1lLnRpbWVvdXQ7ZnVuY3Rpb24gSSgpe2lmKCFzKXJldHVybjtsZXQgQj1GLmZyb20oImdldEFsbFJlc3BvbnNlSGVhZGVycyJpbiBzJiZzLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSxSPXtkYXRhOiFufHxuPT09InRleHQifHxuPT09Impzb24iP3MucmVzcG9uc2VUZXh0OnMucmVzcG9uc2Usc3RhdHVzOnMuc3RhdHVzLHN0YXR1c1RleHQ6cy5zdGF0dXNUZXh0LGhlYWRlcnM6Qixjb25maWc6ZSxyZXF1ZXN0OnN9O3RBKGZ1bmN0aW9uKFApe3QoUCksbSgpfSxmdW5jdGlvbihQKXtyKFApLG0oKX0sUikscz1udWxsfWlmKCJvbmxvYWRlbmQiaW4gcz9zLm9ubG9hZGVuZD1JOnMub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7IXN8fHMucmVhZHlTdGF0ZSE9PTR8fHMuc3RhdHVzPT09MCYmIShzLnJlc3BvbnNlVVJMJiZzLnJlc3BvbnNlVVJMLmluZGV4T2YoImZpbGU6Iik9PT0wKXx8c2V0VGltZW91dChJKX0scy5vbmFib3J0PWZ1bmN0aW9uKCl7cyYmKHIobmV3IHcoIlJlcXVlc3QgYWJvcnRlZCIsdy5FQ09OTkFCT1JURUQsZSxzKSkscz1udWxsKX0scy5vbmVycm9yPWZ1bmN0aW9uKCl7cihuZXcgdygiTmV0d29yayBFcnJvciIsdy5FUlJfTkVUV09SSyxlLHMpKSxzPW51bGx9LHMub250aW1lb3V0PWZ1bmN0aW9uKCl7bGV0IFE9ZS50aW1lb3V0PyJ0aW1lb3V0IG9mICIrZS50aW1lb3V0KyJtcyBleGNlZWRlZCI6InRpbWVvdXQgZXhjZWVkZWQiLFI9ZS50cmFuc2l0aW9uYWx8fFJlO2UudGltZW91dEVycm9yTWVzc2FnZSYmKFE9ZS50aW1lb3V0RXJyb3JNZXNzYWdlKSxyKG5ldyB3KFEsUi5jbGFyaWZ5VGltZW91dEVycm9yP3cuRVRJTUVET1VUOncuRUNPTk5BQk9SVEVELGUscykpLHM9bnVsbH0sVy5oYXNTdGFuZGFyZEJyb3dzZXJFbnYmJihnJiZjLmlzRnVuY3Rpb24oZykmJihnPWcoZSkpLGd8fGchPT0hMSYmS3QodSkpKXtsZXQgQj1lLnhzcmZIZWFkZXJOYW1lJiZlLnhzcmZDb29raWVOYW1lJiZxdC5yZWFkKGUueHNyZkNvb2tpZU5hbWUpO0ImJmkuc2V0KGUueHNyZkhlYWRlck5hbWUsQil9bz09PXZvaWQgMCYmaS5zZXRDb250ZW50VHlwZShudWxsKSwic2V0UmVxdWVzdEhlYWRlciJpbiBzJiZjLmZvckVhY2goaS50b0pTT04oKSxmdW5jdGlvbihRLFIpe3Muc2V0UmVxdWVzdEhlYWRlcihSLFEpfSksYy5pc1VuZGVmaW5lZChlLndpdGhDcmVkZW50aWFscyl8fChzLndpdGhDcmVkZW50aWFscz0hIWUud2l0aENyZWRlbnRpYWxzKSxuJiZuIT09Impzb24iJiYocy5yZXNwb25zZVR5cGU9ZS5yZXNwb25zZVR5cGUpLHR5cGVvZiBlLm9uRG93bmxvYWRQcm9ncmVzcz09ImZ1bmN0aW9uIiYmcy5hZGRFdmVudExpc3RlbmVyKCJwcm9ncmVzcyIsdnQoZS5vbkRvd25sb2FkUHJvZ3Jlc3MsITApKSx0eXBlb2YgZS5vblVwbG9hZFByb2dyZXNzPT0iZnVuY3Rpb24iJiZzLnVwbG9hZCYmcy51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigicHJvZ3Jlc3MiLHZ0KGUub25VcGxvYWRQcm9ncmVzcykpLChlLmNhbmNlbFRva2VufHxlLnNpZ25hbCkmJihmPUI9PntzJiYocighQnx8Qi50eXBlP25ldyBNKG51bGwsZSxzKTpCKSxzLmFib3J0KCkscz1udWxsKX0sZS5jYW5jZWxUb2tlbiYmZS5jYW5jZWxUb2tlbi5zdWJzY3JpYmUoZiksZS5zaWduYWwmJihlLnNpZ25hbC5hYm9ydGVkP2YoKTplLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCJhYm9ydCIsZikpKTtsZXQgcD1vQSh1KTtpZihwJiZXLnByb3RvY29scy5pbmRleE9mKHApPT09LTEpe3IobmV3IHcoIlVuc3VwcG9ydGVkIHByb3RvY29sICIrcCsiOiIsdy5FUlJfQkFEX1JFUVVFU1QsZSkpO3JldHVybn1zLnNlbmQob3x8bnVsbCl9KX07dmFyIGFBPXtodHRwOmhlLHhocjp6dH07Yy5mb3JFYWNoKGFBLChlLEEpPT57aWYoZSl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCJuYW1lIix7dmFsdWU6QX0pfWNhdGNoe31PYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiYWRhcHRlck5hbWUiLHt2YWx1ZTpBfSl9fSk7dmFyIFZ0PWU9PmAtICR7ZX1gLFlpPWU9PmMuaXNGdW5jdGlvbihlKXx8ZT09PW51bGx8fGU9PT0hMSxEZT17Z2V0QWRhcHRlcjplPT57ZT1jLmlzQXJyYXkoZSk/ZTpbZV07bGV0e2xlbmd0aDpBfT1lLHQscixvPXt9O2ZvcihsZXQgaT0wO2k8QTtpKyspe3Q9ZVtpXTtsZXQgbjtpZihyPXQsIVlpKHQpJiYocj1hQVsobj1TdHJpbmcodCkpLnRvTG93ZXJDYXNlKCldLHI9PT12b2lkIDApKXRocm93IG5ldyB3KGBVbmtub3duIGFkYXB0ZXIgJyR7bn0nYCk7aWYocilicmVhaztvW258fCIjIitpXT1yfWlmKCFyKXtsZXQgaT1PYmplY3QuZW50cmllcyhvKS5tYXAoKFtnLGZdKT0+YGFkYXB0ZXIgJHtnfSBgKyhmPT09ITE/ImlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGVudmlyb25tZW50IjoiaXMgbm90IGF2YWlsYWJsZSBpbiB0aGUgYnVpbGQiKSksbj1BP2kubGVuZ3RoPjE/YHNpbmNlIDoKYCtpLm1hcChWdCkuam9pbihgCmApOiIgIitWdChpWzBdKToiYXMgbm8gYWRhcHRlciBzcGVjaWZpZWQiO3Rocm93IG5ldyB3KCJUaGVyZSBpcyBubyBzdWl0YWJsZSBhZGFwdGVyIHRvIGRpc3BhdGNoIHRoZSByZXF1ZXN0ICIrbiwiRVJSX05PVF9TVVBQT1JUIil9cmV0dXJuIHJ9LGFkYXB0ZXJzOmFBfTtmdW5jdGlvbiBuQShlKXtpZihlLmNhbmNlbFRva2VuJiZlLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKSxlLnNpZ25hbCYmZS5zaWduYWwuYWJvcnRlZCl0aHJvdyBuZXcgTShudWxsLGUpfWZ1bmN0aW9uIFdlKGUpe3JldHVybiBuQShlKSxlLmhlYWRlcnM9Ri5mcm9tKGUuaGVhZGVycyksZS5kYXRhPXNlLmNhbGwoZSxlLnRyYW5zZm9ybVJlcXVlc3QpLFsicG9zdCIsInB1dCIsInBhdGNoIl0uaW5kZXhPZihlLm1ldGhvZCkhPT0tMSYmZS5oZWFkZXJzLnNldENvbnRlbnRUeXBlKCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCExKSxEZS5nZXRBZGFwdGVyKGUuYWRhcHRlcnx8Vi5hZGFwdGVyKShlKS50aGVuKGZ1bmN0aW9uKHIpe3JldHVybiBuQShlKSxyLmRhdGE9c2UuY2FsbChlLGUudHJhbnNmb3JtUmVzcG9uc2Usciksci5oZWFkZXJzPUYuZnJvbShyLmhlYWRlcnMpLHJ9LGZ1bmN0aW9uKHIpe3JldHVybiBJZShyKXx8KG5BKGUpLHImJnIucmVzcG9uc2UmJihyLnJlc3BvbnNlLmRhdGE9c2UuY2FsbChlLGUudHJhbnNmb3JtUmVzcG9uc2Usci5yZXNwb25zZSksci5yZXNwb25zZS5oZWFkZXJzPUYuZnJvbShyLnJlc3BvbnNlLmhlYWRlcnMpKSksUHJvbWlzZS5yZWplY3Qocil9KX12YXIgX3Q9ZT0+ZSBpbnN0YW5jZW9mIEY/ZS50b0pTT04oKTplO2Z1bmN0aW9uIFQoZSxBKXtBPUF8fHt9O2xldCB0PXt9O2Z1bmN0aW9uIHIobSxhLHMpe3JldHVybiBjLmlzUGxhaW5PYmplY3QobSkmJmMuaXNQbGFpbk9iamVjdChhKT9jLm1lcmdlLmNhbGwoe2Nhc2VsZXNzOnN9LG0sYSk6Yy5pc1BsYWluT2JqZWN0KGEpP2MubWVyZ2Uoe30sYSk6Yy5pc0FycmF5KGEpP2Euc2xpY2UoKTphfWZ1bmN0aW9uIG8obSxhLHMpe2lmKGMuaXNVbmRlZmluZWQoYSkpe2lmKCFjLmlzVW5kZWZpbmVkKG0pKXJldHVybiByKHZvaWQgMCxtLHMpfWVsc2UgcmV0dXJuIHIobSxhLHMpfWZ1bmN0aW9uIGkobSxhKXtpZighYy5pc1VuZGVmaW5lZChhKSlyZXR1cm4gcih2b2lkIDAsYSl9ZnVuY3Rpb24gbihtLGEpe2lmKGMuaXNVbmRlZmluZWQoYSkpe2lmKCFjLmlzVW5kZWZpbmVkKG0pKXJldHVybiByKHZvaWQgMCxtKX1lbHNlIHJldHVybiByKHZvaWQgMCxhKX1mdW5jdGlvbiBnKG0sYSxzKXtpZihzIGluIEEpcmV0dXJuIHIobSxhKTtpZihzIGluIGUpcmV0dXJuIHIodm9pZCAwLG0pfWxldCBmPXt1cmw6aSxtZXRob2Q6aSxkYXRhOmksYmFzZVVSTDpuLHRyYW5zZm9ybVJlcXVlc3Q6bix0cmFuc2Zvcm1SZXNwb25zZTpuLHBhcmFtc1NlcmlhbGl6ZXI6bix0aW1lb3V0Om4sdGltZW91dE1lc3NhZ2U6bix3aXRoQ3JlZGVudGlhbHM6bix3aXRoWFNSRlRva2VuOm4sYWRhcHRlcjpuLHJlc3BvbnNlVHlwZTpuLHhzcmZDb29raWVOYW1lOm4seHNyZkhlYWRlck5hbWU6bixvblVwbG9hZFByb2dyZXNzOm4sb25Eb3dubG9hZFByb2dyZXNzOm4sZGVjb21wcmVzczpuLG1heENvbnRlbnRMZW5ndGg6bixtYXhCb2R5TGVuZ3RoOm4sYmVmb3JlUmVkaXJlY3Q6bix0cmFuc3BvcnQ6bixodHRwQWdlbnQ6bixodHRwc0FnZW50Om4sY2FuY2VsVG9rZW46bixzb2NrZXRQYXRoOm4scmVzcG9uc2VFbmNvZGluZzpuLHZhbGlkYXRlU3RhdHVzOmcsaGVhZGVyczoobSxhKT0+byhfdChtKSxfdChhKSwhMCl9O3JldHVybiBjLmZvckVhY2goT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSxlLEEpKSxmdW5jdGlvbihhKXtsZXQgcz1mW2FdfHxvLHU9cyhlW2FdLEFbYV0sYSk7Yy5pc1VuZGVmaW5lZCh1KSYmcyE9PWd8fCh0W2FdPXUpfSksdH12YXIgRmU9IjEuNi4yIjt2YXIgc0E9e307WyJvYmplY3QiLCJib29sZWFuIiwibnVtYmVyIiwiZnVuY3Rpb24iLCJzdHJpbmciLCJzeW1ib2wiXS5mb3JFYWNoKChlLEEpPT57c0FbZV09ZnVuY3Rpb24ocil7cmV0dXJuIHR5cGVvZiByPT09ZXx8ImEiKyhBPDE/Im4gIjoiICIpK2V9fSk7dmFyIFp0PXt9O3NBLnRyYW5zaXRpb25hbD1mdW5jdGlvbihBLHQscil7ZnVuY3Rpb24gbyhpLG4pe3JldHVybiJbQXhpb3MgdiIrRmUrIl0gVHJhbnNpdGlvbmFsIG9wdGlvbiAnIitpKyInIituKyhyPyIuICIrcjoiIil9cmV0dXJuKGksbixnKT0+e2lmKEE9PT0hMSl0aHJvdyBuZXcgdyhvKG4sIiBoYXMgYmVlbiByZW1vdmVkIisodD8iIGluICIrdDoiIikpLHcuRVJSX0RFUFJFQ0FURUQpO3JldHVybiB0JiYhWnRbbl0mJihadFtuXT0hMCxjb25zb2xlLndhcm4obyhuLCIgaGFzIGJlZW4gZGVwcmVjYXRlZCBzaW5jZSB2Iit0KyIgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmVhciBmdXR1cmUiKSkpLEE/QShpLG4sZyk6ITB9fTtmdW5jdGlvbiBxaShlLEEsdCl7aWYodHlwZW9mIGUhPSJvYmplY3QiKXRocm93IG5ldyB3KCJvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0Iix3LkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtsZXQgcj1PYmplY3Qua2V5cyhlKSxvPXIubGVuZ3RoO2Zvcig7by0tID4wOyl7bGV0IGk9cltvXSxuPUFbaV07aWYobil7bGV0IGc9ZVtpXSxmPWc9PT12b2lkIDB8fG4oZyxpLGUpO2lmKGYhPT0hMCl0aHJvdyBuZXcgdygib3B0aW9uICIraSsiIG11c3QgYmUgIitmLHcuRVJSX0JBRF9PUFRJT05fVkFMVUUpO2NvbnRpbnVlfWlmKHQhPT0hMCl0aHJvdyBuZXcgdygiVW5rbm93biBvcHRpb24gIitpLHcuRVJSX0JBRF9PUFRJT04pfX12YXIgVWU9e2Fzc2VydE9wdGlvbnM6cWksdmFsaWRhdG9yczpzQX07dmFyIEg9VWUudmFsaWRhdG9ycyxaPWNsYXNze2NvbnN0cnVjdG9yKEEpe3RoaXMuZGVmYXVsdHM9QSx0aGlzLmludGVyY2VwdG9ycz17cmVxdWVzdDpuZXcgWmUscmVzcG9uc2U6bmV3IFplfX1yZXF1ZXN0KEEsdCl7dHlwZW9mIEE9PSJzdHJpbmciPyh0PXR8fHt9LHQudXJsPUEpOnQ9QXx8e30sdD1UKHRoaXMuZGVmYXVsdHMsdCk7bGV0e3RyYW5zaXRpb25hbDpyLHBhcmFtc1NlcmlhbGl6ZXI6byxoZWFkZXJzOml9PXQ7ciE9PXZvaWQgMCYmVWUuYXNzZXJ0T3B0aW9ucyhyLHtzaWxlbnRKU09OUGFyc2luZzpILnRyYW5zaXRpb25hbChILmJvb2xlYW4pLGZvcmNlZEpTT05QYXJzaW5nOkgudHJhbnNpdGlvbmFsKEguYm9vbGVhbiksY2xhcmlmeVRpbWVvdXRFcnJvcjpILnRyYW5zaXRpb25hbChILmJvb2xlYW4pfSwhMSksbyE9bnVsbCYmKGMuaXNGdW5jdGlvbihvKT90LnBhcmFtc1NlcmlhbGl6ZXI9e3NlcmlhbGl6ZTpvfTpVZS5hc3NlcnRPcHRpb25zKG8se2VuY29kZTpILmZ1bmN0aW9uLHNlcmlhbGl6ZTpILmZ1bmN0aW9ufSwhMCkpLHQubWV0aG9kPSh0Lm1ldGhvZHx8dGhpcy5kZWZhdWx0cy5tZXRob2R8fCJnZXQiKS50b0xvd2VyQ2FzZSgpO2xldCBuPWkmJmMubWVyZ2UoaS5jb21tb24saVt0Lm1ldGhvZF0pO2kmJmMuZm9yRWFjaChbImRlbGV0ZSIsImdldCIsImhlYWQiLCJwb3N0IiwicHV0IiwicGF0Y2giLCJjb21tb24iXSxwPT57ZGVsZXRlIGlbcF19KSx0LmhlYWRlcnM9Ri5jb25jYXQobixpKTtsZXQgZz1bXSxmPSEwO3RoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbihCKXt0eXBlb2YgQi5ydW5XaGVuPT0iZnVuY3Rpb24iJiZCLnJ1bldoZW4odCk9PT0hMXx8KGY9ZiYmQi5zeW5jaHJvbm91cyxnLnVuc2hpZnQoQi5mdWxmaWxsZWQsQi5yZWplY3RlZCkpfSk7bGV0IG09W107dGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbihCKXttLnB1c2goQi5mdWxmaWxsZWQsQi5yZWplY3RlZCl9KTtsZXQgYSxzPTAsdTtpZighZil7bGV0IHA9W1dlLmJpbmQodGhpcyksdm9pZCAwXTtmb3IocC51bnNoaWZ0LmFwcGx5KHAsZykscC5wdXNoLmFwcGx5KHAsbSksdT1wLmxlbmd0aCxhPVByb21pc2UucmVzb2x2ZSh0KTtzPHU7KWE9YS50aGVuKHBbcysrXSxwW3MrK10pO3JldHVybiBhfXU9Zy5sZW5ndGg7bGV0IEk9dDtmb3Iocz0wO3M8dTspe2xldCBwPWdbcysrXSxCPWdbcysrXTt0cnl7ST1wKEkpfWNhdGNoKFEpe0IuY2FsbCh0aGlzLFEpO2JyZWFrfX10cnl7YT1XZS5jYWxsKHRoaXMsSSl9Y2F0Y2gocCl7cmV0dXJuIFByb21pc2UucmVqZWN0KHApfWZvcihzPTAsdT1tLmxlbmd0aDtzPHU7KWE9YS50aGVuKG1bcysrXSxtW3MrK10pO3JldHVybiBhfWdldFVyaShBKXtBPVQodGhpcy5kZWZhdWx0cyxBKTtsZXQgdD1nZShBLmJhc2VVUkwsQS51cmwpO3JldHVybiBhZSh0LEEucGFyYW1zLEEucGFyYW1zU2VyaWFsaXplcil9fTtjLmZvckVhY2goWyJkZWxldGUiLCJnZXQiLCJoZWFkIiwib3B0aW9ucyJdLGZ1bmN0aW9uKEEpe1oucHJvdG90eXBlW0FdPWZ1bmN0aW9uKHQscil7cmV0dXJuIHRoaXMucmVxdWVzdChUKHJ8fHt9LHttZXRob2Q6QSx1cmw6dCxkYXRhOihyfHx7fSkuZGF0YX0pKX19KTtjLmZvckVhY2goWyJwb3N0IiwicHV0IiwicGF0Y2giXSxmdW5jdGlvbihBKXtmdW5jdGlvbiB0KHIpe3JldHVybiBmdW5jdGlvbihpLG4sZyl7cmV0dXJuIHRoaXMucmVxdWVzdChUKGd8fHt9LHttZXRob2Q6QSxoZWFkZXJzOnI/eyJDb250ZW50LVR5cGUiOiJtdWx0aXBhcnQvZm9ybS1kYXRhIn06e30sdXJsOmksZGF0YTpufSkpfX1aLnByb3RvdHlwZVtBXT10KCksWi5wcm90b3R5cGVbQSsiRm9ybSJdPXQoITApfSk7dmFyIGxlPVo7dmFyIElBPWNsYXNzIGV7Y29uc3RydWN0b3IoQSl7aWYodHlwZW9mIEEhPSJmdW5jdGlvbiIpdGhyb3cgbmV3IFR5cGVFcnJvcigiZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLiIpO2xldCB0O3RoaXMucHJvbWlzZT1uZXcgUHJvbWlzZShmdW5jdGlvbihpKXt0PWl9KTtsZXQgcj10aGlzO3RoaXMucHJvbWlzZS50aGVuKG89PntpZighci5fbGlzdGVuZXJzKXJldHVybjtsZXQgaT1yLl9saXN0ZW5lcnMubGVuZ3RoO2Zvcig7aS0tID4wOylyLl9saXN0ZW5lcnNbaV0obyk7ci5fbGlzdGVuZXJzPW51bGx9KSx0aGlzLnByb21pc2UudGhlbj1vPT57bGV0IGksbj1uZXcgUHJvbWlzZShnPT57ci5zdWJzY3JpYmUoZyksaT1nfSkudGhlbihvKTtyZXR1cm4gbi5jYW5jZWw9ZnVuY3Rpb24oKXtyLnVuc3Vic2NyaWJlKGkpfSxufSxBKGZ1bmN0aW9uKGksbixnKXtyLnJlYXNvbnx8KHIucmVhc29uPW5ldyBNKGksbixnKSx0KHIucmVhc29uKSl9KX10aHJvd0lmUmVxdWVzdGVkKCl7aWYodGhpcy5yZWFzb24pdGhyb3cgdGhpcy5yZWFzb259c3Vic2NyaWJlKEEpe2lmKHRoaXMucmVhc29uKXtBKHRoaXMucmVhc29uKTtyZXR1cm59dGhpcy5fbGlzdGVuZXJzP3RoaXMuX2xpc3RlbmVycy5wdXNoKEEpOnRoaXMuX2xpc3RlbmVycz1bQV19dW5zdWJzY3JpYmUoQSl7aWYoIXRoaXMuX2xpc3RlbmVycylyZXR1cm47bGV0IHQ9dGhpcy5fbGlzdGVuZXJzLmluZGV4T2YoQSk7dCE9PS0xJiZ0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKHQsMSl9c3RhdGljIHNvdXJjZSgpe2xldCBBO3JldHVybnt0b2tlbjpuZXcgZShmdW5jdGlvbihvKXtBPW99KSxjYW5jZWw6QX19fSxYdD1JQTtmdW5jdGlvbiBnQShlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUuYXBwbHkobnVsbCx0KX19ZnVuY3Rpb24gbEEoZSl7cmV0dXJuIGMuaXNPYmplY3QoZSkmJmUuaXNBeGlvc0Vycm9yPT09ITB9dmFyIHBBPXtDb250aW51ZToxMDAsU3dpdGNoaW5nUHJvdG9jb2xzOjEwMSxQcm9jZXNzaW5nOjEwMixFYXJseUhpbnRzOjEwMyxPazoyMDAsQ3JlYXRlZDoyMDEsQWNjZXB0ZWQ6MjAyLE5vbkF1dGhvcml0YXRpdmVJbmZvcm1hdGlvbjoyMDMsTm9Db250ZW50OjIwNCxSZXNldENvbnRlbnQ6MjA1LFBhcnRpYWxDb250ZW50OjIwNixNdWx0aVN0YXR1czoyMDcsQWxyZWFkeVJlcG9ydGVkOjIwOCxJbVVzZWQ6MjI2LE11bHRpcGxlQ2hvaWNlczozMDAsTW92ZWRQZXJtYW5lbnRseTozMDEsRm91bmQ6MzAyLFNlZU90aGVyOjMwMyxOb3RNb2RpZmllZDozMDQsVXNlUHJveHk6MzA1LFVudXNlZDozMDYsVGVtcG9yYXJ5UmVkaXJlY3Q6MzA3LFBlcm1hbmVudFJlZGlyZWN0OjMwOCxCYWRSZXF1ZXN0OjQwMCxVbmF1dGhvcml6ZWQ6NDAxLFBheW1lbnRSZXF1aXJlZDo0MDIsRm9yYmlkZGVuOjQwMyxOb3RGb3VuZDo0MDQsTWV0aG9kTm90QWxsb3dlZDo0MDUsTm90QWNjZXB0YWJsZTo0MDYsUHJveHlBdXRoZW50aWNhdGlvblJlcXVpcmVkOjQwNyxSZXF1ZXN0VGltZW91dDo0MDgsQ29uZmxpY3Q6NDA5LEdvbmU6NDEwLExlbmd0aFJlcXVpcmVkOjQxMSxQcmVjb25kaXRpb25GYWlsZWQ6NDEyLFBheWxvYWRUb29MYXJnZTo0MTMsVXJpVG9vTG9uZzo0MTQsVW5zdXBwb3J0ZWRNZWRpYVR5cGU6NDE1LFJhbmdlTm90U2F0aXNmaWFibGU6NDE2LEV4cGVjdGF0aW9uRmFpbGVkOjQxNyxJbUFUZWFwb3Q6NDE4LE1pc2RpcmVjdGVkUmVxdWVzdDo0MjEsVW5wcm9jZXNzYWJsZUVudGl0eTo0MjIsTG9ja2VkOjQyMyxGYWlsZWREZXBlbmRlbmN5OjQyNCxUb29FYXJseTo0MjUsVXBncmFkZVJlcXVpcmVkOjQyNixQcmVjb25kaXRpb25SZXF1aXJlZDo0MjgsVG9vTWFueVJlcXVlc3RzOjQyOSxSZXF1ZXN0SGVhZGVyRmllbGRzVG9vTGFyZ2U6NDMxLFVuYXZhaWxhYmxlRm9yTGVnYWxSZWFzb25zOjQ1MSxJbnRlcm5hbFNlcnZlckVycm9yOjUwMCxOb3RJbXBsZW1lbnRlZDo1MDEsQmFkR2F0ZXdheTo1MDIsU2VydmljZVVuYXZhaWxhYmxlOjUwMyxHYXRld2F5VGltZW91dDo1MDQsSHR0cFZlcnNpb25Ob3RTdXBwb3J0ZWQ6NTA1LFZhcmlhbnRBbHNvTmVnb3RpYXRlczo1MDYsSW5zdWZmaWNpZW50U3RvcmFnZTo1MDcsTG9vcERldGVjdGVkOjUwOCxOb3RFeHRlbmRlZDo1MTAsTmV0d29ya0F1dGhlbnRpY2F0aW9uUmVxdWlyZWQ6NTExfTtPYmplY3QuZW50cmllcyhwQSkuZm9yRWFjaCgoW2UsQV0pPT57cEFbQV09ZX0pO3ZhciAkdD1wQTtmdW5jdGlvbiBlcihlKXtsZXQgQT1uZXcgbGUoZSksdD1yZShsZS5wcm90b3R5cGUucmVxdWVzdCxBKTtyZXR1cm4gYy5leHRlbmQodCxsZS5wcm90b3R5cGUsQSx7YWxsT3duS2V5czohMH0pLGMuZXh0ZW5kKHQsQSxudWxsLHthbGxPd25LZXlzOiEwfSksdC5jcmVhdGU9ZnVuY3Rpb24obyl7cmV0dXJuIGVyKFQoZSxvKSl9LHR9dmFyIGs9ZXIoVik7ay5BeGlvcz1sZTtrLkNhbmNlbGVkRXJyb3I9TTtrLkNhbmNlbFRva2VuPVh0O2suaXNDYW5jZWw9SWU7ay5WRVJTSU9OPUZlO2sudG9Gb3JtRGF0YT1MO2suQXhpb3NFcnJvcj13O2suQ2FuY2VsPWsuQ2FuY2VsZWRFcnJvcjtrLmFsbD1mdW5jdGlvbihBKXtyZXR1cm4gUHJvbWlzZS5hbGwoQSl9O2suc3ByZWFkPWdBO2suaXNBeGlvc0Vycm9yPWxBO2subWVyZ2VDb25maWc9VDtrLkF4aW9zSGVhZGVycz1GO2suZm9ybVRvSlNPTj1lPT5rZShjLmlzSFRNTEZvcm0oZSk/bmV3IEZvcm1EYXRhKGUpOmUpO2suZ2V0QWRhcHRlcj1EZS5nZXRBZGFwdGVyO2suSHR0cFN0YXR1c0NvZGU9JHQ7ay5kZWZhdWx0PWs7dmFyIEc9azt2YXJ7QXhpb3M6eEksQXhpb3NFcnJvcjpHSSxDYW5jZWxlZEVycm9yOlRJLGlzQ2FuY2VsOkpJLENhbmNlbFRva2VuOkxJLFZFUlNJT046TUksYWxsOkhJLENhbmNlbDpZSSxpc0F4aW9zRXJyb3I6cUksc3ByZWFkOktJLHRvRm9ybURhdGE6akksQXhpb3NIZWFkZXJzOnZJLEh0dHBTdGF0dXNDb2RlOnpJLGZvcm1Ub0pTT046VkksZ2V0QWRhcHRlcjpfSSxtZXJnZUNvbmZpZzpaSX09Rzthc3luYyBmdW5jdGlvbiBLaShlLEEpe2xldCB0PWUscj1udWxsO2lmKHQ9PW51bGwpcj1uZXcgV29ya2VyKG5ldyBVUkwoIi4vd2ViLXdvcmtlcnMvaXRrLXdhc20tcGlwZWxpbmUud29ya2VyLmpzIixpbXBvcnQubWV0YS51cmwpLHt0eXBlOiJtb2R1bGUifSk7ZWxzZSBpZih0LnN0YXJ0c1dpdGgoImh0dHAiKSl7bGV0IG89YXdhaXQgRy5nZXQodCx7cmVzcG9uc2VUeXBlOiJibG9iIixwYXJhbXM6QX0pLGk9VVJMLmNyZWF0ZU9iamVjdFVSTChvLmRhdGEpO3I9bmV3IFdvcmtlcihpLHt0eXBlOiJtb2R1bGUifSl9ZWxzZSByPW5ldyBXb3JrZXIodCx7dHlwZToibW9kdWxlIn0pO3JldHVybiByfXZhciBwZT1LaTtmdW5jdGlvbiBBcihlKXtsZXQgQT1xZShlKSx0PWU7cmV0dXJuIHQudGVybWluYXRlZD0hMSx0LndvcmtlclByb3h5PUEsdC5vcmlnaW5hbFRlcm1pbmF0ZT10LnRlcm1pbmF0ZSx0LnRlcm1pbmF0ZT0oKT0+e3QudGVybWluYXRlZD0hMCx0LndvcmtlclByb3h5W1llXSgpLHQub3JpZ2luYWxUZXJtaW5hdGUoKX0se3dvcmtlclByb3h5OkEsd29ya2VyOnR9fWFzeW5jIGZ1bmN0aW9uIGppKGUsQSx0KXtsZXQgcjtpZihlIT1udWxsKXtsZXQgaT1lO3JldHVybiBpLndvcmtlclByb3h5IT09dm9pZCAwPyhyPWkud29ya2VyUHJveHkse3dvcmtlclByb3h5OnIsd29ya2VyOml9KTpBcihlKX1sZXQgbz1hd2FpdCBwZShBLHQpO3JldHVybiBBcihvKX12YXIgdHI9amk7YXN5bmMgZnVuY3Rpb24gdmkoZSxBLHQpe2xldCByPSJ1bmtub3duIjt0eXBlb2YgZSE9InN0cmluZyI/cj1lLmhyZWY6ZS5zdGFydHNXaXRoKCJodHRwIik/cj1lOnI9dHlwZW9mIEE8InUiP2Ake0F9LyR7ZX1gOmUsci5lbmRzV2l0aCgiLmpzIikmJihyPXIuc3Vic3RyaW5nKDAsci5sZW5ndGgtMykpLHIuZW5kc1dpdGgoIi53YXNtIikmJihyPXIuc3Vic3RyaW5nKDAsci5sZW5ndGgtNSkpO2xldCBvPWAke3J9Lndhc21gLG49KGF3YWl0IEcuZ2V0KG8se3Jlc3BvbnNlVHlwZToiYXJyYXlidWZmZXIiLHBhcmFtczp0fSkpLmRhdGE7cmV0dXJuKGF3YWl0IGltcG9ydChgJHtyfS5qc2ApKS5kZWZhdWx0KHt3YXNtQmluYXJ5Om59KX12YXIgcnI9dmk7dmFyIGlyPWFzeW5jKCk9PldlYkFzc2VtYmx5LnZhbGlkYXRlKG5ldyBVaW50OEFycmF5KFswLDk3LDExNSwxMDksMSwwLDAsMCwxLDUsMSw5NiwwLDEsMTIzLDMsMiwxLDAsMTAsMTAsMSw4LDAsNjUsMCwyNTMsMTUsMjUzLDk4LDExXSkpO3ZhciBucj10eXBlb2YgZ2xvYmFsVGhpcy5TaGFyZWRBcnJheUJ1ZmZlcj09ImZ1bmN0aW9uIixvcj1uZXcgVGV4dEVuY29kZXIsYXI9bmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpO2Z1bmN0aW9uIHppKGUsQSl7bGV0IHQ9e2ZsYWdzOiJyIixlbmNvZGluZzoiYmluYXJ5In0scj1lLmZzX29wZW4oQSx0LmZsYWdzKSxpPWUuZnNfc3RhdChBKS5zaXplLG49bnVsbDtucj9uPW5ldyBTaGFyZWRBcnJheUJ1ZmZlcihpKTpuPW5ldyBBcnJheUJ1ZmZlcihpKTtsZXQgZz1uZXcgVWludDhBcnJheShuKTtyZXR1cm4gZS5mc19yZWFkKHIsZywwLGksMCksZS5mc19jbG9zZShyKSxnfWZ1bmN0aW9uIHNyKGUsQSx0KXtsZXQgcj1udWxsO25yP3I9bmV3IFNoYXJlZEFycmF5QnVmZmVyKHQpOnI9bmV3IEFycmF5QnVmZmVyKHQpO2xldCBvPW5ldyBVaW50OEFycmF5KHIpLGk9bmV3IFVpbnQ4QXJyYXkoZS5IRUFQVTguYnVmZmVyLEEsdCk7cmV0dXJuIG8uc2V0KGkpLG99ZnVuY3Rpb24gRChlLEEsdCxyKXtsZXQgbz0wO3JldHVybiBBIT09bnVsbCYmKG89ZS5jY2FsbCgiaXRrX3dhc21faW5wdXRfYXJyYXlfYWxsb2MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsdCxyLEEuYnVmZmVyLmJ5dGVMZW5ndGhdKSxlLkhFQVBVOC5zZXQobmV3IFVpbnQ4QXJyYXkoQS5idWZmZXIpLG8pKSxvfWZ1bmN0aW9uIFgoZSxBLHQpe2xldCByPUpTT04uc3RyaW5naWZ5KEEpLG89ZS5jY2FsbCgiaXRrX3dhc21faW5wdXRfanNvbl9hbGxvYyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCx0LHIubGVuZ3RoXSk7ZS53cml0ZUFzY2lpVG9NZW1vcnkocixvLCExKX1mdW5jdGlvbiBVKGUsQSx0LHIpe2xldCBvPWUuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9hZGRyZXNzIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLEEsdF0pLGk9ZS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X3NpemUiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsQSx0XSksbj1zcihlLG8saSk7cmV0dXJuIFMocixuLmJ1ZmZlcil9ZnVuY3Rpb24gbUEoZSxBKXtsZXQgdD1lLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfanNvbl9hZGRyZXNzIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciJdLFswLEFdKSxyPWUuQXNjaWlUb1N0cmluZyh0KTtyZXR1cm4gSlNPTi5wYXJzZShyKX1mdW5jdGlvbiBWaShlLEEsdCxyKXtyIT1udWxsJiZyLmxlbmd0aD4wJiZyLmZvckVhY2goZnVuY3Rpb24obSxhKXtzd2l0Y2gobS50eXBlKXtjYXNlIGwuVGV4dFN0cmVhbTp7bGV0IHM9b3IuZW5jb2RlKG0uZGF0YS5kYXRhKSx1PUQoZSxzLGEsMCksST17c2l6ZTpzLmJ1ZmZlci5ieXRlTGVuZ3RoLGRhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHt1fWB9O1goZSxJLGEpO2JyZWFrfWNhc2UgbC5Kc29uQ29tcGF0aWJsZTp7bGV0IHM9b3IuZW5jb2RlKEpTT04uc3RyaW5naWZ5KG0uZGF0YSkpLHU9RChlLHMsYSwwKSxJPXtzaXplOnMuYnVmZmVyLmJ5dGVMZW5ndGgsZGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke3V9YH07WChlLEksYSk7YnJlYWt9Y2FzZSBsLkJpbmFyeVN0cmVhbTp7bGV0IHM9bS5kYXRhLmRhdGEsdT1EKGUscyxhLDApLEk9e3NpemU6cy5idWZmZXIuYnl0ZUxlbmd0aCxkYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7dX1gfTtYKGUsSSxhKTticmVha31jYXNlIGwuVGV4dEZpbGU6e2UuZnNfd3JpdGVGaWxlKG0uZGF0YS5wYXRoLG0uZGF0YS5kYXRhKTticmVha31jYXNlIGwuQmluYXJ5RmlsZTp7ZS5mc193cml0ZUZpbGUobS5kYXRhLnBhdGgsbS5kYXRhLmRhdGEpO2JyZWFrfWNhc2UgbC5JbWFnZTp7bGV0IHM9bS5kYXRhLHU9RChlLHMuZGF0YSxhLDApLEk9RChlLHMuZGlyZWN0aW9uLGEsMSkscD10eXBlb2Ygcy5tZXRhZGF0YT8uZW50cmllczwidSI/SlNPTi5zdHJpbmdpZnkoQXJyYXkuZnJvbShzLm1ldGFkYXRhLmVudHJpZXMoKSkpOiJbXSIsQj17aW1hZ2VUeXBlOnMuaW1hZ2VUeXBlLG5hbWU6cy5uYW1lLG9yaWdpbjpzLm9yaWdpbixzcGFjaW5nOnMuc3BhY2luZyxkaXJlY3Rpb246YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtJfWAsc2l6ZTpzLnNpemUsZGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke3V9YCxtZXRhZGF0YTpwfTtYKGUsQixhKTticmVha31jYXNlIGwuTWVzaDp7bGV0IHM9bS5kYXRhLHU9RChlLHMucG9pbnRzLGEsMCksST1EKGUscy5jZWxscyxhLDEpLHA9RChlLHMucG9pbnREYXRhLGEsMiksQj1EKGUscy5jZWxsRGF0YSxhLDMpLFE9e21lc2hUeXBlOnMubWVzaFR5cGUsbmFtZTpzLm5hbWUsbnVtYmVyT2ZQb2ludHM6cy5udW1iZXJPZlBvaW50cyxwb2ludHM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHt1fWAsbnVtYmVyT2ZDZWxsczpzLm51bWJlck9mQ2VsbHMsY2VsbHM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtJfWAsY2VsbEJ1ZmZlclNpemU6cy5jZWxsQnVmZmVyU2l6ZSxudW1iZXJPZlBvaW50UGl4ZWxzOnMubnVtYmVyT2ZQb2ludFBpeGVscyxwb2ludERhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtwfWAsbnVtYmVyT2ZDZWxsUGl4ZWxzOnMubnVtYmVyT2ZDZWxsUGl4ZWxzLGNlbGxEYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Qn1gfTtYKGUsUSxhKTticmVha31jYXNlIGwuUG9seURhdGE6e2xldCBzPW0uZGF0YSx1PUQoZSxzLnBvaW50cyxhLDApLEk9RChlLHMudmVydGljZXMsYSwxKSxwPUQoZSxzLmxpbmVzLGEsMiksQj1EKGUscy5wb2x5Z29ucyxhLDMpLFE9RChlLHMudHJpYW5nbGVTdHJpcHMsYSw0KSxSPUQoZSxzLnBvaW50RGF0YSxhLDUpLE49RChlLHMucG9pbnREYXRhLGEsNiksUD17cG9seURhdGFUeXBlOnMucG9seURhdGFUeXBlLG5hbWU6cy5uYW1lLG51bWJlck9mUG9pbnRzOnMubnVtYmVyT2ZQb2ludHMscG9pbnRzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7dX1gLHZlcnRpY2VzQnVmZmVyU2l6ZTpzLnZlcnRpY2VzQnVmZmVyU2l6ZSx2ZXJ0aWNlczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke0l9YCxsaW5lc0J1ZmZlclNpemU6cy5saW5lc0J1ZmZlclNpemUsbGluZXM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtwfWAscG9seWdvbnNCdWZmZXJTaXplOnMucG9seWdvbnNCdWZmZXJTaXplLHBvbHlnb25zOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Qn1gLHRyaWFuZ2xlU3RyaXBzQnVmZmVyU2l6ZTpzLnRyaWFuZ2xlU3RyaXBzQnVmZmVyU2l6ZSx0cmlhbmdsZVN0cmlwczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke1F9YCxudW1iZXJPZlBvaW50UGl4ZWxzOnMubnVtYmVyT2ZQb2ludFBpeGVscyxwb2ludERhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtSfWAsbnVtYmVyT2ZDZWxsUGl4ZWxzOnMubnVtYmVyT2ZDZWxsUGl4ZWxzLGNlbGxEYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Tn1gfTtYKGUsUCxhKTticmVha31kZWZhdWx0OnRocm93IEVycm9yKCJVbnN1cHBvcnRlZCBpbnB1dCBJbnRlcmZhY2VUeXBlIil9fSksZS5yZXNldE1vZHVsZVN0ZG91dCgpLGUucmVzZXRNb2R1bGVTdGRlcnIoKTtsZXQgbz1lLnN0YWNrU2F2ZSgpLGk9MDt0cnl7aT1lLmNhbGxNYWluKEEuc2xpY2UoKSl9Y2F0Y2gobSl7dGhyb3cgdHlwZW9mIG09PSJudW1iZXIiJiYoY29uc29sZS5sb2coIkV4Y2VwdGlvbiB3aGlsZSBydW5uaW5nIHBpcGVsaW5lOiIpLGNvbnNvbGUubG9nKCJzdGRvdXQ6IixlLmdldE1vZHVsZVN0ZG91dCgpKSxjb25zb2xlLmVycm9yKCJzdGRlcnI6IixlLmdldE1vZHVsZVN0ZGVycigpKSx0eXBlb2YgZS5nZXRFeGNlcHRpb25NZXNzYWdlPCJ1Ij9jb25zb2xlLmVycm9yKCJleGNlcHRpb246IixlLmdldEV4Y2VwdGlvbk1lc3NhZ2UobSkpOmNvbnNvbGUuZXJyb3IoIkJ1aWxkIG1vZHVsZSBpbiBEZWJ1ZyBtb2RlIGZvciBleGNlcHRpb24gbWVzc2FnZSBpbmZvcm1hdGlvbi4iKSksbX1maW5hbGx5e2Uuc3RhY2tSZXN0b3JlKG8pfWxldCBuPWUuZ2V0TW9kdWxlU3Rkb3V0KCksZz1lLmdldE1vZHVsZVN0ZGVycigpLGY9W107cmV0dXJuIHQhPW51bGwmJnQubGVuZ3RoPjAmJmk9PT0wJiZ0LmZvckVhY2goZnVuY3Rpb24obSxhKXtsZXQgcz1udWxsO3N3aXRjaChtLnR5cGUpe2Nhc2UgbC5UZXh0U3RyZWFtOntsZXQgST1lLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfYWRkcmVzcyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxhLDBdKSxwPWUuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9zaXplIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLGEsMF0pLEI9bmV3IFVpbnQ4QXJyYXkoZS5IRUFQVTguYnVmZmVyLEkscCk7cz17ZGF0YTphci5kZWNvZGUoQil9O2JyZWFrfWNhc2UgbC5Kc29uQ29tcGF0aWJsZTp7bGV0IEk9ZS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsYSwwXSkscD1lLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfc2l6ZSIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxhLDBdKSxCPW5ldyBVaW50OEFycmF5KGUuSEVBUFU4LmJ1ZmZlcixJLHApO3M9SlNPTi5wYXJzZShhci5kZWNvZGUoQikpO2JyZWFrfWNhc2UgbC5CaW5hcnlTdHJlYW06e2xldCBJPWUuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9hZGRyZXNzIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLGEsMF0pLHA9ZS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X3NpemUiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsYSwwXSk7cz17ZGF0YTpzcihlLEkscCl9O2JyZWFrfWNhc2UgbC5UZXh0RmlsZTp7cz17cGF0aDptLmRhdGEucGF0aCxkYXRhOmUuZnNfcmVhZEZpbGUobS5kYXRhLnBhdGgse2VuY29kaW5nOiJ1dGY4In0pfTticmVha31jYXNlIGwuQmluYXJ5RmlsZTp7cz17cGF0aDptLmRhdGEucGF0aCxkYXRhOnppKGUsbS5kYXRhLnBhdGgpfTticmVha31jYXNlIGwuSW1hZ2U6e2xldCBJPW1BKGUsYSk7SS5kYXRhPVUoZSxhLDAsSS5pbWFnZVR5cGUuY29tcG9uZW50VHlwZSksSS5kaXJlY3Rpb249VShlLGEsMSxiLkZsb2F0NjQpLEkubWV0YWRhdGE9bmV3IE1hcChJLm1ldGFkYXRhKSxzPUk7YnJlYWt9Y2FzZSBsLk1lc2g6e2xldCBJPW1BKGUsYSk7SS5udW1iZXJPZlBvaW50cz4wP0kucG9pbnRzPVUoZSxhLDAsSS5tZXNoVHlwZS5wb2ludENvbXBvbmVudFR5cGUpOkkucG9pbnRzPVMoSS5tZXNoVHlwZS5wb2ludENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxJLm51bWJlck9mQ2VsbHM+MD9JLmNlbGxzPVUoZSxhLDEsSS5tZXNoVHlwZS5jZWxsQ29tcG9uZW50VHlwZSk6SS5jZWxscz1TKEkubWVzaFR5cGUuY2VsbENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxJLm51bWJlck9mUG9pbnRQaXhlbHM+MD9JLnBvaW50RGF0YT1VKGUsYSwyLEkubWVzaFR5cGUucG9pbnRQaXhlbENvbXBvbmVudFR5cGUpOkkucG9pbnREYXRhPVMoSS5tZXNoVHlwZS5wb2ludFBpeGVsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLEkubnVtYmVyT2ZDZWxsUGl4ZWxzPjA/SS5jZWxsRGF0YT1VKGUsYSwzLEkubWVzaFR5cGUuY2VsbFBpeGVsQ29tcG9uZW50VHlwZSk6SS5jZWxsRGF0YT1TKEkubWVzaFR5cGUuY2VsbFBpeGVsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLHM9STticmVha31jYXNlIGwuUG9seURhdGE6e2xldCBJPW1BKGUsYSk7SS5udW1iZXJPZlBvaW50cz4wP0kucG9pbnRzPVUoZSxhLDAsYi5GbG9hdDMyKTpJLnBvaW50cz1uZXcgRmxvYXQzMkFycmF5LEkudmVydGljZXNCdWZmZXJTaXplPjA/SS52ZXJ0aWNlcz1VKGUsYSwxLGguVUludDMyKTpJLnZlcnRpY2VzPW5ldyBVaW50MzJBcnJheSxJLmxpbmVzQnVmZmVyU2l6ZT4wP0kubGluZXM9VShlLGEsMixoLlVJbnQzMik6SS5saW5lcz1uZXcgVWludDMyQXJyYXksSS5wb2x5Z29uc0J1ZmZlclNpemU+MD9JLnBvbHlnb25zPVUoZSxhLDMsaC5VSW50MzIpOkkucG9seWdvbnM9bmV3IFVpbnQzMkFycmF5LEkudHJpYW5nbGVTdHJpcHNCdWZmZXJTaXplPjA/SS50cmlhbmdsZVN0cmlwcz1VKGUsYSw0LGguVUludDMyKTpJLnRyaWFuZ2xlU3RyaXBzPW5ldyBVaW50MzJBcnJheSxJLm51bWJlck9mUG9pbnRQaXhlbHM+MD9JLnBvaW50RGF0YT1VKGUsYSw1LEkucG9seURhdGFUeXBlLnBvaW50UGl4ZWxDb21wb25lbnRUeXBlKTpJLnBvaW50RGF0YT1TKEkucG9seURhdGFUeXBlLnBvaW50UGl4ZWxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksSS5udW1iZXJPZkNlbGxQaXhlbHM+MD9JLmNlbGxEYXRhPVUoZSxhLDYsSS5wb2x5RGF0YVR5cGUuY2VsbFBpeGVsQ29tcG9uZW50VHlwZSk6SS5jZWxsRGF0YT1TKEkucG9seURhdGFUeXBlLmNlbGxQaXhlbENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxzPUk7YnJlYWt9ZGVmYXVsdDp0aHJvdyBFcnJvcigiVW5zdXBwb3J0ZWQgb3V0cHV0IEludGVyZmFjZVR5cGUiKX1sZXQgdT17dHlwZTptLnR5cGUsZGF0YTpzfTtmLnB1c2godSl9KSx7cmV0dXJuVmFsdWU6aSxzdGRvdXQ6bixzdGRlcnI6ZyxvdXRwdXRzOmZ9fXZhciBJcj1WaTt2YXIgX2k9dHlwZW9mIGdsb2JhbFRoaXMuU2hhcmVkQXJyYXlCdWZmZXI8InUiO2Z1bmN0aW9uIFppKGUsQSl7aWYoZT09bnVsbClyZXR1cm5bXTtsZXQgdD1bXTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKyl7bGV0IG89WGkoZVtyXSxBKTtvIT09bnVsbCYmdC5wdXNoKG8pfXJldHVybiB0fWZ1bmN0aW9uIFhpKGUsQSl7aWYoZT09bnVsbClyZXR1cm4gbnVsbDtsZXQgdD1udWxsO3JldHVybiBlLmJ1ZmZlciE9PXZvaWQgMD90PWUuYnVmZmVyOmUuYnl0ZUxlbmd0aCE9PXZvaWQgMCYmKHQ9ZSksX2kmJnQgaW5zdGFuY2VvZiBTaGFyZWRBcnJheUJ1ZmZlcj9udWxsOkE/dDp0LnNsaWNlKDApfXZhciBncj1aaTtmdW5jdGlvbiAkaShlKXtyZXR1cm5bZS5kYXRhLGUuZGlyZWN0aW9uXX12YXIgbHI9JGk7ZnVuY3Rpb24gZW8oZSl7cmV0dXJuW2UucG9pbnRzLGUucG9pbnREYXRhLGUuY2VsbHMsZS5jZWxsRGF0YV19dmFyIHByPWVvO2Z1bmN0aW9uIEFvKGUpe3JldHVybltlLnBvaW50cyxlLnZlcnRpY2VzLGUubGluZXMsZS5wb2x5Z29ucyxlLnRyaWFuZ2xlU3RyaXBzLGUucG9pbnREYXRhLGUuY2VsbERhdGFdfXZhciBtcj1Bbzt2YXIgdG87ZnVuY3Rpb24gU2UoKXtyZXR1cm4gdG99dmFyIHJvO2Z1bmN0aW9uIHVyKCl7cmV0dXJuIHJvfXZhciBpbztmdW5jdGlvbiBPZSgpe3JldHVybiBpb312YXIgdUE9bmV3IE1hcDtmdW5jdGlvbiBvbygpe2xldCBlPU9lKCk7cmV0dXJuIHR5cGVvZiBlPiJ1IiYmKGU9bnVsbCksZX1mdW5jdGlvbiBmcigpe2xldCBlPVNlKCk7cmV0dXJuIHR5cGVvZiBlPiJ1IiYmKGU9bmV3IFVSTCgiL3BpcGVsaW5lcyIsZG9jdW1lbnQubG9jYXRpb24ub3JpZ2luKS5ocmVmKSxlfWZ1bmN0aW9uIE5lKCl7bGV0IGU9dXIoKTtyZXR1cm4gdHlwZW9mIGU+InUiJiYoZT17fSksZX1hc3luYyBmdW5jdGlvbiBhbyhlLEEsdCl7bGV0IHI9ZSxvPWU7aWYodHlwZW9mIGUhPSJzdHJpbmciJiYocj1uZXcgVVJMKGUuaHJlZiksbz1yLmhyZWYpLHVBLmhhcyhvKSlyZXR1cm4gdUEuZ2V0KG8pO3tsZXQgaT1hd2FpdCBycihlLEE/LnRvU3RyaW5nKCk/P2ZyKCksdD8/TmUoKSk7cmV0dXJuIHVBLnNldChvLGkpLGl9fWFzeW5jIGZ1bmN0aW9uIG5vKGUsQSx0LHIsbyl7aWYoIWF3YWl0IGlyKCkpe2xldCBRPSJXZWJBc3NlbWJseSBTSU1EIHN1cHBvcnQgaXMgcmVxdWlyZWQgLS0gcGxlYXNlIHVwZGF0ZSB5b3VyIGJyb3dzZXIuIjt0aHJvdyBhbGVydChRKSxuZXcgRXJyb3IoUSl9bGV0IGk9bz8ud2ViV29ya2VyPz9udWxsO2lmKGk9PT0hMSl7bGV0IFE9YXdhaXQgYW8oZS50b1N0cmluZygpLG8/LnBpcGVsaW5lQmFzZVVybCxvPy5waXBlbGluZVF1ZXJ5UGFyYW1zPz9OZSgpKTtyZXR1cm4gSXIoUSxBLHQscil9bGV0IG49aSxnPW8/LnBpcGVsaW5lV29ya2VyVXJsPz9vbygpLGY9dHlwZW9mIGchPSJzdHJpbmciJiZ0eXBlb2YgZz8uaHJlZjwidSI/Zy5ocmVmOmcse3dvcmtlclByb3h5Om0sd29ya2VyOmF9PWF3YWl0IHRyKG4sZixvPy5waXBlbGluZVF1ZXJ5UGFyYW1zPz9OZSgpKTtuPWE7bGV0IHM9W107ciE9bnVsbCYmci5sZW5ndGg+MCYmci5mb3JFYWNoKGZ1bmN0aW9uKFEpe2lmKFEudHlwZT09PWwuQmluYXJ5U3RyZWFtKXtsZXQgUj1RLmRhdGEuZGF0YTtzLnB1c2goUil9ZWxzZSBpZihRLnR5cGU9PT1sLkJpbmFyeUZpbGUpe2xldCBSPVEuZGF0YS5kYXRhO3MucHVzaChSKX1lbHNlIGlmKFEudHlwZT09PWwuSW1hZ2Upe2xldCBSPVEuZGF0YTtSLmRhdGEhPT1udWxsJiZzLnB1c2goLi4ubHIoUikpfWVsc2UgaWYoUS50eXBlPT09bC5NZXNoKXtsZXQgUj1RLmRhdGE7cy5wdXNoKC4uLnByKFIpKX1lbHNlIGlmKFEudHlwZT09PWwuUG9seURhdGEpe2xldCBSPVEuZGF0YTtzLnB1c2goLi4ubXIoUikpfX0pO2xldCB1PW8/LnBpcGVsaW5lQmFzZVVybD8/ZnIoKSxJPXR5cGVvZiB1IT0ic3RyaW5nIiYmdHlwZW9mIHU/LmhyZWY8InUiP3UuaHJlZjp1LHA9ciE9bnVsbD9LZShyLGdyKHMsbz8ubm9Db3B5KSk6bnVsbCxCPWF3YWl0IG0ucnVuUGlwZWxpbmUoZS50b1N0cmluZygpLEksQSx0LHAsbz8ucGlwZWxpbmVRdWVyeVBhcmFtcz8/TmUoKSk7cmV0dXJue3JldHVyblZhbHVlOkIucmV0dXJuVmFsdWUsc3Rkb3V0OkIuc3Rkb3V0LHN0ZGVycjpCLnN0ZGVycixvdXRwdXRzOkIub3V0cHV0cyx3ZWJXb3JrZXI6bn19dmFyIEM9bm87dmFyIHNvPW51bGw7ZnVuY3Rpb24gY3IoKXtyZXR1cm4gc299dmFyIElvPSIxLjEuMSIsQnI9SW87dmFyIGZBLGdvPWBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0BpdGstd2FzbS9pbWFnZS1pb0Ake0JyfS9kaXN0L3BpcGVsaW5lc2A7ZnVuY3Rpb24gSGcoZSl7ZkE9ZX1mdW5jdGlvbiBFKCl7aWYodHlwZW9mIGZBPCJ1IilyZXR1cm4gZkE7bGV0IGU9U2UoKTtyZXR1cm4gdHlwZW9mIGU8InUiP2U6Z299dmFyIGNBLGxvPW51bGw7ZnVuY3Rpb24gZHIoZSl7Y0E9ZX1mdW5jdGlvbiBkKCl7aWYodHlwZW9mIGNBPCJ1IilyZXR1cm4gY0E7bGV0IGU9T2UoKTtyZXR1cm4gdHlwZW9mIGU8InUiP2U6bG99dmFyICQ9bnVsbDthc3luYyBmdW5jdGlvbiBDcigpe2xldCBlPWQoKSxBPXR5cGVvZiBlIT0ic3RyaW5nIiYmdHlwZW9mIGU/LmhyZWY8InUiP2UuaHJlZjplOyQ9YXdhaXQgcGUoQSl9ZnVuY3Rpb24gVmcoZSl7JD1lfWFzeW5jIGZ1bmN0aW9uIHkoKXtpZigkIT09bnVsbClyZXR1cm4gJC50ZXJtaW5hdGVkJiZhd2FpdCBDcigpLCQ7bGV0IGU9Y3IoKTtyZXR1cm4gZSE9PW51bGw/ZTooYXdhaXQgQ3IoKSwkKX1hc3luYyBmdW5jdGlvbiBwbyhlKXtsZXQgdD0oYXdhaXQgRy5nZXQoYCR7ZX0vaW5kZXguanNvbmAse3Jlc3BvbnNlVHlwZToianNvbiJ9KSkuZGF0YSxyPWF3YWl0IEcuZ2V0KGAke2V9L2RhdGEvZGF0YS5yYXdgLHtyZXNwb25zZVR5cGU6ImFycmF5YnVmZmVyIn0pO3QuZGF0YT1TKHQuaW1hZ2VUeXBlLmNvbXBvbmVudFR5cGUsci5kYXRhKTtsZXQgbz1hd2FpdCBHLmdldChgJHtlfS9kYXRhL2RpcmVjdGlvbi5yYXdgLHtyZXNwb25zZVR5cGU6ImFycmF5YnVmZmVyIn0pO3JldHVybiB0LmRpcmVjdGlvbj1TKGIuRmxvYXQ2NCxvLmRhdGEpLHR9dmFyIG1vPXBvO3ZhciB1bz1uZXcgTWFwKFtbImltYWdlL2pwZWciLCJqcGVnIl0sWyJpbWFnZS9wbmciLCJwbmciXSxbImltYWdlL3RpZmYiLCJ0aWZmIl0sWyJpbWFnZS94LW1zLWJtcCIsImJtcCJdLFsiaW1hZ2UveC1ibXAiLCJibXAiXSxbImltYWdlL2JtcCIsImJtcCJdLFsiYXBwbGljYXRpb24vZGljb20iLCJnZGNtIl1dKSxlZT11bzthc3luYyBmdW5jdGlvbiBmbyhlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0icG5nLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIEJBPWZvO2FzeW5jIGZ1bmN0aW9uIGNvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0icG5nLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIGRBPWNvO2FzeW5jIGZ1bmN0aW9uIEJvKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJtZXRhLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIENBPUJvO2FzeW5jIGZ1bmN0aW9uIENvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0ibWV0YS13cml0ZS1pbWFnZSIsYT10Py53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OnQ/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFdyaXRlOnBbMF0/LmRhdGEsc2VyaWFsaXplZEltYWdlOnBbMV0/LmRhdGF9fXZhciBFQT1Dbzthc3luYyBmdW5jdGlvbiBFbyhlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0idGlmZi1yZWFkLWltYWdlIixhPUE/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGksdCxvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6QT8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkUmVhZDpwWzBdPy5kYXRhLGltYWdlOnBbMV0/LmRhdGF9fXZhciB5QT1Fbzthc3luYyBmdW5jdGlvbiB5byhlLEEsdD17fSl7bGV0IHI9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOntwYXRoOkEsZGF0YTpuZXcgVWludDhBcnJheX19XSxvPVt7dHlwZTpsLkltYWdlLGRhdGE6ZX1dLGk9W10sbj0iMCI7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9QTtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHQuaW5mb3JtYXRpb25Pbmx5JiZ0LmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKSx0LnVzZUNvbXByZXNzaW9uJiZ0LnVzZUNvbXByZXNzaW9uJiZpLnB1c2goIi0tdXNlLWNvbXByZXNzaW9uIik7bGV0IG09InRpZmYtd3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgUUE9eW87YXN5bmMgZnVuY3Rpb24gUW8oZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09Im5pZnRpLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIGhBPVFvO2FzeW5jIGZ1bmN0aW9uIGhvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0ibmlmdGktd3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgd0E9aG87YXN5bmMgZnVuY3Rpb24gd28oZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09ImpwZWctcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgUkE9d287YXN5bmMgZnVuY3Rpb24gUm8oZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJqcGVnLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIGtBPVJvO2FzeW5jIGZ1bmN0aW9uIGtvKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJucnJkLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIGJBPWtvO2FzeW5jIGZ1bmN0aW9uIGJvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0ibnJyZC13cml0ZS1pbWFnZSIsYT10Py53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OnQ/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFdyaXRlOnBbMF0/LmRhdGEsc2VyaWFsaXplZEltYWdlOnBbMV0/LmRhdGF9fXZhciBEQT1ibzthc3luYyBmdW5jdGlvbiBEbyhlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0idnRrLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIFdBPURvO2FzeW5jIGZ1bmN0aW9uIFdvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0idnRrLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIEZBPVdvO2FzeW5jIGZ1bmN0aW9uIEZvKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJibXAtcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgVUE9Rm87YXN5bmMgZnVuY3Rpb24gVW8oZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJibXAtd3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgU0E9VW87YXN5bmMgZnVuY3Rpb24gU28oZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09ImhkZjUtcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgT0E9U287YXN5bmMgZnVuY3Rpb24gT28oZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJoZGY1LXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIE5BPU9vO2FzeW5jIGZ1bmN0aW9uIE5vKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJtaW5jLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIFBBPU5vO2FzeW5jIGZ1bmN0aW9uIFBvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0ibWluYy13cml0ZS1pbWFnZSIsYT10Py53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OnQ/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFdyaXRlOnBbMF0/LmRhdGEsc2VyaWFsaXplZEltYWdlOnBbMV0/LmRhdGF9fXZhciB4QT1Qbzthc3luYyBmdW5jdGlvbiB4byhlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0ibXJjLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIEdBPXhvO2FzeW5jIGZ1bmN0aW9uIEdvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0ibXJjLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIFRBPUdvO2FzeW5jIGZ1bmN0aW9uIFRvKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJsc20tcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgSkE9VG87YXN5bmMgZnVuY3Rpb24gSm8oZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJsc20td3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgTEE9Sm87YXN5bmMgZnVuY3Rpb24gTG8oZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09Im1naC1yZWFkLWltYWdlIixhPUE/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGksdCxvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6QT8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkUmVhZDpwWzBdPy5kYXRhLGltYWdlOnBbMV0/LmRhdGF9fXZhciBNQT1Mbzthc3luYyBmdW5jdGlvbiBNbyhlLEEsdD17fSl7bGV0IHI9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOntwYXRoOkEsZGF0YTpuZXcgVWludDhBcnJheX19XSxvPVt7dHlwZTpsLkltYWdlLGRhdGE6ZX1dLGk9W10sbj0iMCI7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9QTtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHQuaW5mb3JtYXRpb25Pbmx5JiZ0LmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKSx0LnVzZUNvbXByZXNzaW9uJiZ0LnVzZUNvbXByZXNzaW9uJiZpLnB1c2goIi0tdXNlLWNvbXByZXNzaW9uIik7bGV0IG09Im1naC13cml0ZS1pbWFnZSIsYT10Py53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OnQ/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFdyaXRlOnBbMF0/LmRhdGEsc2VyaWFsaXplZEltYWdlOnBbMV0/LmRhdGF9fXZhciBIQT1Nbzthc3luYyBmdW5jdGlvbiBIbyhlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0iYmlvLXJhZC1yZWFkLWltYWdlIixhPUE/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGksdCxvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6QT8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkUmVhZDpwWzBdPy5kYXRhLGltYWdlOnBbMV0/LmRhdGF9fXZhciBZQT1Ibzthc3luYyBmdW5jdGlvbiBZbyhlLEEsdD17fSl7bGV0IHI9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOntwYXRoOkEsZGF0YTpuZXcgVWludDhBcnJheX19XSxvPVt7dHlwZTpsLkltYWdlLGRhdGE6ZX1dLGk9W10sbj0iMCI7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9QTtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHQuaW5mb3JtYXRpb25Pbmx5JiZ0LmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKSx0LnVzZUNvbXByZXNzaW9uJiZ0LnVzZUNvbXByZXNzaW9uJiZpLnB1c2goIi0tdXNlLWNvbXByZXNzaW9uIik7bGV0IG09ImJpby1yYWQtd3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgcUE9WW87YXN5bmMgZnVuY3Rpb24gcW8oZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09ImdpcGwtcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgS0E9cW87YXN5bmMgZnVuY3Rpb24gS28oZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJnaXBsLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIGpBPUtvO2FzeW5jIGZ1bmN0aW9uIGpvKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJnZS1hZHctcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgdkE9am87YXN5bmMgZnVuY3Rpb24gdm8oZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJnZS1hZHctd3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgekE9dm87YXN5bmMgZnVuY3Rpb24gem8oZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09ImdlNC1yZWFkLWltYWdlIixhPUE/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGksdCxvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6QT8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkUmVhZDpwWzBdPy5kYXRhLGltYWdlOnBbMV0/LmRhdGF9fXZhciBWQT16bzthc3luYyBmdW5jdGlvbiBWbyhlLEEsdD17fSl7bGV0IHI9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOntwYXRoOkEsZGF0YTpuZXcgVWludDhBcnJheX19XSxvPVt7dHlwZTpsLkltYWdlLGRhdGE6ZX1dLGk9W10sbj0iMCI7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9QTtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHQuaW5mb3JtYXRpb25Pbmx5JiZ0LmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKSx0LnVzZUNvbXByZXNzaW9uJiZ0LnVzZUNvbXByZXNzaW9uJiZpLnB1c2goIi0tdXNlLWNvbXByZXNzaW9uIik7bGV0IG09ImdlNC13cml0ZS1pbWFnZSIsYT10Py53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OnQ/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFdyaXRlOnBbMF0/LmRhdGEsc2VyaWFsaXplZEltYWdlOnBbMV0/LmRhdGF9fXZhciBfQT1Wbzthc3luYyBmdW5jdGlvbiBfbyhlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0iZ2U1LXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIFpBPV9vO2FzeW5jIGZ1bmN0aW9uIFpvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0iZ2U1LXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIFhBPVpvO2FzeW5jIGZ1bmN0aW9uIFhvKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJnZGNtLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyICRBPVhvO2FzeW5jIGZ1bmN0aW9uICRvKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0iZ2RjbS13cml0ZS1pbWFnZSIsYT10Py53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OnQ/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFdyaXRlOnBbMF0/LmRhdGEsc2VyaWFsaXplZEltYWdlOnBbMV0/LmRhdGF9fXZhciBldD0kbzthc3luYyBmdW5jdGlvbiBlYShlLEE9e30pe2xldCB0PVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkltYWdlfV0scj1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUT1hd2FpdCBlLmFycmF5QnVmZmVyKCk7cj17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShRKX19bGV0IG89W3t0eXBlOmwuQmluYXJ5RmlsZSxkYXRhOnJ9XSxpPVtdLG49ci5wYXRoO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPSIxIjtpLnB1c2goZiksaS5wdXNoKCItLW1lbW9yeS1pbyIpLEEuaW5mb3JtYXRpb25Pbmx5JiZBLmluZm9ybWF0aW9uT25seSYmaS5wdXNoKCItLWluZm9ybWF0aW9uLW9ubHkiKTtsZXQgbT0ic2NhbmNvLXJlYWQtaW1hZ2UiLGE9QT8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSx0LG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTpBPy5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRSZWFkOnBbMF0/LmRhdGEsaW1hZ2U6cFsxXT8uZGF0YX19dmFyIEF0PWVhO2FzeW5jIGZ1bmN0aW9uIEFhKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0ic2NhbmNvLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIHR0PUFhO2FzeW5jIGZ1bmN0aW9uIHRhKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJmZGYtcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgcnQ9dGE7YXN5bmMgZnVuY3Rpb24gcmEoZSxBPXt9KXtsZXQgdD1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5JbWFnZX1dLHI9ZTtpZihlIGluc3RhbmNlb2YgRmlsZSl7bGV0IFE9YXdhaXQgZS5hcnJheUJ1ZmZlcigpO3I9e3BhdGg6ZS5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoUSl9fWxldCBvPVt7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTpyfV0saT1bXSxuPXIucGF0aDtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj0iMSI7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSxBLmluZm9ybWF0aW9uT25seSYmQS5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5Iik7bGV0IG09Indhc20tcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgaXQ9cmE7YXN5bmMgZnVuY3Rpb24gaWEoZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJ3YXNtLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIG90PWlhO2FzeW5jIGZ1bmN0aW9uIG9hKGUsQT17fSl7bGV0IHQ9W3t0eXBlOmwuSnNvbkNvbXBhdGlibGV9LHt0eXBlOmwuSW1hZ2V9XSxyPWU7aWYoZSBpbnN0YW5jZW9mIEZpbGUpe2xldCBRPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtyPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFEpfX1sZXQgbz1be3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6cn1dLGk9W10sbj1yLnBhdGg7aS5wdXNoKG4pO2xldCBnPSIwIjtpLnB1c2goZyk7bGV0IGY9IjEiO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksQS5pbmZvcm1hdGlvbk9ubHkmJkEuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpO2xldCBtPSJ3YXNtLXpzdGQtcmVhZC1pbWFnZSIsYT1BPy53ZWJXb3JrZXI7YT09PXZvaWQgMCYmKGE9YXdhaXQgeSgpKTtsZXR7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6dSxzdGRlcnI6SSxvdXRwdXRzOnB9PWF3YWl0IEMobSxpLHQsbyx7cGlwZWxpbmVCYXNlVXJsOkUoKSxwaXBlbGluZVdvcmtlclVybDpkKCksd2ViV29ya2VyOmEsbm9Db3B5OkE/Lm5vQ29weX0pO2lmKHUhPT0wJiZJIT09IiIpdGhyb3cgbmV3IEVycm9yKEkpO3JldHVybnt3ZWJXb3JrZXI6cyxjb3VsZFJlYWQ6cFswXT8uZGF0YSxpbWFnZTpwWzFdPy5kYXRhfX12YXIgYXQ9b2E7YXN5bmMgZnVuY3Rpb24gYWEoZSxBLHQ9e30pe2xldCByPVt7dHlwZTpsLkpzb25Db21wYXRpYmxlfSx7dHlwZTpsLkJpbmFyeUZpbGUsZGF0YTp7cGF0aDpBLGRhdGE6bmV3IFVpbnQ4QXJyYXl9fV0sbz1be3R5cGU6bC5JbWFnZSxkYXRhOmV9XSxpPVtdLG49IjAiO2kucHVzaChuKTtsZXQgZz0iMCI7aS5wdXNoKGcpO2xldCBmPUE7aS5wdXNoKGYpLGkucHVzaCgiLS1tZW1vcnktaW8iKSx0LmluZm9ybWF0aW9uT25seSYmdC5pbmZvcm1hdGlvbk9ubHkmJmkucHVzaCgiLS1pbmZvcm1hdGlvbi1vbmx5IiksdC51c2VDb21wcmVzc2lvbiYmdC51c2VDb21wcmVzc2lvbiYmaS5wdXNoKCItLXVzZS1jb21wcmVzc2lvbiIpO2xldCBtPSJ3YXNtLXpzdGQtd3JpdGUtaW1hZ2UiLGE9dD8ud2ViV29ya2VyO2E9PT12b2lkIDAmJihhPWF3YWl0IHkoKSk7bGV0e3dlYldvcmtlcjpzLHJldHVyblZhbHVlOnUsc3RkZXJyOkksb3V0cHV0czpwfT1hd2FpdCBDKG0saSxyLG8se3BpcGVsaW5lQmFzZVVybDpFKCkscGlwZWxpbmVXb3JrZXJVcmw6ZCgpLHdlYldvcmtlcjphLG5vQ29weTp0Py5ub0NvcHl9KTtpZih1IT09MCYmSSE9PSIiKXRocm93IG5ldyBFcnJvcihJKTtyZXR1cm57d2ViV29ya2VyOnMsY291bGRXcml0ZTpwWzBdPy5kYXRhLHNlcmlhbGl6ZWRJbWFnZTpwWzFdPy5kYXRhfX12YXIgbnQ9YWE7dmFyIG5hPW5ldyBNYXAoW1sicG5nIixbQkEsZEFdXSxbIm1ldGEiLFtDQSxFQV1dLFsidGlmZiIsW3lBLFFBXV0sWyJuaWZ0aSIsW2hBLHdBXV0sWyJqcGVnIixbUkEsa0FdXSxbIm5ycmQiLFtiQSxEQV1dLFsidnRrIixbV0EsRkFdXSxbImJtcCIsW1VBLFNBXV0sWyJoZGY1IixbT0EsTkFdXSxbIm1pbmMiLFtQQSx4QV1dLFsibXJjIixbR0EsVEFdXSxbImxzbSIsW0pBLExBXV0sWyJtZ2giLFtNQSxIQV1dLFsiYmlvUmFkIixbWUEscUFdXSxbImdpcGwiLFtLQSxqQV1dLFsiZ2VBZHciLFt2QSx6QV1dLFsiZ2U0IixbVkEsX0FdXSxbImdlNSIsW1pBLFhBXV0sWyJnZGNtIixbJEEsZXRdXSxbInNjYW5jbyIsW0F0LHR0XV0sWyJmZGYiLFtydCxudWxsXV0sWyJ3YXNtIixbaXQsb3RdXSxbIndhc21ac3RkIixbYXQsbnRdXV0pLEFlPW5hO2FzeW5jIGZ1bmN0aW9uIHNhKGUsQT17fSl7bGV0IHQ9ZS50eXBlPz8iIixyPWUubmFtZT8/ZS5wYXRoPz8iZmlsZU5hbWUiLG89dGUocikudG9Mb3dlckNhc2UoKSxpPUE/LndlYldvcmtlcixuPWU7aWYoZSBpbnN0YW5jZW9mIEJsb2Ipe2xldCBJPWF3YWl0IGUuYXJyYXlCdWZmZXIoKTtuPXtwYXRoOmUubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KEkpfX1sZXQgZz1udWxsO2lmKHQmJmVlLmhhcyh0KSlnPWVlLmdldCh0KTtlbHNlIGlmKFkuaGFzKG8pKWc9WS5nZXQobyk7ZWxzZSBmb3IobGV0IEkgb2YgQWUudmFsdWVzKCkpaWYoSVswXSE9PW51bGwpe2xldHt3ZWJXb3JrZXI6cCxjb3VsZFJlYWQ6QixpbWFnZTpRfT1hd2FpdCBJWzBdKHtwYXRoOm4ucGF0aCxkYXRhOm4uZGF0YS5zbGljZSgpfSx7d2ViV29ya2VyOmksaW5mb3JtYXRpb25Pbmx5OkE/LmluZm9ybWF0aW9uT25seSxub0NvcHk6QT8ubm9Db3B5fSk7aWYoaT1wLEIpcmV0dXJuIHR5cGVvZiBBPCJ1IiYmKFE9SihRLEEpKSx7d2ViV29ya2VyOmksaW1hZ2U6UX19aWYoIWcpdGhyb3cgRXJyb3IoIkNvdWxkIG5vdCBmaW5kIElPIGZvcjogIityKTtsZXQgbT1BZS5nZXQoZylbMF0se3dlYldvcmtlcjphLGNvdWxkUmVhZDpzLGltYWdlOnV9PWF3YWl0IG0obix7d2ViV29ya2VyOmksaW5mb3JtYXRpb25Pbmx5OkE/LmluZm9ybWF0aW9uT25seSxub0NvcHk6QT8ubm9Db3B5fSk7aWYoaT1hLCFzKXRocm93IEVycm9yKCJDb3VsZCBub3QgcmVhZDogIityKTtyZXR1cm4gdHlwZW9mIEE8InUiJiYodT1KKHUsQSkpLHt3ZWJXb3JrZXI6aSxpbWFnZTp1fX12YXIgc3Q9c2E7dmFyIElhPXR5cGVvZiBnbG9iYWxUaGlzLm5hdmlnYXRvcj8uaGFyZHdhcmVDb25jdXJyZW5jeT09Im51bWJlciI/Z2xvYmFsVGhpcy5uYXZpZ2F0b3IuaGFyZHdhcmVDb25jdXJyZW5jeTo2LEVyPW5ldyBMZShJYSxzdCk7YXN5bmMgZnVuY3Rpb24gZ2EoZSxBPXt9KXtsZXQgdD0xLHI9MCxvPSExO3R5cGVvZiBBPT0ib2JqZWN0IiYmKHR5cGVvZiBBLnpTcGFjaW5nPCJ1IiYmKHQ9QS56U3BhY2luZyksdHlwZW9mIEEuek9yaWdpbjwidSImJihyPUEuek9yaWdpbiksdHlwZW9mIEEuc29ydGVkU2VyaWVzPCJ1IiYmKG89QS5zb3J0ZWRTZXJpZXMpKTtsZXQgaT1BcnJheS5mcm9tKGUsYXN5bmMgZnVuY3Rpb24ocyl7aWYocyBpbnN0YW5jZW9mIEZpbGUpe2xldCB1PWF3YWl0IHMuYXJyYXlCdWZmZXIoKTtyZXR1cm57cGF0aDpzLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheSh1KX19cmV0dXJuIHN9KSxuPWF3YWl0IFByb21pc2UuYWxsKGkpO298fG4uc29ydCgocyx1KT0+cy5wYXRoPHUucGF0aD8tMTpzLnBhdGg+dS5wYXRoPzE6MCk7bGV0IGc9W107Zm9yKGxldCBzPTA7czxuLmxlbmd0aDtzKyspZy5wdXNoKFtuW3NdLHt9XSk7bGV0IG09KGF3YWl0IEVyLnJ1blRhc2tzKGcpLnByb21pc2UpLm1hcChzPT57bGV0IHU9cy5pbWFnZTtyZXR1cm4gdS5pbWFnZVR5cGUuZGltZW5zaW9uPTMsdS5zaXplLnB1c2goMSksdS5zcGFjaW5nLnB1c2godCksdS5vcmlnaW4ucHVzaChyKSx1LmRpcmVjdGlvbj1uZXcgRmxvYXQ2NEFycmF5KDkpLHUuZGlyZWN0aW9uLmZpbGwoMCksdS5kaXJlY3Rpb25bMF09MSx1LmRpcmVjdGlvbls0XT0xLHUuZGlyZWN0aW9uWzhdPTEsdX0pLGE9VGUobSk7cmV0dXJuIHR5cGVvZiBBPT0ib2JqZWN0IiYmKHR5cGVvZiBBLmNvbXBvbmVudFR5cGU8InUifHx0eXBlb2YgQS5waXhlbFR5cGU8InUiKSYmKGE9SihhLEEpKSx7aW1hZ2U6YSx3ZWJXb3JrZXJQb29sOkVyfX12YXIgbGE9Z2E7YXN5bmMgZnVuY3Rpb24gcGEoZSxBLHQ9e30pe2xldCByPWU7KHR5cGVvZiB0LmNvbXBvbmVudFR5cGU8InUifHx0eXBlb2YgdC5waXhlbFR5cGU8InUiKSYmKHI9SihlLHQpKTtsZXQgbz10Lm1pbWVUeXBlLGk9dGUoQSkudG9Mb3dlckNhc2UoKSxuPXQud2ViV29ya2VyLGc9bnVsbDtpZih0eXBlb2YgbzwidSImJmVlLmhhcyhvKSlnPWVlLmdldChvKTtlbHNlIGlmKFkuaGFzKGkpKWc9WS5nZXQoaSk7ZWxzZSBmb3IobGV0IHAgb2YgQWUudmFsdWVzKCkpaWYocFsxXSE9PW51bGwpe2xldHt3ZWJXb3JrZXI6Qixjb3VsZFdyaXRlOlEsc2VyaWFsaXplZEltYWdlOlJ9PWF3YWl0IHBbMV0oR2UociksQSx0KTtpZihuPUIsUSlyZXR1cm57d2ViV29ya2VyOm4sc2VyaWFsaXplZEltYWdlOlJ9fWlmKCFnKXRocm93IEVycm9yKCJDb3VsZCBub3QgZmluZCBJTyBmb3I6ICIrQSk7bGV0IG09QWUuZ2V0KGcpWzFdLHt3ZWJXb3JrZXI6YSxjb3VsZFdyaXRlOnMsc2VyaWFsaXplZEltYWdlOnV9PWF3YWl0IG0ocixBLHQpO2lmKG49YSwhcyl0aHJvdyBFcnJvcigiQ291bGQgbm90IHdyaXRlOiAiK0EpO3JldHVybnt3ZWJXb3JrZXI6bixzZXJpYWxpemVkSW1hZ2U6dX19dmFyIG1hPXBhO2FzeW5jIGZ1bmN0aW9uIHVhKGUsQSx0PXt9KXtsZXQgcj1be3R5cGU6bC5Kc29uQ29tcGF0aWJsZX0se3R5cGU6bC5CaW5hcnlGaWxlLGRhdGE6e3BhdGg6QSxkYXRhOm5ldyBVaW50OEFycmF5fX1dLG89W3t0eXBlOmwuSW1hZ2UsZGF0YTplfV0saT1bXSxuPSIwIjtpLnB1c2gobik7bGV0IGc9IjAiO2kucHVzaChnKTtsZXQgZj1BO2kucHVzaChmKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdC5pbmZvcm1hdGlvbk9ubHkmJnQuaW5mb3JtYXRpb25Pbmx5JiZpLnB1c2goIi0taW5mb3JtYXRpb24tb25seSIpLHQudXNlQ29tcHJlc3Npb24mJnQudXNlQ29tcHJlc3Npb24mJmkucHVzaCgiLS11c2UtY29tcHJlc3Npb24iKTtsZXQgbT0iZmRmLXdyaXRlLWltYWdlIixhPXQ/LndlYldvcmtlcjthPT09dm9pZCAwJiYoYT1hd2FpdCB5KCkpO2xldHt3ZWJXb3JrZXI6cyxyZXR1cm5WYWx1ZTp1LHN0ZGVycjpJLG91dHB1dHM6cH09YXdhaXQgQyhtLGkscixvLHtwaXBlbGluZUJhc2VVcmw6RSgpLHBpcGVsaW5lV29ya2VyVXJsOmQoKSx3ZWJXb3JrZXI6YSxub0NvcHk6dD8ubm9Db3B5fSk7aWYodSE9PTAmJkkhPT0iIil0aHJvdyBuZXcgRXJyb3IoSSk7cmV0dXJue3dlYldvcmtlcjpzLGNvdWxkV3JpdGU6cFswXT8uZGF0YSxzZXJpYWxpemVkSW1hZ2U6cFsxXT8uZGF0YX19dmFyIGZhPXVhO3ZhciB5cj0nZGF0YTp0ZXh0L2phdmFzY3JpcHQ7Y2hhcnNldD11dGYtOCx2YXIgdHQ9T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBldD0oQSxJKT0+e2Zvcih2YXIgdCBpbiBJKXR0KEEsdCx7Z2V0OklbdF0sZW51bWVyYWJsZTohMH0pfTt2YXIgdkE9U3ltYm9sKCJDb21saW5rLnByb3h5IiksZ3Q9U3ltYm9sKCJDb21saW5rLmVuZHBvaW50IikscnQ9U3ltYm9sKCJDb21saW5rLnJlbGVhc2VQcm94eSIpLG1BPVN5bWJvbCgiQ29tbGluay5maW5hbGl6ZXIiKSxlQT1TeW1ib2woIkNvbWxpbmsudGhyb3duIiksJEE9QT0+dHlwZW9mIEE9PSJvYmplY3QiJiZBIT09bnVsbHx8dHlwZW9mIEE9PSJmdW5jdGlvbiIsaXQ9e2NhbkhhbmRsZTpBPT4kQShBKSYmQVt2QV0sc2VyaWFsaXplKEEpe2xldHtwb3J0MTpJLHBvcnQyOnR9PW5ldyBNZXNzYWdlQ2hhbm5lbDtyZXR1cm4gb0EoQSxJKSxbdCxbdF1dfSxkZXNlcmlhbGl6ZShBKXtyZXR1cm4gQS5zdGFydCgpLHN0KEEpfX0sb3Q9e2NhbkhhbmRsZTpBPT4kQShBKSYmZUEgaW4gQSxzZXJpYWxpemUoe3ZhbHVlOkF9KXtsZXQgSTtyZXR1cm4gQSBpbnN0YW5jZW9mIEVycm9yP0k9e2lzRXJyb3I6ITAsdmFsdWU6e21lc3NhZ2U6QS5tZXNzYWdlLG5hbWU6QS5uYW1lLHN0YWNrOkEuc3RhY2t9fTpJPXtpc0Vycm9yOiExLHZhbHVlOkF9LFtJLFtdXX0sZGVzZXJpYWxpemUoQSl7dGhyb3cgQS5pc0Vycm9yP09iamVjdC5hc3NpZ24obmV3IEVycm9yKEEudmFsdWUubWVzc2FnZSksQS52YWx1ZSk6QS52YWx1ZX19LEFJPW5ldyBNYXAoW1sicHJveHkiLGl0XSxbInRocm93IixvdF1dKTtmdW5jdGlvbiBCdChBLEkpe2ZvcihsZXQgdCBvZiBBKWlmKEk9PT10fHx0PT09IioifHx0IGluc3RhbmNlb2YgUmVnRXhwJiZ0LnRlc3QoSSkpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gb0EoQSxJPWdsb2JhbFRoaXMsdD1bIioiXSl7SS5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixmdW5jdGlvbiBlKGcpe2lmKCFnfHwhZy5kYXRhKXJldHVybjtpZighQnQodCxnLm9yaWdpbikpe2NvbnNvbGUud2FybihgSW52YWxpZCBvcmlnaW4gXCcke2cub3JpZ2lufVwnIGZvciBjb21saW5rIHByb3h5YCk7cmV0dXJufWxldHtpZDpyLHR5cGU6aSxwYXRoOnN9PU9iamVjdC5hc3NpZ24oe3BhdGg6W119LGcuZGF0YSksYT0oZy5kYXRhLmFyZ3VtZW50TGlzdHx8W10pLm1hcChiKSxuO3RyeXtsZXQgQz1zLnNsaWNlKDAsLTEpLnJlZHVjZSgoZixRKT0+ZltRXSxBKSxvPXMucmVkdWNlKChmLFEpPT5mW1FdLEEpO3N3aXRjaChpKXtjYXNlIkdFVCI6bj1vO2JyZWFrO2Nhc2UiU0VUIjpDW3Muc2xpY2UoLTEpWzBdXT1iKGcuZGF0YS52YWx1ZSksbj0hMDticmVhaztjYXNlIkFQUExZIjpuPW8uYXBwbHkoQyxhKTticmVhaztjYXNlIkNPTlNUUlVDVCI6e2xldCBmPW5ldyBvKC4uLmEpO249YXQoZil9YnJlYWs7Y2FzZSJFTkRQT0lOVCI6e2xldHtwb3J0MTpmLHBvcnQyOlF9PW5ldyBNZXNzYWdlQ2hhbm5lbDtvQShBLFEpLG49U0EoZixbZl0pfWJyZWFrO2Nhc2UiUkVMRUFTRSI6bj12b2lkIDA7YnJlYWs7ZGVmYXVsdDpyZXR1cm59fWNhdGNoKEMpe249e3ZhbHVlOkMsW2VBXTowfX1Qcm9taXNlLnJlc29sdmUobikuY2F0Y2goQz0+KHt2YWx1ZTpDLFtlQV06MH0pKS50aGVuKEM9PntsZXRbbyxmXT1pQShDKTtJLnBvc3RNZXNzYWdlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxvKSx7aWQ6cn0pLGYpLGk9PT0iUkVMRUFTRSImJihJLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGUpLElJKEkpLG1BIGluIEEmJnR5cGVvZiBBW21BXT09ImZ1bmN0aW9uIiYmQVttQV0oKSl9KS5jYXRjaChDPT57bGV0W28sZl09aUEoe3ZhbHVlOm5ldyBUeXBlRXJyb3IoIlVuc2VyaWFsaXphYmxlIHJldHVybiB2YWx1ZSIpLFtlQV06MH0pO0kucG9zdE1lc3NhZ2UoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LG8pLHtpZDpyfSksZil9KX0pLEkuc3RhcnQmJkkuc3RhcnQoKX1mdW5jdGlvbiBDdChBKXtyZXR1cm4gQS5jb25zdHJ1Y3Rvci5uYW1lPT09Ik1lc3NhZ2VQb3J0In1mdW5jdGlvbiBJSShBKXtDdChBKSYmQS5jbG9zZSgpfWZ1bmN0aW9uIHN0KEEsSSl7cmV0dXJuIHBBKEEsW10sSSl9ZnVuY3Rpb24gdEEoQSl7aWYoQSl0aHJvdyBuZXcgRXJyb3IoIlByb3h5IGhhcyBiZWVuIHJlbGVhc2VkIGFuZCBpcyBub3QgdXNlYWJsZSIpfWZ1bmN0aW9uIHRJKEEpe3JldHVybiBNKEEse3R5cGU6IlJFTEVBU0UifSkudGhlbigoKT0+e0lJKEEpfSl9dmFyIGdBPW5ldyBXZWFrTWFwLHJBPSJGaW5hbGl6YXRpb25SZWdpc3RyeSJpbiBnbG9iYWxUaGlzJiZuZXcgRmluYWxpemF0aW9uUmVnaXN0cnkoQT0+e2xldCBJPShnQS5nZXQoQSl8fDApLTE7Z0Euc2V0KEEsSSksST09PTAmJnRJKEEpfSk7ZnVuY3Rpb24gUXQoQSxJKXtsZXQgdD0oZ0EuZ2V0KEkpfHwwKSsxO2dBLnNldChJLHQpLHJBJiZyQS5yZWdpc3RlcihBLEksQSl9ZnVuY3Rpb24gbnQoQSl7ckEmJnJBLnVucmVnaXN0ZXIoQSl9ZnVuY3Rpb24gcEEoQSxJPVtdLHQ9ZnVuY3Rpb24oKXt9KXtsZXQgZT0hMSxnPW5ldyBQcm94eSh0LHtnZXQocixpKXtpZih0QShlKSxpPT09cnQpcmV0dXJuKCk9PntudChnKSx0SShBKSxlPSEwfTtpZihpPT09InRoZW4iKXtpZihJLmxlbmd0aD09PTApcmV0dXJue3RoZW46KCk9Pmd9O2xldCBzPU0oQSx7dHlwZToiR0VUIixwYXRoOkkubWFwKGE9PmEudG9TdHJpbmcoKSl9KS50aGVuKGIpO3JldHVybiBzLnRoZW4uYmluZChzKX1yZXR1cm4gcEEoQSxbLi4uSSxpXSl9LHNldChyLGkscyl7dEEoZSk7bGV0W2Esbl09aUEocyk7cmV0dXJuIE0oQSx7dHlwZToiU0VUIixwYXRoOlsuLi5JLGldLm1hcChDPT5DLnRvU3RyaW5nKCkpLHZhbHVlOmF9LG4pLnRoZW4oYil9LGFwcGx5KHIsaSxzKXt0QShlKTtsZXQgYT1JW0kubGVuZ3RoLTFdO2lmKGE9PT1ndClyZXR1cm4gTShBLHt0eXBlOiJFTkRQT0lOVCJ9KS50aGVuKGIpO2lmKGE9PT0iYmluZCIpcmV0dXJuIHBBKEEsSS5zbGljZSgwLC0xKSk7bGV0W24sQ109X0Eocyk7cmV0dXJuIE0oQSx7dHlwZToiQVBQTFkiLHBhdGg6SS5tYXAobz0+by50b1N0cmluZygpKSxhcmd1bWVudExpc3Q6bn0sQykudGhlbihiKX0sY29uc3RydWN0KHIsaSl7dEEoZSk7bGV0W3MsYV09X0EoaSk7cmV0dXJuIE0oQSx7dHlwZToiQ09OU1RSVUNUIixwYXRoOkkubWFwKG49Pm4udG9TdHJpbmcoKSksYXJndW1lbnRMaXN0OnN9LGEpLnRoZW4oYil9fSk7cmV0dXJuIFF0KGcsQSksZ31mdW5jdGlvbiBFdChBKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxBKX1mdW5jdGlvbiBfQShBKXtsZXQgST1BLm1hcChpQSk7cmV0dXJuW0kubWFwKHQ9PnRbMF0pLEV0KEkubWFwKHQ9PnRbMV0pKV19dmFyIGVJPW5ldyBXZWFrTWFwO2Z1bmN0aW9uIFNBKEEsSSl7cmV0dXJuIGVJLnNldChBLEkpLEF9ZnVuY3Rpb24gYXQoQSl7cmV0dXJuIE9iamVjdC5hc3NpZ24oQSx7W3ZBXTohMH0pfWZ1bmN0aW9uIGlBKEEpe2ZvcihsZXRbSSx0XW9mIEFJKWlmKHQuY2FuSGFuZGxlKEEpKXtsZXRbZSxnXT10LnNlcmlhbGl6ZShBKTtyZXR1cm5be3R5cGU6IkhBTkRMRVIiLG5hbWU6SSx2YWx1ZTplfSxnXX1yZXR1cm5be3R5cGU6IlJBVyIsdmFsdWU6QX0sZUkuZ2V0KEEpfHxbXV19ZnVuY3Rpb24gYihBKXtzd2l0Y2goQS50eXBlKXtjYXNlIkhBTkRMRVIiOnJldHVybiBBSS5nZXQoQS5uYW1lKS5kZXNlcmlhbGl6ZShBLnZhbHVlKTtjYXNlIlJBVyI6cmV0dXJuIEEudmFsdWV9fWZ1bmN0aW9uIE0oQSxJLHQpe3JldHVybiBuZXcgUHJvbWlzZShlPT57bGV0IGc9Y3QoKTtBLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGZ1bmN0aW9uIHIoaSl7IWkuZGF0YXx8IWkuZGF0YS5pZHx8aS5kYXRhLmlkIT09Z3x8KEEucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsciksZShpLmRhdGEpKX0pLEEuc3RhcnQmJkEuc3RhcnQoKSxBLnBvc3RNZXNzYWdlKE9iamVjdC5hc3NpZ24oe2lkOmd9LEkpLHQpfSl9ZnVuY3Rpb24gY3QoKXtyZXR1cm4gbmV3IEFycmF5KDQpLmZpbGwoMCkubWFwKCgpPT5NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpLnRvU3RyaW5nKDE2KSkuam9pbigiLSIpfWZ1bmN0aW9uIFcoQSxJKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gQS5hcHBseShJLGFyZ3VtZW50cyl9fXZhcnt0b1N0cmluZzpmdH09T2JqZWN0LnByb3RvdHlwZSx7Z2V0UHJvdG90eXBlT2Y6TkF9PU9iamVjdCxDQT0oQT0+ST0+e2xldCB0PWZ0LmNhbGwoSSk7cmV0dXJuIEFbdF18fChBW3RdPXQuc2xpY2UoOCwtMSkudG9Mb3dlckNhc2UoKSl9KShPYmplY3QuY3JlYXRlKG51bGwpKSxVPUE9PihBPUEudG9Mb3dlckNhc2UoKSxJPT5DQShJKT09PUEpLHNBPUE9Pkk9PnR5cGVvZiBJPT09QSx7aXNBcnJheTpxfT1BcnJheSxaPXNBKCJ1bmRlZmluZWQiKTtmdW5jdGlvbiBsdChBKXtyZXR1cm4gQSE9PW51bGwmJiFaKEEpJiZBLmNvbnN0cnVjdG9yIT09bnVsbCYmIVooQS5jb25zdHJ1Y3RvcikmJkYoQS5jb25zdHJ1Y3Rvci5pc0J1ZmZlcikmJkEuY29uc3RydWN0b3IuaXNCdWZmZXIoQSl9dmFyIG9JPVUoIkFycmF5QnVmZmVyIik7ZnVuY3Rpb24gRHQoQSl7bGV0IEk7cmV0dXJuIHR5cGVvZiBBcnJheUJ1ZmZlcjwidSImJkFycmF5QnVmZmVyLmlzVmlldz9JPUFycmF5QnVmZmVyLmlzVmlldyhBKTpJPUEmJkEuYnVmZmVyJiZvSShBLmJ1ZmZlciksSX12YXIgdXQ9c0EoInN0cmluZyIpLEY9c0EoImZ1bmN0aW9uIiksQkk9c0EoIm51bWJlciIpLFFBPUE9PkEhPT1udWxsJiZ0eXBlb2YgQT09Im9iamVjdCIsaHQ9QT0+QT09PSEwfHxBPT09ITEsQkE9QT0+e2lmKENBKEEpIT09Im9iamVjdCIpcmV0dXJuITE7bGV0IEk9TkEoQSk7cmV0dXJuKEk9PT1udWxsfHxJPT09T2JqZWN0LnByb3RvdHlwZXx8T2JqZWN0LmdldFByb3RvdHlwZU9mKEkpPT09bnVsbCkmJiEoU3ltYm9sLnRvU3RyaW5nVGFnIGluIEEpJiYhKFN5bWJvbC5pdGVyYXRvciBpbiBBKX0sZHQ9VSgiRGF0ZSIpLHl0PVUoIkZpbGUiKSx3dD1VKCJCbG9iIiksbXQ9VSgiRmlsZUxpc3QiKSxwdD1BPT5RQShBKSYmRihBLnBpcGUpLFN0PUE9PntsZXQgSTtyZXR1cm4gQSYmKHR5cGVvZiBGb3JtRGF0YT09ImZ1bmN0aW9uIiYmQSBpbnN0YW5jZW9mIEZvcm1EYXRhfHxGKEEuYXBwZW5kKSYmKChJPUNBKEEpKT09PSJmb3JtZGF0YSJ8fEk9PT0ib2JqZWN0IiYmRihBLnRvU3RyaW5nKSYmQS50b1N0cmluZygpPT09IltvYmplY3QgRm9ybURhdGFdIikpfSxGdD1VKCJVUkxTZWFyY2hQYXJhbXMiKSxSdD1BPT5BLnRyaW0/QS50cmltKCk6QS5yZXBsYWNlKC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZywiIik7ZnVuY3Rpb24gVihBLEkse2FsbE93bktleXM6dD0hMX09e30pe2lmKEE9PT1udWxsfHx0eXBlb2YgQT4idSIpcmV0dXJuO2xldCBlLGc7aWYodHlwZW9mIEEhPSJvYmplY3QiJiYoQT1bQV0pLHEoQSkpZm9yKGU9MCxnPUEubGVuZ3RoO2U8ZztlKyspSS5jYWxsKG51bGwsQVtlXSxlLEEpO2Vsc2V7bGV0IHI9dD9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhBKTpPYmplY3Qua2V5cyhBKSxpPXIubGVuZ3RoLHM7Zm9yKGU9MDtlPGk7ZSsrKXM9cltlXSxJLmNhbGwobnVsbCxBW3NdLHMsQSl9fWZ1bmN0aW9uIENJKEEsSSl7ST1JLnRvTG93ZXJDYXNlKCk7bGV0IHQ9T2JqZWN0LmtleXMoQSksZT10Lmxlbmd0aCxnO2Zvcig7ZS0tID4wOylpZihnPXRbZV0sST09PWcudG9Mb3dlckNhc2UoKSlyZXR1cm4gZztyZXR1cm4gbnVsbH12YXIgc0k9dHlwZW9mIGdsb2JhbFRoaXM8InUiP2dsb2JhbFRoaXM6dHlwZW9mIHNlbGY8InUiP3NlbGY6dHlwZW9mIHdpbmRvdzwidSI/d2luZG93Omdsb2JhbCxRST1BPT4hWihBKSYmQSE9PXNJO2Z1bmN0aW9uIFJBKCl7bGV0e2Nhc2VsZXNzOkF9PVFJKHRoaXMpJiZ0aGlzfHx7fSxJPXt9LHQ9KGUsZyk9PntsZXQgcj1BJiZDSShJLGcpfHxnO0JBKElbcl0pJiZCQShlKT9JW3JdPVJBKElbcl0sZSk6QkEoZSk/SVtyXT1SQSh7fSxlKTpxKGUpP0lbcl09ZS5zbGljZSgpOklbcl09ZX07Zm9yKGxldCBlPTAsZz1hcmd1bWVudHMubGVuZ3RoO2U8ZztlKyspYXJndW1lbnRzW2VdJiZWKGFyZ3VtZW50c1tlXSx0KTtyZXR1cm4gSX12YXIgTnQ9KEEsSSx0LHthbGxPd25LZXlzOmV9PXt9KT0+KFYoSSwoZyxyKT0+e3QmJkYoZyk/QVtyXT1XKGcsdCk6QVtyXT1nfSx7YWxsT3duS2V5czplfSksQSksVXQ9QT0+KEEuY2hhckNvZGVBdCgwKT09PTY1Mjc5JiYoQT1BLnNsaWNlKDEpKSxBKSxHdD0oQSxJLHQsZSk9PntBLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEkucHJvdG90eXBlLGUpLEEucHJvdG90eXBlLmNvbnN0cnVjdG9yPUEsT2JqZWN0LmRlZmluZVByb3BlcnR5KEEsInN1cGVyIix7dmFsdWU6SS5wcm90b3R5cGV9KSx0JiZPYmplY3QuYXNzaWduKEEucHJvdG90eXBlLHQpfSxrdD0oQSxJLHQsZSk9PntsZXQgZyxyLGkscz17fTtpZihJPUl8fHt9LEE9PW51bGwpcmV0dXJuIEk7ZG97Zm9yKGc9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoQSkscj1nLmxlbmd0aDtyLS0gPjA7KWk9Z1tyXSwoIWV8fGUoaSxBLEkpKSYmIXNbaV0mJihJW2ldPUFbaV0sc1tpXT0hMCk7QT10IT09ITEmJk5BKEEpfXdoaWxlKEEmJighdHx8dChBLEkpKSYmQSE9PU9iamVjdC5wcm90b3R5cGUpO3JldHVybiBJfSxMdD0oQSxJLHQpPT57QT1TdHJpbmcoQSksKHQ9PT12b2lkIDB8fHQ+QS5sZW5ndGgpJiYodD1BLmxlbmd0aCksdC09SS5sZW5ndGg7bGV0IGU9QS5pbmRleE9mKEksdCk7cmV0dXJuIGUhPT0tMSYmZT09PXR9LEp0PUE9PntpZighQSlyZXR1cm4gbnVsbDtpZihxKEEpKXJldHVybiBBO2xldCBJPUEubGVuZ3RoO2lmKCFCSShJKSlyZXR1cm4gbnVsbDtsZXQgdD1uZXcgQXJyYXkoSSk7Zm9yKDtJLS0gPjA7KXRbSV09QVtJXTtyZXR1cm4gdH0sSHQ9KEE9Pkk9PkEmJkkgaW5zdGFuY2VvZiBBKSh0eXBlb2YgVWludDhBcnJheTwidSImJk5BKFVpbnQ4QXJyYXkpKSxZdD0oQSxJKT0+e2xldCBlPShBJiZBW1N5bWJvbC5pdGVyYXRvcl0pLmNhbGwoQSksZztmb3IoOyhnPWUubmV4dCgpKSYmIWcuZG9uZTspe2xldCByPWcudmFsdWU7SS5jYWxsKEEsclswXSxyWzFdKX19LGJ0PShBLEkpPT57bGV0IHQsZT1bXTtmb3IoOyh0PUEuZXhlYyhJKSkhPT1udWxsOyllLnB1c2godCk7cmV0dXJuIGV9LE10PVUoIkhUTUxGb3JtRWxlbWVudCIpLHF0PUE9PkEudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9bLV9cXHNdKFthLXpcXGRdKShcXHcqKS9nLGZ1bmN0aW9uKHQsZSxnKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpK2d9KSxyST0oKHtoYXNPd25Qcm9wZXJ0eTpBfSk9PihJLHQpPT5BLmNhbGwoSSx0KSkoT2JqZWN0LnByb3RvdHlwZSksS3Q9VSgiUmVnRXhwIiksbkk9KEEsSSk9PntsZXQgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhBKSxlPXt9O1YodCwoZyxyKT0+e2xldCBpOyhpPUkoZyxyLEEpKSE9PSExJiYoZVtyXT1pfHxnKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEEsZSl9LE90PUE9PntuSShBLChJLHQpPT57aWYoRihBKSYmWyJhcmd1bWVudHMiLCJjYWxsZXIiLCJjYWxsZWUiXS5pbmRleE9mKHQpIT09LTEpcmV0dXJuITE7bGV0IGU9QVt0XTtpZihGKGUpKXtpZihJLmVudW1lcmFibGU9ITEsIndyaXRhYmxlImluIEkpe0kud3JpdGFibGU9ITE7cmV0dXJufUkuc2V0fHwoSS5zZXQ9KCk9Pnt0aHJvdyBFcnJvcigiQ2FuIG5vdCByZXdyaXRlIHJlYWQtb25seSBtZXRob2QgXCciK3QrIlwnIil9KX19KX0sVHQ9KEEsSSk9PntsZXQgdD17fSxlPWc9PntnLmZvckVhY2gocj0+e3Rbcl09ITB9KX07cmV0dXJuIHEoQSk/ZShBKTplKFN0cmluZyhBKS5zcGxpdChJKSksdH0seHQ9KCk9Pnt9LFB0PShBLEkpPT4oQT0rQSxOdW1iZXIuaXNGaW5pdGUoQSk/QTpJKSxGQT0iYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiLGlJPSIwMTIzNDU2Nzg5IixFST17RElHSVQ6aUksQUxQSEE6RkEsQUxQSEFfRElHSVQ6RkErRkEudG9VcHBlckNhc2UoKStpSX0sanQ9KEE9MTYsST1FSS5BTFBIQV9ESUdJVCk9PntsZXQgdD0iIix7bGVuZ3RoOmV9PUk7Zm9yKDtBLS07KXQrPUlbTWF0aC5yYW5kb20oKSplfDBdO3JldHVybiB0fTtmdW5jdGlvbiBXdChBKXtyZXR1cm4hIShBJiZGKEEuYXBwZW5kKSYmQVtTeW1ib2wudG9TdHJpbmdUYWddPT09IkZvcm1EYXRhIiYmQVtTeW1ib2wuaXRlcmF0b3JdKX12YXIgWnQ9QT0+e2xldCBJPW5ldyBBcnJheSgxMCksdD0oZSxnKT0+e2lmKFFBKGUpKXtpZihJLmluZGV4T2YoZSk+PTApcmV0dXJuO2lmKCEoInRvSlNPTiJpbiBlKSl7SVtnXT1lO2xldCByPXEoZSk/W106e307cmV0dXJuIFYoZSwoaSxzKT0+e2xldCBhPXQoaSxnKzEpOyFaKGEpJiYocltzXT1hKX0pLElbZ109dm9pZCAwLHJ9fXJldHVybiBlfTtyZXR1cm4gdChBLDApfSxWdD1VKCJBc3luY0Z1bmN0aW9uIiksWHQ9QT0+QSYmKFFBKEEpfHxGKEEpKSYmRihBLnRoZW4pJiZGKEEuY2F0Y2gpLEI9e2lzQXJyYXk6cSxpc0FycmF5QnVmZmVyOm9JLGlzQnVmZmVyOmx0LGlzRm9ybURhdGE6U3QsaXNBcnJheUJ1ZmZlclZpZXc6RHQsaXNTdHJpbmc6dXQsaXNOdW1iZXI6QkksaXNCb29sZWFuOmh0LGlzT2JqZWN0OlFBLGlzUGxhaW5PYmplY3Q6QkEsaXNVbmRlZmluZWQ6Wixpc0RhdGU6ZHQsaXNGaWxlOnl0LGlzQmxvYjp3dCxpc1JlZ0V4cDpLdCxpc0Z1bmN0aW9uOkYsaXNTdHJlYW06cHQsaXNVUkxTZWFyY2hQYXJhbXM6RnQsaXNUeXBlZEFycmF5Okh0LGlzRmlsZUxpc3Q6bXQsZm9yRWFjaDpWLG1lcmdlOlJBLGV4dGVuZDpOdCx0cmltOlJ0LHN0cmlwQk9NOlV0LGluaGVyaXRzOkd0LHRvRmxhdE9iamVjdDprdCxraW5kT2Y6Q0Esa2luZE9mVGVzdDpVLGVuZHNXaXRoOkx0LHRvQXJyYXk6SnQsZm9yRWFjaEVudHJ5Oll0LG1hdGNoQWxsOmJ0LGlzSFRNTEZvcm06TXQsaGFzT3duUHJvcGVydHk6ckksaGFzT3duUHJvcDpySSxyZWR1Y2VEZXNjcmlwdG9yczpuSSxmcmVlemVNZXRob2RzOk90LHRvT2JqZWN0U2V0OlR0LHRvQ2FtZWxDYXNlOnF0LG5vb3A6eHQsdG9GaW5pdGVOdW1iZXI6UHQsZmluZEtleTpDSSxnbG9iYWw6c0ksaXNDb250ZXh0RGVmaW5lZDpRSSxBTFBIQUJFVDpFSSxnZW5lcmF0ZVN0cmluZzpqdCxpc1NwZWNDb21wbGlhbnRGb3JtOld0LHRvSlNPTk9iamVjdDpadCxpc0FzeW5jRm46VnQsaXNUaGVuYWJsZTpYdH07ZnVuY3Rpb24gSyhBLEksdCxlLGcpe0Vycm9yLmNhbGwodGhpcyksRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2U/RXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcyx0aGlzLmNvbnN0cnVjdG9yKTp0aGlzLnN0YWNrPW5ldyBFcnJvcigpLnN0YWNrLHRoaXMubWVzc2FnZT1BLHRoaXMubmFtZT0iQXhpb3NFcnJvciIsSSYmKHRoaXMuY29kZT1JKSx0JiYodGhpcy5jb25maWc9dCksZSYmKHRoaXMucmVxdWVzdD1lKSxnJiYodGhpcy5yZXNwb25zZT1nKX1CLmluaGVyaXRzKEssRXJyb3Ise3RvSlNPTjpmdW5jdGlvbigpe3JldHVybnttZXNzYWdlOnRoaXMubWVzc2FnZSxuYW1lOnRoaXMubmFtZSxkZXNjcmlwdGlvbjp0aGlzLmRlc2NyaXB0aW9uLG51bWJlcjp0aGlzLm51bWJlcixmaWxlTmFtZTp0aGlzLmZpbGVOYW1lLGxpbmVOdW1iZXI6dGhpcy5saW5lTnVtYmVyLGNvbHVtbk51bWJlcjp0aGlzLmNvbHVtbk51bWJlcixzdGFjazp0aGlzLnN0YWNrLGNvbmZpZzpCLnRvSlNPTk9iamVjdCh0aGlzLmNvbmZpZyksY29kZTp0aGlzLmNvZGUsc3RhdHVzOnRoaXMucmVzcG9uc2UmJnRoaXMucmVzcG9uc2Uuc3RhdHVzP3RoaXMucmVzcG9uc2Uuc3RhdHVzOm51bGx9fX0pO3ZhciBhST1LLnByb3RvdHlwZSxjST17fTtbIkVSUl9CQURfT1BUSU9OX1ZBTFVFIiwiRVJSX0JBRF9PUFRJT04iLCJFQ09OTkFCT1JURUQiLCJFVElNRURPVVQiLCJFUlJfTkVUV09SSyIsIkVSUl9GUl9UT09fTUFOWV9SRURJUkVDVFMiLCJFUlJfREVQUkVDQVRFRCIsIkVSUl9CQURfUkVTUE9OU0UiLCJFUlJfQkFEX1JFUVVFU1QiLCJFUlJfQ0FOQ0VMRUQiLCJFUlJfTk9UX1NVUFBPUlQiLCJFUlJfSU5WQUxJRF9VUkwiXS5mb3JFYWNoKEE9PntjSVtBXT17dmFsdWU6QX19KTtPYmplY3QuZGVmaW5lUHJvcGVydGllcyhLLGNJKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYUksImlzQXhpb3NFcnJvciIse3ZhbHVlOiEwfSk7Sy5mcm9tPShBLEksdCxlLGcscik9PntsZXQgaT1PYmplY3QuY3JlYXRlKGFJKTtyZXR1cm4gQi50b0ZsYXRPYmplY3QoQSxpLGZ1bmN0aW9uKGEpe3JldHVybiBhIT09RXJyb3IucHJvdG90eXBlfSxzPT5zIT09ImlzQXhpb3NFcnJvciIpLEsuY2FsbChpLEEubWVzc2FnZSxJLHQsZSxnKSxpLmNhdXNlPUEsaS5uYW1lPUEubmFtZSxyJiZPYmplY3QuYXNzaWduKGksciksaX07dmFyIGw9Szt2YXIgbkE9bnVsbDtmdW5jdGlvbiBVQShBKXtyZXR1cm4gQi5pc1BsYWluT2JqZWN0KEEpfHxCLmlzQXJyYXkoQSl9ZnVuY3Rpb24gbEkoQSl7cmV0dXJuIEIuZW5kc1dpdGgoQSwiW10iKT9BLnNsaWNlKDAsLTIpOkF9ZnVuY3Rpb24gZkkoQSxJLHQpe3JldHVybiBBP0EuY29uY2F0KEkpLm1hcChmdW5jdGlvbihnLHIpe3JldHVybiBnPWxJKGcpLCF0JiZyPyJbIitnKyJdIjpnfSkuam9pbih0PyIuIjoiIik6SX1mdW5jdGlvbiB6dChBKXtyZXR1cm4gQi5pc0FycmF5KEEpJiYhQS5zb21lKFVBKX12YXIgX3Q9Qi50b0ZsYXRPYmplY3QoQix7fSxudWxsLGZ1bmN0aW9uKEkpe3JldHVybi9eaXNbQS1aXS8udGVzdChJKX0pO2Z1bmN0aW9uIHZ0KEEsSSx0KXtpZighQi5pc09iamVjdChBKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJ0YXJnZXQgbXVzdCBiZSBhbiBvYmplY3QiKTtJPUl8fG5ldyhuQXx8Rm9ybURhdGEpLHQ9Qi50b0ZsYXRPYmplY3QodCx7bWV0YVRva2VuczohMCxkb3RzOiExLGluZGV4ZXM6ITF9LCExLGZ1bmN0aW9uKGMsdSl7cmV0dXJuIUIuaXNVbmRlZmluZWQodVtjXSl9KTtsZXQgZT10Lm1ldGFUb2tlbnMsZz10LnZpc2l0b3J8fEMscj10LmRvdHMsaT10LmluZGV4ZXMsYT0odC5CbG9ifHx0eXBlb2YgQmxvYjwidSImJkJsb2IpJiZCLmlzU3BlY0NvbXBsaWFudEZvcm0oSSk7aWYoIUIuaXNGdW5jdGlvbihnKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJ2aXNpdG9yIG11c3QgYmUgYSBmdW5jdGlvbiIpO2Z1bmN0aW9uIG4oRSl7aWYoRT09PW51bGwpcmV0dXJuIiI7aWYoQi5pc0RhdGUoRSkpcmV0dXJuIEUudG9JU09TdHJpbmcoKTtpZighYSYmQi5pc0Jsb2IoRSkpdGhyb3cgbmV3IGwoIkJsb2IgaXMgbm90IHN1cHBvcnRlZC4gVXNlIGEgQnVmZmVyIGluc3RlYWQuIik7cmV0dXJuIEIuaXNBcnJheUJ1ZmZlcihFKXx8Qi5pc1R5cGVkQXJyYXkoRSk/YSYmdHlwZW9mIEJsb2I9PSJmdW5jdGlvbiI/bmV3IEJsb2IoW0VdKTpCdWZmZXIuZnJvbShFKTpFfWZ1bmN0aW9uIEMoRSxjLHUpe2xldCBkPUU7aWYoRSYmIXUmJnR5cGVvZiBFPT0ib2JqZWN0Iil7aWYoQi5lbmRzV2l0aChjLCJ7fSIpKWM9ZT9jOmMuc2xpY2UoMCwtMiksRT1KU09OLnN0cmluZ2lmeShFKTtlbHNlIGlmKEIuaXNBcnJheShFKSYmenQoRSl8fChCLmlzRmlsZUxpc3QoRSl8fEIuZW5kc1dpdGgoYywiW10iKSkmJihkPUIudG9BcnJheShFKSkpcmV0dXJuIGM9bEkoYyksZC5mb3JFYWNoKGZ1bmN0aW9uKE4sSXQpeyEoQi5pc1VuZGVmaW5lZChOKXx8Tj09PW51bGwpJiZJLmFwcGVuZChpPT09ITA/ZkkoW2NdLEl0LHIpOmk9PT1udWxsP2M6YysiW10iLG4oTikpfSksITF9cmV0dXJuIFVBKEUpPyEwOihJLmFwcGVuZChmSSh1LGMsciksbihFKSksITEpfWxldCBvPVtdLGY9T2JqZWN0LmFzc2lnbihfdCx7ZGVmYXVsdFZpc2l0b3I6Qyxjb252ZXJ0VmFsdWU6bixpc1Zpc2l0YWJsZTpVQX0pO2Z1bmN0aW9uIFEoRSxjKXtpZighQi5pc1VuZGVmaW5lZChFKSl7aWYoby5pbmRleE9mKEUpIT09LTEpdGhyb3cgRXJyb3IoIkNpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZCBpbiAiK2Muam9pbigiLiIpKTtvLnB1c2goRSksQi5mb3JFYWNoKEUsZnVuY3Rpb24oZCxSKXsoIShCLmlzVW5kZWZpbmVkKGQpfHxkPT09bnVsbCkmJmcuY2FsbChJLGQsQi5pc1N0cmluZyhSKT9SLnRyaW0oKTpSLGMsZikpPT09ITAmJlEoZCxjP2MuY29uY2F0KFIpOltSXSl9KSxvLnBvcCgpfX1pZighQi5pc09iamVjdChBKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJkYXRhIG11c3QgYmUgYW4gb2JqZWN0Iik7cmV0dXJuIFEoQSksSX12YXIgTD12dDtmdW5jdGlvbiBESShBKXtsZXQgST17IiEiOiIlMjUyMSIsIlwnIjoiJTI1MjciLCIoIjoiJTI1MjgiLCIpIjoiJTI1MjkiLCJ+IjoiJTI1N0UiLCIlMjUyMCI6IisiLCIlMjUwMCI6IlxcMCJ9O3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoQSkucmVwbGFjZSgvWyFcJygpfl18JTI1MjB8JTI1MDAvZyxmdW5jdGlvbihlKXtyZXR1cm4gSVtlXX0pfWZ1bmN0aW9uIHVJKEEsSSl7dGhpcy5fcGFpcnM9W10sQSYmTChBLHRoaXMsSSl9dmFyIGhJPXVJLnByb3RvdHlwZTtoSS5hcHBlbmQ9ZnVuY3Rpb24oSSx0KXt0aGlzLl9wYWlycy5wdXNoKFtJLHRdKX07aEkudG9TdHJpbmc9ZnVuY3Rpb24oSSl7bGV0IHQ9ST9mdW5jdGlvbihlKXtyZXR1cm4gSS5jYWxsKHRoaXMsZSxESSl9OkRJO3JldHVybiB0aGlzLl9wYWlycy5tYXAoZnVuY3Rpb24oZyl7cmV0dXJuIHQoZ1swXSkrIj0iK3QoZ1sxXSl9LCIiKS5qb2luKCImIil9O3ZhciBFQT11STtmdW5jdGlvbiAkdChBKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KEEpLnJlcGxhY2UoLyUyNTNBL2dpLCI6IikucmVwbGFjZSgvJTI1MjQvZywiJCIpLnJlcGxhY2UoLyUyNTJDL2dpLCIsIikucmVwbGFjZSgvJTI1MjAvZywiKyIpLnJlcGxhY2UoLyUyNTVCL2dpLCJbIikucmVwbGFjZSgvJTI1NUQvZ2ksIl0iKX1mdW5jdGlvbiBYKEEsSSx0KXtpZighSSlyZXR1cm4gQTtsZXQgZT10JiZ0LmVuY29kZXx8JHQsZz10JiZ0LnNlcmlhbGl6ZSxyO2lmKGc/cj1nKEksdCk6cj1CLmlzVVJMU2VhcmNoUGFyYW1zKEkpP0kudG9TdHJpbmcoKTpuZXcgRUEoSSx0KS50b1N0cmluZyhlKSxyKXtsZXQgaT1BLmluZGV4T2YoIiUyMyIpO2khPT0tMSYmKEE9QS5zbGljZSgwLGkpKSxBKz0oQS5pbmRleE9mKCI/Iik9PT0tMT8iPyI6IiYiKStyfXJldHVybiBBfXZhciBHQT1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuaGFuZGxlcnM9W119dXNlKEksdCxlKXtyZXR1cm4gdGhpcy5oYW5kbGVycy5wdXNoKHtmdWxmaWxsZWQ6SSxyZWplY3RlZDp0LHN5bmNocm9ub3VzOmU/ZS5zeW5jaHJvbm91czohMSxydW5XaGVuOmU/ZS5ydW5XaGVuOm51bGx9KSx0aGlzLmhhbmRsZXJzLmxlbmd0aC0xfWVqZWN0KEkpe3RoaXMuaGFuZGxlcnNbSV0mJih0aGlzLmhhbmRsZXJzW0ldPW51bGwpfWNsZWFyKCl7dGhpcy5oYW5kbGVycyYmKHRoaXMuaGFuZGxlcnM9W10pfWZvckVhY2goSSl7Qi5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsZnVuY3Rpb24oZSl7ZSE9PW51bGwmJkkoZSl9KX19LGtBPUdBO3ZhciBhQT17c2lsZW50SlNPTlBhcnNpbmc6ITAsZm9yY2VkSlNPTlBhcnNpbmc6ITAsY2xhcmlmeVRpbWVvdXRFcnJvcjohMX07dmFyIGRJPXR5cGVvZiBVUkxTZWFyY2hQYXJhbXM8InUiP1VSTFNlYXJjaFBhcmFtczpFQTt2YXIgeUk9dHlwZW9mIEZvcm1EYXRhPCJ1Ij9Gb3JtRGF0YTpudWxsO3ZhciB3ST10eXBlb2YgQmxvYjwidSI/QmxvYjpudWxsO3ZhciBtST17aXNCcm93c2VyOiEwLGNsYXNzZXM6e1VSTFNlYXJjaFBhcmFtczpkSSxGb3JtRGF0YTp5SSxCbG9iOndJfSxwcm90b2NvbHM6WyJodHRwIiwiaHR0cHMiLCJmaWxlIiwiYmxvYiIsInVybCIsImRhdGEiXX07dmFyIExBPXt9O2V0KExBLHtoYXNCcm93c2VyRW52OigpPT5wSSxoYXNTdGFuZGFyZEJyb3dzZXJFbnY6KCk9PkFlLGhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudjooKT0+SWV9KTt2YXIgcEk9dHlwZW9mIHdpbmRvdzwidSImJnR5cGVvZiBkb2N1bWVudDwidSIsQWU9KEE9PnBJJiZbIlJlYWN0TmF0aXZlIiwiTmF0aXZlU2NyaXB0IiwiTlMiXS5pbmRleE9mKEEpPDApKHR5cGVvZiBuYXZpZ2F0b3I8InUiJiZuYXZpZ2F0b3IucHJvZHVjdCksSWU9dHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlPCJ1IiYmc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlJiZ0eXBlb2Ygc2VsZi5pbXBvcnRTY3JpcHRzPT0iZnVuY3Rpb24iO3ZhciB3PXsuLi5MQSwuLi5tSX07ZnVuY3Rpb24gSkEoQSxJKXtyZXR1cm4gTChBLG5ldyB3LmNsYXNzZXMuVVJMU2VhcmNoUGFyYW1zLE9iamVjdC5hc3NpZ24oe3Zpc2l0b3I6ZnVuY3Rpb24odCxlLGcscil7cmV0dXJuIHcuaXNOb2RlJiZCLmlzQnVmZmVyKHQpPyh0aGlzLmFwcGVuZChlLHQudG9TdHJpbmcoImJhc2U2NCIpKSwhMSk6ci5kZWZhdWx0VmlzaXRvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSxJKSl9ZnVuY3Rpb24gdGUoQSl7cmV0dXJuIEIubWF0Y2hBbGwoL1xcdyt8XFxbKFxcdyopXS9nLEEpLm1hcChJPT5JWzBdPT09IltdIj8iIjpJWzFdfHxJWzBdKX1mdW5jdGlvbiBlZShBKXtsZXQgST17fSx0PU9iamVjdC5rZXlzKEEpLGUsZz10Lmxlbmd0aCxyO2ZvcihlPTA7ZTxnO2UrKylyPXRbZV0sSVtyXT1BW3JdO3JldHVybiBJfWZ1bmN0aW9uIGdlKEEpe2Z1bmN0aW9uIEkodCxlLGcscil7bGV0IGk9dFtyKytdLHM9TnVtYmVyLmlzRmluaXRlKCtpKSxhPXI+PXQubGVuZ3RoO3JldHVybiBpPSFpJiZCLmlzQXJyYXkoZyk/Zy5sZW5ndGg6aSxhPyhCLmhhc093blByb3AoZyxpKT9nW2ldPVtnW2ldLGVdOmdbaV09ZSwhcyk6KCghZ1tpXXx8IUIuaXNPYmplY3QoZ1tpXSkpJiYoZ1tpXT1bXSksSSh0LGUsZ1tpXSxyKSYmQi5pc0FycmF5KGdbaV0pJiYoZ1tpXT1lZShnW2ldKSksIXMpfWlmKEIuaXNGb3JtRGF0YShBKSYmQi5pc0Z1bmN0aW9uKEEuZW50cmllcykpe2xldCB0PXt9O3JldHVybiBCLmZvckVhY2hFbnRyeShBLChlLGcpPT57SSh0ZShlKSxnLHQsMCl9KSx0fXJldHVybiBudWxsfXZhciBjQT1nZTtmdW5jdGlvbiByZShBLEksdCl7aWYoQi5pc1N0cmluZyhBKSl0cnl7cmV0dXJuKEl8fEpTT04ucGFyc2UpKEEpLEIudHJpbShBKX1jYXRjaChlKXtpZihlLm5hbWUhPT0iU3ludGF4RXJyb3IiKXRocm93IGV9cmV0dXJuKHR8fEpTT04uc3RyaW5naWZ5KShBKX12YXIgSEE9e3RyYW5zaXRpb25hbDphQSxhZGFwdGVyOlsieGhyIiwiaHR0cCJdLHRyYW5zZm9ybVJlcXVlc3Q6W2Z1bmN0aW9uKEksdCl7bGV0IGU9dC5nZXRDb250ZW50VHlwZSgpfHwiIixnPWUuaW5kZXhPZigiYXBwbGljYXRpb24vanNvbiIpPi0xLHI9Qi5pc09iamVjdChJKTtpZihyJiZCLmlzSFRNTEZvcm0oSSkmJihJPW5ldyBGb3JtRGF0YShJKSksQi5pc0Zvcm1EYXRhKEkpKXJldHVybiBnJiZnP0pTT04uc3RyaW5naWZ5KGNBKEkpKTpJO2lmKEIuaXNBcnJheUJ1ZmZlcihJKXx8Qi5pc0J1ZmZlcihJKXx8Qi5pc1N0cmVhbShJKXx8Qi5pc0ZpbGUoSSl8fEIuaXNCbG9iKEkpKXJldHVybiBJO2lmKEIuaXNBcnJheUJ1ZmZlclZpZXcoSSkpcmV0dXJuIEkuYnVmZmVyO2lmKEIuaXNVUkxTZWFyY2hQYXJhbXMoSSkpcmV0dXJuIHQuc2V0Q29udGVudFR5cGUoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04IiwhMSksSS50b1N0cmluZygpO2xldCBzO2lmKHIpe2lmKGUuaW5kZXhPZigiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIik+LTEpcmV0dXJuIEpBKEksdGhpcy5mb3JtU2VyaWFsaXplcikudG9TdHJpbmcoKTtpZigocz1CLmlzRmlsZUxpc3QoSSkpfHxlLmluZGV4T2YoIm11bHRpcGFydC9mb3JtLWRhdGEiKT4tMSl7bGV0IGE9dGhpcy5lbnYmJnRoaXMuZW52LkZvcm1EYXRhO3JldHVybiBMKHM/eyJmaWxlc1tdIjpJfTpJLGEmJm5ldyBhLHRoaXMuZm9ybVNlcmlhbGl6ZXIpfX1yZXR1cm4gcnx8Zz8odC5zZXRDb250ZW50VHlwZSgiYXBwbGljYXRpb24vanNvbiIsITEpLHJlKEkpKTpJfV0sdHJhbnNmb3JtUmVzcG9uc2U6W2Z1bmN0aW9uKEkpe2xldCB0PXRoaXMudHJhbnNpdGlvbmFsfHxIQS50cmFuc2l0aW9uYWwsZT10JiZ0LmZvcmNlZEpTT05QYXJzaW5nLGc9dGhpcy5yZXNwb25zZVR5cGU9PT0ianNvbiI7aWYoSSYmQi5pc1N0cmluZyhJKSYmKGUmJiF0aGlzLnJlc3BvbnNlVHlwZXx8Zykpe2xldCBpPSEodCYmdC5zaWxlbnRKU09OUGFyc2luZykmJmc7dHJ5e3JldHVybiBKU09OLnBhcnNlKEkpfWNhdGNoKHMpe2lmKGkpdGhyb3cgcy5uYW1lPT09IlN5bnRheEVycm9yIj9sLmZyb20ocyxsLkVSUl9CQURfUkVTUE9OU0UsdGhpcyxudWxsLHRoaXMucmVzcG9uc2UpOnN9fXJldHVybiBJfV0sdGltZW91dDowLHhzcmZDb29raWVOYW1lOiJYU1JGLVRPS0VOIix4c3JmSGVhZGVyTmFtZToiWC1YU1JGLVRPS0VOIixtYXhDb250ZW50TGVuZ3RoOi0xLG1heEJvZHlMZW5ndGg6LTEsZW52OntGb3JtRGF0YTp3LmNsYXNzZXMuRm9ybURhdGEsQmxvYjp3LmNsYXNzZXMuQmxvYn0sdmFsaWRhdGVTdGF0dXM6ZnVuY3Rpb24oSSl7cmV0dXJuIEk+PTIwMCYmSTwzMDB9LGhlYWRlcnM6e2NvbW1vbjp7QWNjZXB0OiJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoiLCJDb250ZW50LVR5cGUiOnZvaWQgMH19fTtCLmZvckVhY2goWyJkZWxldGUiLCJnZXQiLCJoZWFkIiwicG9zdCIsInB1dCIsInBhdGNoIl0sQT0+e0hBLmhlYWRlcnNbQV09e319KTt2YXIgTz1IQTt2YXIgaWU9Qi50b09iamVjdFNldChbImFnZSIsImF1dGhvcml6YXRpb24iLCJjb250ZW50LWxlbmd0aCIsImNvbnRlbnQtdHlwZSIsImV0YWciLCJleHBpcmVzIiwiZnJvbSIsImhvc3QiLCJpZi1tb2RpZmllZC1zaW5jZSIsImlmLXVubW9kaWZpZWQtc2luY2UiLCJsYXN0LW1vZGlmaWVkIiwibG9jYXRpb24iLCJtYXgtZm9yd2FyZHMiLCJwcm94eS1hdXRob3JpemF0aW9uIiwicmVmZXJlciIsInJldHJ5LWFmdGVyIiwidXNlci1hZ2VudCJdKSxTST1BPT57bGV0IEk9e30sdCxlLGc7cmV0dXJuIEEmJkEuc3BsaXQoYCUwQWApLmZvckVhY2goZnVuY3Rpb24oaSl7Zz1pLmluZGV4T2YoIjoiKSx0PWkuc3Vic3RyaW5nKDAsZykudHJpbSgpLnRvTG93ZXJDYXNlKCksZT1pLnN1YnN0cmluZyhnKzEpLnRyaW0oKSwhKCF0fHxJW3RdJiZpZVt0XSkmJih0PT09InNldC1jb29raWUiP0lbdF0/SVt0XS5wdXNoKGUpOklbdF09W2VdOklbdF09SVt0XT9JW3RdKyIsICIrZTplKX0pLEl9O3ZhciBGST1TeW1ib2woImludGVybmFscyIpO2Z1bmN0aW9uIHooQSl7cmV0dXJuIEEmJlN0cmluZyhBKS50cmltKCkudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBmQShBKXtyZXR1cm4gQT09PSExfHxBPT1udWxsP0E6Qi5pc0FycmF5KEEpP0EubWFwKGZBKTpTdHJpbmcoQSl9ZnVuY3Rpb24gb2UoQSl7bGV0IEk9T2JqZWN0LmNyZWF0ZShudWxsKSx0PS8oW15cXHMsOz1dKylcXHMqKD86PVxccyooW14sO10rKSk/L2csZTtmb3IoO2U9dC5leGVjKEEpOylJW2VbMV1dPWVbMl07cmV0dXJuIEl9dmFyIEJlPUE9Pi9eWy1fYS16QS1aMC05XmB8fiwhJTIzJCUmXCcqKy5dKyQvLnRlc3QoQS50cmltKCkpO2Z1bmN0aW9uIFlBKEEsSSx0LGUsZyl7aWYoQi5pc0Z1bmN0aW9uKGUpKXJldHVybiBlLmNhbGwodGhpcyxJLHQpO2lmKGcmJihJPXQpLCEhQi5pc1N0cmluZyhJKSl7aWYoQi5pc1N0cmluZyhlKSlyZXR1cm4gSS5pbmRleE9mKGUpIT09LTE7aWYoQi5pc1JlZ0V4cChlKSlyZXR1cm4gZS50ZXN0KEkpfX1mdW5jdGlvbiBDZShBKXtyZXR1cm4gQS50cmltKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8oW2EtelxcZF0pKFxcdyopL2csKEksdCxlKT0+dC50b1VwcGVyQ2FzZSgpK2UpfWZ1bmN0aW9uIHNlKEEsSSl7bGV0IHQ9Qi50b0NhbWVsQ2FzZSgiICIrSSk7WyJnZXQiLCJzZXQiLCJoYXMiXS5mb3JFYWNoKGU9PntPYmplY3QuZGVmaW5lUHJvcGVydHkoQSxlK3Qse3ZhbHVlOmZ1bmN0aW9uKGcscixpKXtyZXR1cm4gdGhpc1tlXS5jYWxsKHRoaXMsSSxnLHIsaSl9LGNvbmZpZ3VyYWJsZTohMH0pfSl9dmFyIFQ9Y2xhc3N7Y29uc3RydWN0b3IoSSl7SSYmdGhpcy5zZXQoSSl9c2V0KEksdCxlKXtsZXQgZz10aGlzO2Z1bmN0aW9uIHIocyxhLG4pe2xldCBDPXooYSk7aWYoIUMpdGhyb3cgbmV3IEVycm9yKCJoZWFkZXIgbmFtZSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZyIpO2xldCBvPUIuZmluZEtleShnLEMpOyghb3x8Z1tvXT09PXZvaWQgMHx8bj09PSEwfHxuPT09dm9pZCAwJiZnW29dIT09ITEpJiYoZ1tvfHxhXT1mQShzKSl9bGV0IGk9KHMsYSk9PkIuZm9yRWFjaChzLChuLEMpPT5yKG4sQyxhKSk7cmV0dXJuIEIuaXNQbGFpbk9iamVjdChJKXx8SSBpbnN0YW5jZW9mIHRoaXMuY29uc3RydWN0b3I/aShJLHQpOkIuaXNTdHJpbmcoSSkmJihJPUkudHJpbSgpKSYmIUJlKEkpP2koU0koSSksdCk6SSE9bnVsbCYmcih0LEksZSksdGhpc31nZXQoSSx0KXtpZihJPXooSSksSSl7bGV0IGU9Qi5maW5kS2V5KHRoaXMsSSk7aWYoZSl7bGV0IGc9dGhpc1tlXTtpZighdClyZXR1cm4gZztpZih0PT09ITApcmV0dXJuIG9lKGcpO2lmKEIuaXNGdW5jdGlvbih0KSlyZXR1cm4gdC5jYWxsKHRoaXMsZyxlKTtpZihCLmlzUmVnRXhwKHQpKXJldHVybiB0LmV4ZWMoZyk7dGhyb3cgbmV3IFR5cGVFcnJvcigicGFyc2VyIG11c3QgYmUgYm9vbGVhbnxyZWdleHB8ZnVuY3Rpb24iKX19fWhhcyhJLHQpe2lmKEk9eihJKSxJKXtsZXQgZT1CLmZpbmRLZXkodGhpcyxJKTtyZXR1cm4hIShlJiZ0aGlzW2VdIT09dm9pZCAwJiYoIXR8fFlBKHRoaXMsdGhpc1tlXSxlLHQpKSl9cmV0dXJuITF9ZGVsZXRlKEksdCl7bGV0IGU9dGhpcyxnPSExO2Z1bmN0aW9uIHIoaSl7aWYoaT16KGkpLGkpe2xldCBzPUIuZmluZEtleShlLGkpO3MmJighdHx8WUEoZSxlW3NdLHMsdCkpJiYoZGVsZXRlIGVbc10sZz0hMCl9fXJldHVybiBCLmlzQXJyYXkoSSk/SS5mb3JFYWNoKHIpOnIoSSksZ31jbGVhcihJKXtsZXQgdD1PYmplY3Qua2V5cyh0aGlzKSxlPXQubGVuZ3RoLGc9ITE7Zm9yKDtlLS07KXtsZXQgcj10W2VdOyghSXx8WUEodGhpcyx0aGlzW3JdLHIsSSwhMCkpJiYoZGVsZXRlIHRoaXNbcl0sZz0hMCl9cmV0dXJuIGd9bm9ybWFsaXplKEkpe2xldCB0PXRoaXMsZT17fTtyZXR1cm4gQi5mb3JFYWNoKHRoaXMsKGcscik9PntsZXQgaT1CLmZpbmRLZXkoZSxyKTtpZihpKXt0W2ldPWZBKGcpLGRlbGV0ZSB0W3JdO3JldHVybn1sZXQgcz1JP0NlKHIpOlN0cmluZyhyKS50cmltKCk7cyE9PXImJmRlbGV0ZSB0W3JdLHRbc109ZkEoZyksZVtzXT0hMH0pLHRoaXN9Y29uY2F0KC4uLkkpe3JldHVybiB0aGlzLmNvbnN0cnVjdG9yLmNvbmNhdCh0aGlzLC4uLkkpfXRvSlNPTihJKXtsZXQgdD1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBCLmZvckVhY2godGhpcywoZSxnKT0+e2UhPW51bGwmJmUhPT0hMSYmKHRbZ109SSYmQi5pc0FycmF5KGUpP2Uuam9pbigiLCAiKTplKX0pLHR9W1N5bWJvbC5pdGVyYXRvcl0oKXtyZXR1cm4gT2JqZWN0LmVudHJpZXModGhpcy50b0pTT04oKSlbU3ltYm9sLml0ZXJhdG9yXSgpfXRvU3RyaW5nKCl7cmV0dXJuIE9iamVjdC5lbnRyaWVzKHRoaXMudG9KU09OKCkpLm1hcCgoW0ksdF0pPT5JKyI6ICIrdCkuam9pbihgJTBBYCl9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm4iQXhpb3NIZWFkZXJzIn1zdGF0aWMgZnJvbShJKXtyZXR1cm4gSSBpbnN0YW5jZW9mIHRoaXM/STpuZXcgdGhpcyhJKX1zdGF0aWMgY29uY2F0KEksLi4udCl7bGV0IGU9bmV3IHRoaXMoSSk7cmV0dXJuIHQuZm9yRWFjaChnPT5lLnNldChnKSksZX1zdGF0aWMgYWNjZXNzb3IoSSl7bGV0IGU9KHRoaXNbRkldPXRoaXNbRkldPXthY2Nlc3NvcnM6e319KS5hY2Nlc3NvcnMsZz10aGlzLnByb3RvdHlwZTtmdW5jdGlvbiByKGkpe2xldCBzPXooaSk7ZVtzXXx8KHNlKGcsaSksZVtzXT0hMCl9cmV0dXJuIEIuaXNBcnJheShJKT9JLmZvckVhY2gocik6cihJKSx0aGlzfX07VC5hY2Nlc3NvcihbIkNvbnRlbnQtVHlwZSIsIkNvbnRlbnQtTGVuZ3RoIiwiQWNjZXB0IiwiQWNjZXB0LUVuY29kaW5nIiwiVXNlci1BZ2VudCIsIkF1dGhvcml6YXRpb24iXSk7Qi5yZWR1Y2VEZXNjcmlwdG9ycyhULnByb3RvdHlwZSwoe3ZhbHVlOkF9LEkpPT57bGV0IHQ9SVswXS50b1VwcGVyQ2FzZSgpK0kuc2xpY2UoMSk7cmV0dXJue2dldDooKT0+QSxzZXQoZSl7dGhpc1t0XT1lfX19KTtCLmZyZWV6ZU1ldGhvZHMoVCk7dmFyIG09VDtmdW5jdGlvbiBfKEEsSSl7bGV0IHQ9dGhpc3x8TyxlPUl8fHQsZz1tLmZyb20oZS5oZWFkZXJzKSxyPWUuZGF0YTtyZXR1cm4gQi5mb3JFYWNoKEEsZnVuY3Rpb24ocyl7cj1zLmNhbGwodCxyLGcubm9ybWFsaXplKCksST9JLnN0YXR1czp2b2lkIDApfSksZy5ub3JtYWxpemUoKSxyfWZ1bmN0aW9uIHYoQSl7cmV0dXJuISEoQSYmQS5fX0NBTkNFTF9fKX1mdW5jdGlvbiBSSShBLEksdCl7bC5jYWxsKHRoaXMsQT8/ImNhbmNlbGVkIixsLkVSUl9DQU5DRUxFRCxJLHQpLHRoaXMubmFtZT0iQ2FuY2VsZWRFcnJvciJ9Qi5pbmhlcml0cyhSSSxsLHtfX0NBTkNFTF9fOiEwfSk7dmFyIEo9Ukk7ZnVuY3Rpb24gYkEoQSxJLHQpe2xldCBlPXQuY29uZmlnLnZhbGlkYXRlU3RhdHVzOyF0LnN0YXR1c3x8IWV8fGUodC5zdGF0dXMpP0EodCk6SShuZXcgbCgiUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAiK3Quc3RhdHVzLFtsLkVSUl9CQURfUkVRVUVTVCxsLkVSUl9CQURfUkVTUE9OU0VdW01hdGguZmxvb3IodC5zdGF0dXMvMTAwKS00XSx0LmNvbmZpZyx0LnJlcXVlc3QsdCkpfXZhciBOST13Lmhhc1N0YW5kYXJkQnJvd3NlckVudj97d3JpdGUoQSxJLHQsZSxnLHIpe2xldCBpPVtBKyI9IitlbmNvZGVVUklDb21wb25lbnQoSSldO0IuaXNOdW1iZXIodCkmJmkucHVzaCgiZXhwaXJlcz0iK25ldyBEYXRlKHQpLnRvR01UU3RyaW5nKCkpLEIuaXNTdHJpbmcoZSkmJmkucHVzaCgicGF0aD0iK2UpLEIuaXNTdHJpbmcoZykmJmkucHVzaCgiZG9tYWluPSIrZykscj09PSEwJiZpLnB1c2goInNlY3VyZSIpLGRvY3VtZW50LmNvb2tpZT1pLmpvaW4oIjsgIil9LHJlYWQoQSl7bGV0IEk9ZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoIihefDtcXFxccyopKCIrQSsiKT0oW147XSopIikpO3JldHVybiBJP2RlY29kZVVSSUNvbXBvbmVudChJWzNdKTpudWxsfSxyZW1vdmUoQSl7dGhpcy53cml0ZShBLCIiLERhdGUubm93KCktODY0ZTUpfX06e3dyaXRlKCl7fSxyZWFkKCl7cmV0dXJuIG51bGx9LHJlbW92ZSgpe319O2Z1bmN0aW9uIE1BKEEpe3JldHVybi9eKFthLXpdW2EtelxcZCtcXC0uXSo6KT9cXC9cXC8vaS50ZXN0KEEpfWZ1bmN0aW9uIHFBKEEsSSl7cmV0dXJuIEk/QS5yZXBsYWNlKC9cXC8rJC8sIiIpKyIvIitJLnJlcGxhY2UoL15cXC8rLywiIik6QX1mdW5jdGlvbiAkKEEsSSl7cmV0dXJuIEEmJiFNQShJKT9xQShBLEkpOkl9dmFyIFVJPXcuaGFzU3RhbmRhcmRCcm93c2VyRW52P2Z1bmN0aW9uKCl7bGV0IEk9Lyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSx0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKSxlO2Z1bmN0aW9uIGcocil7bGV0IGk9cjtyZXR1cm4gSSYmKHQuc2V0QXR0cmlidXRlKCJocmVmIixpKSxpPXQuaHJlZiksdC5zZXRBdHRyaWJ1dGUoImhyZWYiLGkpLHtocmVmOnQuaHJlZixwcm90b2NvbDp0LnByb3RvY29sP3QucHJvdG9jb2wucmVwbGFjZSgvOiQvLCIiKToiIixob3N0OnQuaG9zdCxzZWFyY2g6dC5zZWFyY2g/dC5zZWFyY2gucmVwbGFjZSgvXlxcPy8sIiIpOiIiLGhhc2g6dC5oYXNoP3QuaGFzaC5yZXBsYWNlKC9eJTIzLywiIik6IiIsaG9zdG5hbWU6dC5ob3N0bmFtZSxwb3J0OnQucG9ydCxwYXRobmFtZTp0LnBhdGhuYW1lLmNoYXJBdCgwKT09PSIvIj90LnBhdGhuYW1lOiIvIit0LnBhdGhuYW1lfX1yZXR1cm4gZT1nKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSxmdW5jdGlvbihpKXtsZXQgcz1CLmlzU3RyaW5nKGkpP2coaSk6aTtyZXR1cm4gcy5wcm90b2NvbD09PWUucHJvdG9jb2wmJnMuaG9zdD09PWUuaG9zdH19KCk6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4hMH19KCk7ZnVuY3Rpb24gS0EoQSl7bGV0IEk9L14oWy0rXFx3XXsxLDI1fSkoOj9cXC9cXC98OikvLmV4ZWMoQSk7cmV0dXJuIEkmJklbMV18fCIifWZ1bmN0aW9uIFFlKEEsSSl7QT1BfHwxMDtsZXQgdD1uZXcgQXJyYXkoQSksZT1uZXcgQXJyYXkoQSksZz0wLHI9MCxpO3JldHVybiBJPUkhPT12b2lkIDA/SToxZTMsZnVuY3Rpb24oYSl7bGV0IG49RGF0ZS5ub3coKSxDPWVbcl07aXx8KGk9biksdFtnXT1hLGVbZ109bjtsZXQgbz1yLGY9MDtmb3IoO28hPT1nOylmKz10W28rK10sbz1vJUE7aWYoZz0oZysxKSVBLGc9PT1yJiYocj0ocisxKSVBKSxuLWk8SSlyZXR1cm47bGV0IFE9QyYmbi1DO3JldHVybiBRP01hdGgucm91bmQoZioxZTMvUSk6dm9pZCAwfX12YXIgR0k9UWU7ZnVuY3Rpb24ga0koQSxJKXtsZXQgdD0wLGU9R0koNTAsMjUwKTtyZXR1cm4gZz0+e2xldCByPWcubG9hZGVkLGk9Zy5sZW5ndGhDb21wdXRhYmxlP2cudG90YWw6dm9pZCAwLHM9ci10LGE9ZShzKSxuPXI8PWk7dD1yO2xldCBDPXtsb2FkZWQ6cix0b3RhbDppLHByb2dyZXNzOmk/ci9pOnZvaWQgMCxieXRlczpzLHJhdGU6YXx8dm9pZCAwLGVzdGltYXRlZDphJiZpJiZuPyhpLXIpL2E6dm9pZCAwLGV2ZW50Omd9O0NbST8iZG93bmxvYWQiOiJ1cGxvYWQiXT0hMCxBKEMpfX12YXIgbmU9dHlwZW9mIFhNTEh0dHBSZXF1ZXN0PCJ1IixMST1uZSYmZnVuY3Rpb24oQSl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsZSl7bGV0IGc9QS5kYXRhLHI9bS5mcm9tKEEuaGVhZGVycykubm9ybWFsaXplKCkse3Jlc3BvbnNlVHlwZTppLHdpdGhYU1JGVG9rZW46c309QSxhO2Z1bmN0aW9uIG4oKXtBLmNhbmNlbFRva2VuJiZBLmNhbmNlbFRva2VuLnVuc3Vic2NyaWJlKGEpLEEuc2lnbmFsJiZBLnNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKCJhYm9ydCIsYSl9bGV0IEM7aWYoQi5pc0Zvcm1EYXRhKGcpKXtpZih3Lmhhc1N0YW5kYXJkQnJvd3NlckVudnx8dy5oYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnYpci5zZXRDb250ZW50VHlwZSghMSk7ZWxzZSBpZigoQz1yLmdldENvbnRlbnRUeXBlKCkpIT09ITEpe2xldFtjLC4uLnVdPUM/Qy5zcGxpdCgiOyIpLm1hcChkPT5kLnRyaW0oKSkuZmlsdGVyKEJvb2xlYW4pOltdO3Iuc2V0Q29udGVudFR5cGUoW2N8fCJtdWx0aXBhcnQvZm9ybS1kYXRhIiwuLi51XS5qb2luKCI7ICIpKX19bGV0IG89bmV3IFhNTEh0dHBSZXF1ZXN0O2lmKEEuYXV0aCl7bGV0IGM9QS5hdXRoLnVzZXJuYW1lfHwiIix1PUEuYXV0aC5wYXNzd29yZD91bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoQS5hdXRoLnBhc3N3b3JkKSk6IiI7ci5zZXQoIkF1dGhvcml6YXRpb24iLCJCYXNpYyAiK2J0b2EoYysiOiIrdSkpfWxldCBmPSQoQS5iYXNlVVJMLEEudXJsKTtvLm9wZW4oQS5tZXRob2QudG9VcHBlckNhc2UoKSxYKGYsQS5wYXJhbXMsQS5wYXJhbXNTZXJpYWxpemVyKSwhMCksby50aW1lb3V0PUEudGltZW91dDtmdW5jdGlvbiBRKCl7aWYoIW8pcmV0dXJuO2xldCBjPW0uZnJvbSgiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzImluIG8mJm8uZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpLGQ9e2RhdGE6IWl8fGk9PT0idGV4dCJ8fGk9PT0ianNvbiI/by5yZXNwb25zZVRleHQ6by5yZXNwb25zZSxzdGF0dXM6by5zdGF0dXMsc3RhdHVzVGV4dDpvLnN0YXR1c1RleHQsaGVhZGVyczpjLGNvbmZpZzpBLHJlcXVlc3Q6b307YkEoZnVuY3Rpb24oTil7dChOKSxuKCl9LGZ1bmN0aW9uKE4pe2UoTiksbigpfSxkKSxvPW51bGx9aWYoIm9ubG9hZGVuZCJpbiBvP28ub25sb2FkZW5kPVE6by5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXshb3x8by5yZWFkeVN0YXRlIT09NHx8by5zdGF0dXM9PT0wJiYhKG8ucmVzcG9uc2VVUkwmJm8ucmVzcG9uc2VVUkwuaW5kZXhPZigiZmlsZToiKT09PTApfHxzZXRUaW1lb3V0KFEpfSxvLm9uYWJvcnQ9ZnVuY3Rpb24oKXtvJiYoZShuZXcgbCgiUmVxdWVzdCBhYm9ydGVkIixsLkVDT05OQUJPUlRFRCxBLG8pKSxvPW51bGwpfSxvLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKG5ldyBsKCJOZXR3b3JrIEVycm9yIixsLkVSUl9ORVRXT1JLLEEsbykpLG89bnVsbH0sby5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXtsZXQgdT1BLnRpbWVvdXQ/InRpbWVvdXQgb2YgIitBLnRpbWVvdXQrIm1zIGV4Y2VlZGVkIjoidGltZW91dCBleGNlZWRlZCIsZD1BLnRyYW5zaXRpb25hbHx8YUE7QS50aW1lb3V0RXJyb3JNZXNzYWdlJiYodT1BLnRpbWVvdXRFcnJvck1lc3NhZ2UpLGUobmV3IGwodSxkLmNsYXJpZnlUaW1lb3V0RXJyb3I/bC5FVElNRURPVVQ6bC5FQ09OTkFCT1JURUQsQSxvKSksbz1udWxsfSx3Lmhhc1N0YW5kYXJkQnJvd3NlckVudiYmKHMmJkIuaXNGdW5jdGlvbihzKSYmKHM9cyhBKSksc3x8cyE9PSExJiZVSShmKSkpe2xldCBjPUEueHNyZkhlYWRlck5hbWUmJkEueHNyZkNvb2tpZU5hbWUmJk5JLnJlYWQoQS54c3JmQ29va2llTmFtZSk7YyYmci5zZXQoQS54c3JmSGVhZGVyTmFtZSxjKX1nPT09dm9pZCAwJiZyLnNldENvbnRlbnRUeXBlKG51bGwpLCJzZXRSZXF1ZXN0SGVhZGVyImluIG8mJkIuZm9yRWFjaChyLnRvSlNPTigpLGZ1bmN0aW9uKHUsZCl7by5zZXRSZXF1ZXN0SGVhZGVyKGQsdSl9KSxCLmlzVW5kZWZpbmVkKEEud2l0aENyZWRlbnRpYWxzKXx8KG8ud2l0aENyZWRlbnRpYWxzPSEhQS53aXRoQ3JlZGVudGlhbHMpLGkmJmkhPT0ianNvbiImJihvLnJlc3BvbnNlVHlwZT1BLnJlc3BvbnNlVHlwZSksdHlwZW9mIEEub25Eb3dubG9hZFByb2dyZXNzPT0iZnVuY3Rpb24iJiZvLmFkZEV2ZW50TGlzdGVuZXIoInByb2dyZXNzIixrSShBLm9uRG93bmxvYWRQcm9ncmVzcywhMCkpLHR5cGVvZiBBLm9uVXBsb2FkUHJvZ3Jlc3M9PSJmdW5jdGlvbiImJm8udXBsb2FkJiZvLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKCJwcm9ncmVzcyIsa0koQS5vblVwbG9hZFByb2dyZXNzKSksKEEuY2FuY2VsVG9rZW58fEEuc2lnbmFsKSYmKGE9Yz0+e28mJihlKCFjfHxjLnR5cGU/bmV3IEoobnVsbCxBLG8pOmMpLG8uYWJvcnQoKSxvPW51bGwpfSxBLmNhbmNlbFRva2VuJiZBLmNhbmNlbFRva2VuLnN1YnNjcmliZShhKSxBLnNpZ25hbCYmKEEuc2lnbmFsLmFib3J0ZWQ/YSgpOkEuc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoImFib3J0IixhKSkpO2xldCBFPUtBKGYpO2lmKEUmJncucHJvdG9jb2xzLmluZGV4T2YoRSk9PT0tMSl7ZShuZXcgbCgiVW5zdXBwb3J0ZWQgcHJvdG9jb2wgIitFKyI6IixsLkVSUl9CQURfUkVRVUVTVCxBKSk7cmV0dXJufW8uc2VuZChnfHxudWxsKX0pfTt2YXIgT0E9e2h0dHA6bkEseGhyOkxJfTtCLmZvckVhY2goT0EsKEEsSSk9PntpZihBKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KEEsIm5hbWUiLHt2YWx1ZTpJfSl9Y2F0Y2h7fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShBLCJhZGFwdGVyTmFtZSIse3ZhbHVlOkl9KX19KTt2YXIgSkk9QT0+YC0gJHtBfWAsRWU9QT0+Qi5pc0Z1bmN0aW9uKEEpfHxBPT09bnVsbHx8QT09PSExLGxBPXtnZXRBZGFwdGVyOkE9PntBPUIuaXNBcnJheShBKT9BOltBXTtsZXR7bGVuZ3RoOkl9PUEsdCxlLGc9e307Zm9yKGxldCByPTA7cjxJO3IrKyl7dD1BW3JdO2xldCBpO2lmKGU9dCwhRWUodCkmJihlPU9BWyhpPVN0cmluZyh0KSkudG9Mb3dlckNhc2UoKV0sZT09PXZvaWQgMCkpdGhyb3cgbmV3IGwoYFVua25vd24gYWRhcHRlciBcJyR7aX1cJ2ApO2lmKGUpYnJlYWs7Z1tpfHwiJTIzIityXT1lfWlmKCFlKXtsZXQgcj1PYmplY3QuZW50cmllcyhnKS5tYXAoKFtzLGFdKT0+YGFkYXB0ZXIgJHtzfSBgKyhhPT09ITE/ImlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGVudmlyb25tZW50IjoiaXMgbm90IGF2YWlsYWJsZSBpbiB0aGUgYnVpbGQiKSksaT1JP3IubGVuZ3RoPjE/YHNpbmNlIDolMEFgK3IubWFwKEpJKS5qb2luKGAlMEFgKToiICIrSkkoclswXSk6ImFzIG5vIGFkYXB0ZXIgc3BlY2lmaWVkIjt0aHJvdyBuZXcgbCgiVGhlcmUgaXMgbm8gc3VpdGFibGUgYWRhcHRlciB0byBkaXNwYXRjaCB0aGUgcmVxdWVzdCAiK2ksIkVSUl9OT1RfU1VQUE9SVCIpfXJldHVybiBlfSxhZGFwdGVyczpPQX07ZnVuY3Rpb24gVEEoQSl7aWYoQS5jYW5jZWxUb2tlbiYmQS5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCksQS5zaWduYWwmJkEuc2lnbmFsLmFib3J0ZWQpdGhyb3cgbmV3IEoobnVsbCxBKX1mdW5jdGlvbiBEQShBKXtyZXR1cm4gVEEoQSksQS5oZWFkZXJzPW0uZnJvbShBLmhlYWRlcnMpLEEuZGF0YT1fLmNhbGwoQSxBLnRyYW5zZm9ybVJlcXVlc3QpLFsicG9zdCIsInB1dCIsInBhdGNoIl0uaW5kZXhPZihBLm1ldGhvZCkhPT0tMSYmQS5oZWFkZXJzLnNldENvbnRlbnRUeXBlKCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLCExKSxsQS5nZXRBZGFwdGVyKEEuYWRhcHRlcnx8Ty5hZGFwdGVyKShBKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBUQShBKSxlLmRhdGE9Xy5jYWxsKEEsQS50cmFuc2Zvcm1SZXNwb25zZSxlKSxlLmhlYWRlcnM9bS5mcm9tKGUuaGVhZGVycyksZX0sZnVuY3Rpb24oZSl7cmV0dXJuIHYoZSl8fChUQShBKSxlJiZlLnJlc3BvbnNlJiYoZS5yZXNwb25zZS5kYXRhPV8uY2FsbChBLEEudHJhbnNmb3JtUmVzcG9uc2UsZS5yZXNwb25zZSksZS5yZXNwb25zZS5oZWFkZXJzPW0uZnJvbShlLnJlc3BvbnNlLmhlYWRlcnMpKSksUHJvbWlzZS5yZWplY3QoZSl9KX12YXIgSEk9QT0+QSBpbnN0YW5jZW9mIG0/QS50b0pTT04oKTpBO2Z1bmN0aW9uIEcoQSxJKXtJPUl8fHt9O2xldCB0PXt9O2Z1bmN0aW9uIGUobixDLG8pe3JldHVybiBCLmlzUGxhaW5PYmplY3QobikmJkIuaXNQbGFpbk9iamVjdChDKT9CLm1lcmdlLmNhbGwoe2Nhc2VsZXNzOm99LG4sQyk6Qi5pc1BsYWluT2JqZWN0KEMpP0IubWVyZ2Uoe30sQyk6Qi5pc0FycmF5KEMpP0Muc2xpY2UoKTpDfWZ1bmN0aW9uIGcobixDLG8pe2lmKEIuaXNVbmRlZmluZWQoQykpe2lmKCFCLmlzVW5kZWZpbmVkKG4pKXJldHVybiBlKHZvaWQgMCxuLG8pfWVsc2UgcmV0dXJuIGUobixDLG8pfWZ1bmN0aW9uIHIobixDKXtpZighQi5pc1VuZGVmaW5lZChDKSlyZXR1cm4gZSh2b2lkIDAsQyl9ZnVuY3Rpb24gaShuLEMpe2lmKEIuaXNVbmRlZmluZWQoQykpe2lmKCFCLmlzVW5kZWZpbmVkKG4pKXJldHVybiBlKHZvaWQgMCxuKX1lbHNlIHJldHVybiBlKHZvaWQgMCxDKX1mdW5jdGlvbiBzKG4sQyxvKXtpZihvIGluIEkpcmV0dXJuIGUobixDKTtpZihvIGluIEEpcmV0dXJuIGUodm9pZCAwLG4pfWxldCBhPXt1cmw6cixtZXRob2Q6cixkYXRhOnIsYmFzZVVSTDppLHRyYW5zZm9ybVJlcXVlc3Q6aSx0cmFuc2Zvcm1SZXNwb25zZTppLHBhcmFtc1NlcmlhbGl6ZXI6aSx0aW1lb3V0OmksdGltZW91dE1lc3NhZ2U6aSx3aXRoQ3JlZGVudGlhbHM6aSx3aXRoWFNSRlRva2VuOmksYWRhcHRlcjppLHJlc3BvbnNlVHlwZTppLHhzcmZDb29raWVOYW1lOmkseHNyZkhlYWRlck5hbWU6aSxvblVwbG9hZFByb2dyZXNzOmksb25Eb3dubG9hZFByb2dyZXNzOmksZGVjb21wcmVzczppLG1heENvbnRlbnRMZW5ndGg6aSxtYXhCb2R5TGVuZ3RoOmksYmVmb3JlUmVkaXJlY3Q6aSx0cmFuc3BvcnQ6aSxodHRwQWdlbnQ6aSxodHRwc0FnZW50OmksY2FuY2VsVG9rZW46aSxzb2NrZXRQYXRoOmkscmVzcG9uc2VFbmNvZGluZzppLHZhbGlkYXRlU3RhdHVzOnMsaGVhZGVyczoobixDKT0+ZyhISShuKSxISShDKSwhMCl9O3JldHVybiBCLmZvckVhY2goT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSxBLEkpKSxmdW5jdGlvbihDKXtsZXQgbz1hW0NdfHxnLGY9byhBW0NdLElbQ10sQyk7Qi5pc1VuZGVmaW5lZChmKSYmbyE9PXN8fCh0W0NdPWYpfSksdH12YXIgdUE9IjEuNi4yIjt2YXIgeEE9e307WyJvYmplY3QiLCJib29sZWFuIiwibnVtYmVyIiwiZnVuY3Rpb24iLCJzdHJpbmciLCJzeW1ib2wiXS5mb3JFYWNoKChBLEkpPT57eEFbQV09ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlPT09QXx8ImEiKyhJPDE/Im4gIjoiICIpK0F9fSk7dmFyIFlJPXt9O3hBLnRyYW5zaXRpb25hbD1mdW5jdGlvbihJLHQsZSl7ZnVuY3Rpb24gZyhyLGkpe3JldHVybiJbQXhpb3MgdiIrdUErIl0gVHJhbnNpdGlvbmFsIG9wdGlvbiBcJyIrcisiXCciK2krKGU/Ii4gIitlOiIiKX1yZXR1cm4ocixpLHMpPT57aWYoST09PSExKXRocm93IG5ldyBsKGcoaSwiIGhhcyBiZWVuIHJlbW92ZWQiKyh0PyIgaW4gIit0OiIiKSksbC5FUlJfREVQUkVDQVRFRCk7cmV0dXJuIHQmJiFZSVtpXSYmKFlJW2ldPSEwLGNvbnNvbGUud2FybihnKGksIiBoYXMgYmVlbiBkZXByZWNhdGVkIHNpbmNlIHYiK3QrIiBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSIpKSksST9JKHIsaSxzKTohMH19O2Z1bmN0aW9uIGFlKEEsSSx0KXtpZih0eXBlb2YgQSE9Im9iamVjdCIpdGhyb3cgbmV3IGwoIm9wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QiLGwuRVJSX0JBRF9PUFRJT05fVkFMVUUpO2xldCBlPU9iamVjdC5rZXlzKEEpLGc9ZS5sZW5ndGg7Zm9yKDtnLS0gPjA7KXtsZXQgcj1lW2ddLGk9SVtyXTtpZihpKXtsZXQgcz1BW3JdLGE9cz09PXZvaWQgMHx8aShzLHIsQSk7aWYoYSE9PSEwKXRocm93IG5ldyBsKCJvcHRpb24gIityKyIgbXVzdCBiZSAiK2EsbC5FUlJfQkFEX09QVElPTl9WQUxVRSk7Y29udGludWV9aWYodCE9PSEwKXRocm93IG5ldyBsKCJVbmtub3duIG9wdGlvbiAiK3IsbC5FUlJfQkFEX09QVElPTil9fXZhciBoQT17YXNzZXJ0T3B0aW9uczphZSx2YWxpZGF0b3JzOnhBfTt2YXIgSD1oQS52YWxpZGF0b3JzLHg9Y2xhc3N7Y29uc3RydWN0b3IoSSl7dGhpcy5kZWZhdWx0cz1JLHRoaXMuaW50ZXJjZXB0b3JzPXtyZXF1ZXN0Om5ldyBrQSxyZXNwb25zZTpuZXcga0F9fXJlcXVlc3QoSSx0KXt0eXBlb2YgST09InN0cmluZyI/KHQ9dHx8e30sdC51cmw9SSk6dD1JfHx7fSx0PUcodGhpcy5kZWZhdWx0cyx0KTtsZXR7dHJhbnNpdGlvbmFsOmUscGFyYW1zU2VyaWFsaXplcjpnLGhlYWRlcnM6cn09dDtlIT09dm9pZCAwJiZoQS5hc3NlcnRPcHRpb25zKGUse3NpbGVudEpTT05QYXJzaW5nOkgudHJhbnNpdGlvbmFsKEguYm9vbGVhbiksZm9yY2VkSlNPTlBhcnNpbmc6SC50cmFuc2l0aW9uYWwoSC5ib29sZWFuKSxjbGFyaWZ5VGltZW91dEVycm9yOkgudHJhbnNpdGlvbmFsKEguYm9vbGVhbil9LCExKSxnIT1udWxsJiYoQi5pc0Z1bmN0aW9uKGcpP3QucGFyYW1zU2VyaWFsaXplcj17c2VyaWFsaXplOmd9OmhBLmFzc2VydE9wdGlvbnMoZyx7ZW5jb2RlOkguZnVuY3Rpb24sc2VyaWFsaXplOkguZnVuY3Rpb259LCEwKSksdC5tZXRob2Q9KHQubWV0aG9kfHx0aGlzLmRlZmF1bHRzLm1ldGhvZHx8ImdldCIpLnRvTG93ZXJDYXNlKCk7bGV0IGk9ciYmQi5tZXJnZShyLmNvbW1vbixyW3QubWV0aG9kXSk7ciYmQi5mb3JFYWNoKFsiZGVsZXRlIiwiZ2V0IiwiaGVhZCIsInBvc3QiLCJwdXQiLCJwYXRjaCIsImNvbW1vbiJdLEU9PntkZWxldGUgcltFXX0pLHQuaGVhZGVycz1tLmNvbmNhdChpLHIpO2xldCBzPVtdLGE9ITA7dGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uKGMpe3R5cGVvZiBjLnJ1bldoZW49PSJmdW5jdGlvbiImJmMucnVuV2hlbih0KT09PSExfHwoYT1hJiZjLnN5bmNocm9ub3VzLHMudW5zaGlmdChjLmZ1bGZpbGxlZCxjLnJlamVjdGVkKSl9KTtsZXQgbj1bXTt0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uKGMpe24ucHVzaChjLmZ1bGZpbGxlZCxjLnJlamVjdGVkKX0pO2xldCBDLG89MCxmO2lmKCFhKXtsZXQgRT1bREEuYmluZCh0aGlzKSx2b2lkIDBdO2ZvcihFLnVuc2hpZnQuYXBwbHkoRSxzKSxFLnB1c2guYXBwbHkoRSxuKSxmPUUubGVuZ3RoLEM9UHJvbWlzZS5yZXNvbHZlKHQpO288ZjspQz1DLnRoZW4oRVtvKytdLEVbbysrXSk7cmV0dXJuIEN9Zj1zLmxlbmd0aDtsZXQgUT10O2ZvcihvPTA7bzxmOyl7bGV0IEU9c1tvKytdLGM9c1tvKytdO3RyeXtRPUUoUSl9Y2F0Y2godSl7Yy5jYWxsKHRoaXMsdSk7YnJlYWt9fXRyeXtDPURBLmNhbGwodGhpcyxRKX1jYXRjaChFKXtyZXR1cm4gUHJvbWlzZS5yZWplY3QoRSl9Zm9yKG89MCxmPW4ubGVuZ3RoO288ZjspQz1DLnRoZW4obltvKytdLG5bbysrXSk7cmV0dXJuIEN9Z2V0VXJpKEkpe0k9Ryh0aGlzLmRlZmF1bHRzLEkpO2xldCB0PSQoSS5iYXNlVVJMLEkudXJsKTtyZXR1cm4gWCh0LEkucGFyYW1zLEkucGFyYW1zU2VyaWFsaXplcil9fTtCLmZvckVhY2goWyJkZWxldGUiLCJnZXQiLCJoZWFkIiwib3B0aW9ucyJdLGZ1bmN0aW9uKEkpe3gucHJvdG90eXBlW0ldPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMucmVxdWVzdChHKGV8fHt9LHttZXRob2Q6SSx1cmw6dCxkYXRhOihlfHx7fSkuZGF0YX0pKX19KTtCLmZvckVhY2goWyJwb3N0IiwicHV0IiwicGF0Y2giXSxmdW5jdGlvbihJKXtmdW5jdGlvbiB0KGUpe3JldHVybiBmdW5jdGlvbihyLGkscyl7cmV0dXJuIHRoaXMucmVxdWVzdChHKHN8fHt9LHttZXRob2Q6SSxoZWFkZXJzOmU/eyJDb250ZW50LVR5cGUiOiJtdWx0aXBhcnQvZm9ybS1kYXRhIn06e30sdXJsOnIsZGF0YTppfSkpfX14LnByb3RvdHlwZVtJXT10KCkseC5wcm90b3R5cGVbSSsiRm9ybSJdPXQoITApfSk7dmFyIEFBPXg7dmFyIFBBPWNsYXNzIEF7Y29uc3RydWN0b3IoSSl7aWYodHlwZW9mIEkhPSJmdW5jdGlvbiIpdGhyb3cgbmV3IFR5cGVFcnJvcigiZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLiIpO2xldCB0O3RoaXMucHJvbWlzZT1uZXcgUHJvbWlzZShmdW5jdGlvbihyKXt0PXJ9KTtsZXQgZT10aGlzO3RoaXMucHJvbWlzZS50aGVuKGc9PntpZighZS5fbGlzdGVuZXJzKXJldHVybjtsZXQgcj1lLl9saXN0ZW5lcnMubGVuZ3RoO2Zvcig7ci0tID4wOyllLl9saXN0ZW5lcnNbcl0oZyk7ZS5fbGlzdGVuZXJzPW51bGx9KSx0aGlzLnByb21pc2UudGhlbj1nPT57bGV0IHIsaT1uZXcgUHJvbWlzZShzPT57ZS5zdWJzY3JpYmUocykscj1zfSkudGhlbihnKTtyZXR1cm4gaS5jYW5jZWw9ZnVuY3Rpb24oKXtlLnVuc3Vic2NyaWJlKHIpfSxpfSxJKGZ1bmN0aW9uKHIsaSxzKXtlLnJlYXNvbnx8KGUucmVhc29uPW5ldyBKKHIsaSxzKSx0KGUucmVhc29uKSl9KX10aHJvd0lmUmVxdWVzdGVkKCl7aWYodGhpcy5yZWFzb24pdGhyb3cgdGhpcy5yZWFzb259c3Vic2NyaWJlKEkpe2lmKHRoaXMucmVhc29uKXtJKHRoaXMucmVhc29uKTtyZXR1cm59dGhpcy5fbGlzdGVuZXJzP3RoaXMuX2xpc3RlbmVycy5wdXNoKEkpOnRoaXMuX2xpc3RlbmVycz1bSV19dW5zdWJzY3JpYmUoSSl7aWYoIXRoaXMuX2xpc3RlbmVycylyZXR1cm47bGV0IHQ9dGhpcy5fbGlzdGVuZXJzLmluZGV4T2YoSSk7dCE9PS0xJiZ0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKHQsMSl9c3RhdGljIHNvdXJjZSgpe2xldCBJO3JldHVybnt0b2tlbjpuZXcgQShmdW5jdGlvbihnKXtJPWd9KSxjYW5jZWw6SX19fSxiST1QQTtmdW5jdGlvbiBqQShBKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIEEuYXBwbHkobnVsbCx0KX19ZnVuY3Rpb24gV0EoQSl7cmV0dXJuIEIuaXNPYmplY3QoQSkmJkEuaXNBeGlvc0Vycm9yPT09ITB9dmFyIFpBPXtDb250aW51ZToxMDAsU3dpdGNoaW5nUHJvdG9jb2xzOjEwMSxQcm9jZXNzaW5nOjEwMixFYXJseUhpbnRzOjEwMyxPazoyMDAsQ3JlYXRlZDoyMDEsQWNjZXB0ZWQ6MjAyLE5vbkF1dGhvcml0YXRpdmVJbmZvcm1hdGlvbjoyMDMsTm9Db250ZW50OjIwNCxSZXNldENvbnRlbnQ6MjA1LFBhcnRpYWxDb250ZW50OjIwNixNdWx0aVN0YXR1czoyMDcsQWxyZWFkeVJlcG9ydGVkOjIwOCxJbVVzZWQ6MjI2LE11bHRpcGxlQ2hvaWNlczozMDAsTW92ZWRQZXJtYW5lbnRseTozMDEsRm91bmQ6MzAyLFNlZU90aGVyOjMwMyxOb3RNb2RpZmllZDozMDQsVXNlUHJveHk6MzA1LFVudXNlZDozMDYsVGVtcG9yYXJ5UmVkaXJlY3Q6MzA3LFBlcm1hbmVudFJlZGlyZWN0OjMwOCxCYWRSZXF1ZXN0OjQwMCxVbmF1dGhvcml6ZWQ6NDAxLFBheW1lbnRSZXF1aXJlZDo0MDIsRm9yYmlkZGVuOjQwMyxOb3RGb3VuZDo0MDQsTWV0aG9kTm90QWxsb3dlZDo0MDUsTm90QWNjZXB0YWJsZTo0MDYsUHJveHlBdXRoZW50aWNhdGlvblJlcXVpcmVkOjQwNyxSZXF1ZXN0VGltZW91dDo0MDgsQ29uZmxpY3Q6NDA5LEdvbmU6NDEwLExlbmd0aFJlcXVpcmVkOjQxMSxQcmVjb25kaXRpb25GYWlsZWQ6NDEyLFBheWxvYWRUb29MYXJnZTo0MTMsVXJpVG9vTG9uZzo0MTQsVW5zdXBwb3J0ZWRNZWRpYVR5cGU6NDE1LFJhbmdlTm90U2F0aXNmaWFibGU6NDE2LEV4cGVjdGF0aW9uRmFpbGVkOjQxNyxJbUFUZWFwb3Q6NDE4LE1pc2RpcmVjdGVkUmVxdWVzdDo0MjEsVW5wcm9jZXNzYWJsZUVudGl0eTo0MjIsTG9ja2VkOjQyMyxGYWlsZWREZXBlbmRlbmN5OjQyNCxUb29FYXJseTo0MjUsVXBncmFkZVJlcXVpcmVkOjQyNixQcmVjb25kaXRpb25SZXF1aXJlZDo0MjgsVG9vTWFueVJlcXVlc3RzOjQyOSxSZXF1ZXN0SGVhZGVyRmllbGRzVG9vTGFyZ2U6NDMxLFVuYXZhaWxhYmxlRm9yTGVnYWxSZWFzb25zOjQ1MSxJbnRlcm5hbFNlcnZlckVycm9yOjUwMCxOb3RJbXBsZW1lbnRlZDo1MDEsQmFkR2F0ZXdheTo1MDIsU2VydmljZVVuYXZhaWxhYmxlOjUwMyxHYXRld2F5VGltZW91dDo1MDQsSHR0cFZlcnNpb25Ob3RTdXBwb3J0ZWQ6NTA1LFZhcmlhbnRBbHNvTmVnb3RpYXRlczo1MDYsSW5zdWZmaWNpZW50U3RvcmFnZTo1MDcsTG9vcERldGVjdGVkOjUwOCxOb3RFeHRlbmRlZDo1MTAsTmV0d29ya0F1dGhlbnRpY2F0aW9uUmVxdWlyZWQ6NTExfTtPYmplY3QuZW50cmllcyhaQSkuZm9yRWFjaCgoW0EsSV0pPT57WkFbSV09QX0pO3ZhciBNST1aQTtmdW5jdGlvbiBxSShBKXtsZXQgST1uZXcgQUEoQSksdD1XKEFBLnByb3RvdHlwZS5yZXF1ZXN0LEkpO3JldHVybiBCLmV4dGVuZCh0LEFBLnByb3RvdHlwZSxJLHthbGxPd25LZXlzOiEwfSksQi5leHRlbmQodCxJLG51bGwse2FsbE93bktleXM6ITB9KSx0LmNyZWF0ZT1mdW5jdGlvbihnKXtyZXR1cm4gcUkoRyhBLGcpKX0sdH12YXIgaD1xSShPKTtoLkF4aW9zPUFBO2guQ2FuY2VsZWRFcnJvcj1KO2guQ2FuY2VsVG9rZW49Ykk7aC5pc0NhbmNlbD12O2guVkVSU0lPTj11QTtoLnRvRm9ybURhdGE9TDtoLkF4aW9zRXJyb3I9bDtoLkNhbmNlbD1oLkNhbmNlbGVkRXJyb3I7aC5hbGw9ZnVuY3Rpb24oSSl7cmV0dXJuIFByb21pc2UuYWxsKEkpfTtoLnNwcmVhZD1qQTtoLmlzQXhpb3NFcnJvcj1XQTtoLm1lcmdlQ29uZmlnPUc7aC5BeGlvc0hlYWRlcnM9bTtoLmZvcm1Ub0pTT049QT0+Y0EoQi5pc0hUTUxGb3JtKEEpP25ldyBGb3JtRGF0YShBKTpBKTtoLmdldEFkYXB0ZXI9bEEuZ2V0QWRhcHRlcjtoLkh0dHBTdGF0dXNDb2RlPU1JO2guZGVmYXVsdD1oO3ZhciBkQT1oO3ZhcntBeGlvczpvaSxBeGlvc0Vycm9yOkJpLENhbmNlbGVkRXJyb3I6Q2ksaXNDYW5jZWw6c2ksQ2FuY2VsVG9rZW46UWksVkVSU0lPTjpuaSxhbGw6RWksQ2FuY2VsOmFpLGlzQXhpb3NFcnJvcjpjaSxzcHJlYWQ6ZmksdG9Gb3JtRGF0YTpsaSxBeGlvc0hlYWRlcnM6RGksSHR0cFN0YXR1c0NvZGU6dWksZm9ybVRvSlNPTjpoaSxnZXRBZGFwdGVyOmRpLG1lcmdlQ29uZmlnOnlpfT1kQTt2YXIgSUEsayxYQSxWQT17ZW52OntlbXNjcmlwdGVuX25vdGlmeV9tZW1vcnlfZ3Jvd3RoOmZ1bmN0aW9uKEEpe1hBPW5ldyBVaW50OEFycmF5KGsuZXhwb3J0cy5tZW1vcnkuYnVmZmVyKX19fSx5QT1jbGFzc3tpbml0KCl7cmV0dXJuIElBfHwodHlwZW9mIGZldGNoPCJ1Ij9JQT1mZXRjaCgiZGF0YTphcHBsaWNhdGlvbi93YXNtO2Jhc2U2NCwiK0tJKS50aGVuKEk9PkkuYXJyYXlCdWZmZXIoKSkudGhlbihJPT5XZWJBc3NlbWJseS5pbnN0YW50aWF0ZShJLFZBKSkudGhlbih0aGlzLl9pbml0KTpJQT1XZWJBc3NlbWJseS5pbnN0YW50aWF0ZShCdWZmZXIuZnJvbShLSSwiYmFzZTY0IiksVkEpLnRoZW4odGhpcy5faW5pdCksSUEpfV9pbml0KEkpe2s9SS5pbnN0YW5jZSxWQS5lbnYuZW1zY3JpcHRlbl9ub3RpZnlfbWVtb3J5X2dyb3d0aCgwKX1kZWNvZGUoSSx0PTApe2lmKCFrKXRocm93IG5ldyBFcnJvcigiWlNURERlY29kZXI6IEF3YWl0IC5pbml0KCkgYmVmb3JlIGRlY29kaW5nLiIpO2xldCBlPUkuYnl0ZUxlbmd0aCxnPWsuZXhwb3J0cy5tYWxsb2MoZSk7WEEuc2V0KEksZyksdD10fHxOdW1iZXIoay5leHBvcnRzLlpTVERfZmluZERlY29tcHJlc3NlZFNpemUoZyxlKSk7bGV0IHI9ay5leHBvcnRzLm1hbGxvYyh0KSxpPWsuZXhwb3J0cy5aU1REX2RlY29tcHJlc3Mocix0LGcsZSkscz1YQS5zbGljZShyLHIraSk7cmV0dXJuIGsuZXhwb3J0cy5mcmVlKGcpLGsuZXhwb3J0cy5mcmVlKHIpLHN9fSxLST0iQUdGemJRRUFBQUFCYmc1Z0EzOS9md0YvWUFGL0FYOWdBbjkvQUdBQmZ3QmdCWDkvZjM5L0FYOWdBMzkvZndCZ0JIOS9mMzhCZjJBQUFYOWdBbjkvQVg5Z0IzOS9mMzkvZjM4QmYyQUNmMzhCZm1BSWYzOS9mMzkvZjM4QmYyQUZmMzkvZjM4QVlBNS9mMzkvZjM5L2YzOS9mMzkvZndGL0FpY0JBMlZ1ZGg5bGJYTmpjbWx3ZEdWdVgyNXZkR2xtZVY5dFpXMXZjbmxmWjNKdmQzUm9BQU1ESXlJSEFBQUJBUU1IQXdFQUNRUUFCUUVJQ0FFRkJnUUVCQU1HQUFBS0FBVUxEQTBHQkFVQmNBRUJBUVVIQVFHQUFvQ0FBZ1lJQVg4QlFZQ2pCQXNIcmdFTEJtMWxiVzl5ZVFJQUJtMWhiR3h2WXdBRkJHWnlaV1VBQmd4YVUxUkVYMmx6UlhKeWIzSUFFaGxhVTFSRVgyWnBibVJFWldOdmJYQnlaWE56WldSVGFYcGxBQndQV2xOVVJGOWtaV052YlhCeVpYTnpBQ0laWDE5cGJtUnBjbVZqZEY5bWRXNWpkR2x2Ymw5MFlXSnNaUUVBRUY5ZlpYSnlibTlmYkc5allYUnBiMjRBQVFsemRHRmphMU5oZG1VQUJ3eHpkR0ZqYTFKbGMzUnZjbVVBQ0FwemRHRmphMEZzYkc5akFBa0tpL0lCSWdVQVFZUWZDek1CQVg4Z0FnUkFJQUFoQXdOQUlBTWdBUzBBQURvQUFDQURRUUZxSVFNZ0FVRUJhaUVCSUFKQkFXc2lBZzBBQ3dzZ0FBc3BBUUYvSUFJRVFDQUFJUU1EUUNBRElBRTZBQUFnQTBFQmFpRURJQUpCQVdzaUFnMEFDd3NnQUF0c0FRSi9RWUFmS0FJQUlnRWdBRUVIYWtGNGNTSUNhaUVBQWtBZ0FrRUFJQUFnQVUwYkRRQWdBRDhBUVJCMFN3UkFJQUEvQUVFUWRHdEIvLzhEYWtFUWRrQUFRWDlHQkg5QkFBVkJBQkFBUVFFTFJRMEJDMEdBSHlBQU5nSUFJQUVQQzBHRUgwRXdOZ0lBUVg4THVTY0JDMzhqQUVFUWF5SUtKQUFDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFCQjlBRk5CRUJCaUI4b0FnQWlCa0VRSUFCQkMycEJlSEVnQUVFTFNSc2lCVUVEZGlJQWRpSUJRUU54QkVBQ1FDQUJRWDl6UVFGeElBQnFJZ0pCQTNRaUFVR3dIMm9pQUNBQlFiZ2ZhaWdDQUNJQktBSUlJZ1JHQkVCQmlCOGdCa0YrSUFKM2NUWUNBQXdCQ3lBRUlBQTJBZ3dnQUNBRU5nSUlDeUFCUVFocUlRQWdBU0FDUVFOMElnSkJBM0kyQWdRZ0FTQUNhaUlCSUFFb0FnUkJBWEkyQWdRTUR3c2dCVUdRSHlnQ0FDSUhUUTBCSUFFRVFBSkFRUUlnQUhRaUFrRUFJQUpyY2lBQklBQjBjV2dpQVVFRGRDSUFRYkFmYWlJQ0lBQkJ1QjlxS0FJQUlnQW9BZ2dpQkVZRVFFR0lIeUFHUVg0Z0FYZHhJZ1kyQWdBTUFRc2dCQ0FDTmdJTUlBSWdCRFlDQ0FzZ0FDQUZRUU55TmdJRUlBQWdCV29pQ0NBQlFRTjBJZ0VnQldzaUJFRUJjallDQkNBQUlBRnFJQVEyQWdBZ0J3UkFJQWRCZUhGQnNCOXFJUUZCbkI4b0FnQWhBZ0ovSUFaQkFTQUhRUU4yZENJRGNVVUVRRUdJSHlBRElBWnlOZ0lBSUFFTUFRc2dBU2dDQ0FzaEF5QUJJQUkyQWdnZ0F5QUNOZ0lNSUFJZ0FUWUNEQ0FDSUFNMkFnZ0xJQUJCQ0dvaEFFR2NIeUFJTmdJQVFaQWZJQVEyQWdBTUR3dEJqQjhvQWdBaUMwVU5BU0FMYUVFQ2RFRzRJV29vQWdBaUFpZ0NCRUY0Y1NBRmF5RURJQUloQVFOQUFrQWdBU2dDRUNJQVJRUkFJQUVvQWhRaUFFVU5BUXNnQUNnQ0JFRjRjU0FGYXlJQklBTWdBU0FEU1NJQkd5RURJQUFnQWlBQkd5RUNJQUFoQVF3QkN3c2dBaWdDR0NFSklBSWdBaWdDRENJRVJ3UkFRWmdmS0FJQUdpQUNLQUlJSWdBZ0JEWUNEQ0FFSUFBMkFnZ01EZ3NnQWtFVWFpSUJLQUlBSWdCRkJFQWdBaWdDRUNJQVJRMERJQUpCRUdvaEFRc0RRQ0FCSVFnZ0FDSUVRUlJxSWdFb0FnQWlBQTBBSUFSQkVHb2hBU0FFS0FJUUlnQU5BQXNnQ0VFQU5nSUFEQTBMUVg4aEJTQUFRYjkvU3cwQUlBQkJDMm9pQUVGNGNTRUZRWXdmS0FJQUlnaEZEUUJCQUNBRmF5RURBa0FDUUFKQUFuOUJBQ0FGUVlBQ1NRMEFHa0VmSUFWQi8vLy9CMHNOQUJvZ0JVRW1JQUJCQ0habklnQnJka0VCY1NBQVFRRjBhMEUrYWdzaUIwRUNkRUc0SVdvb0FnQWlBVVVFUUVFQUlRQU1BUXRCQUNFQUlBVkJHU0FIUVFGMmEwRUFJQWRCSDBjYmRDRUNBMEFDUUNBQktBSUVRWGh4SUFWcklnWWdBMDhOQUNBQklRUWdCaUlERFFCQkFDRURJQUVoQUF3REN5QUFJQUVvQWhRaUJpQUdJQUVnQWtFZGRrRUVjV29vQWhBaUFVWWJJQUFnQmhzaEFDQUNRUUYwSVFJZ0FRMEFDd3NnQUNBRWNrVUVRRUVBSVFSQkFpQUhkQ0lBUVFBZ0FHdHlJQWh4SWdCRkRRTWdBR2hCQW5SQnVDRnFLQUlBSVFBTElBQkZEUUVMQTBBZ0FDZ0NCRUY0Y1NBRmF5SUNJQU5KSVFFZ0FpQURJQUViSVFNZ0FDQUVJQUViSVFRZ0FDZ0NFQ0lCQkg4Z0FRVWdBQ2dDRkFzaUFBMEFDd3NnQkVVTkFDQURRWkFmS0FJQUlBVnJUdzBBSUFRb0FoZ2hCeUFFSUFRb0Fnd2lBa2NFUUVHWUh5Z0NBQm9nQkNnQ0NDSUFJQUkyQWd3Z0FpQUFOZ0lJREF3TElBUkJGR29pQVNnQ0FDSUFSUVJBSUFRb0FoQWlBRVVOQXlBRVFSQnFJUUVMQTBBZ0FTRUdJQUFpQWtFVWFpSUJLQUlBSWdBTkFDQUNRUkJxSVFFZ0FpZ0NFQ0lBRFFBTElBWkJBRFlDQUF3TEN5QUZRWkFmS0FJQUlnUk5CRUJCbkI4b0FnQWhBQUpBSUFRZ0JXc2lBVUVRVHdSQUlBQWdCV29pQWlBQlFRRnlOZ0lFSUFBZ0JHb2dBVFlDQUNBQUlBVkJBM0kyQWdRTUFRc2dBQ0FFUVFOeU5nSUVJQUFnQkdvaUFTQUJLQUlFUVFGeU5nSUVRUUFoQWtFQUlRRUxRWkFmSUFFMkFnQkJuQjhnQWpZQ0FDQUFRUWhxSVFBTURRc2dCVUdVSHlnQ0FDSUNTUVJBUVpRZklBSWdCV3NpQVRZQ0FFR2dIMEdnSHlnQ0FDSUFJQVZxSWdJMkFnQWdBaUFCUVFGeU5nSUVJQUFnQlVFRGNqWUNCQ0FBUVFocUlRQU1EUXRCQUNFQUlBVkJMMm9pQXdKL1FlQWlLQUlBQkVCQjZDSW9BZ0FNQVF0QjdDSkNmemNDQUVIa0lrS0FvSUNBZ0lBRU53SUFRZUFpSUFwQkRHcEJjSEZCMktyVnFnVnpOZ0lBUWZRaVFRQTJBZ0JCeENKQkFEWUNBRUdBSUFzaUFXb2lCa0VBSUFGcklnaHhJZ0VnQlUwTkRFSEFJaWdDQUNJRUJFQkJ1Q0lvQWdBaUJ5QUJhaUlKSUFkTklBUWdDVWx5RFEwTEFrQkJ4Q0l0QUFCQkJIRkZCRUFDUUFKQUFrQUNRRUdnSHlnQ0FDSUVCRUJCeUNJaEFBTkFJQVFnQUNnQ0FDSUhUd1JBSUFjZ0FDZ0NCR29nQkVzTkF3c2dBQ2dDQ0NJQURRQUxDMEVBRUFRaUFrRi9SZzBESUFFaEJrSGtJaWdDQUNJQVFRRnJJZ1FnQW5FRVFDQUJJQUpySUFJZ0JHcEJBQ0FBYTNGcUlRWUxJQVVnQms4TkEwSEFJaWdDQUNJQUJFQkJ1Q0lvQWdBaUJDQUdhaUlJSUFSTklBQWdDRWx5RFFRTElBWVFCQ0lBSUFKSERRRU1CUXNnQmlBQ2F5QUljU0lHRUFRaUFpQUFLQUlBSUFBb0FnUnFSZzBCSUFJaEFBc2dBRUYvUmcwQklBVkJNR29nQmswRVFDQUFJUUlNQkF0QjZDSW9BZ0FpQWlBRElBWnJha0VBSUFKcmNTSUNFQVJCZjBZTkFTQUNJQVpxSVFZZ0FDRUNEQU1MSUFKQmYwY05BZ3RCeENKQnhDSW9BZ0JCQkhJMkFnQUxJQUVRQkNJQ1FYOUdRUUFRQkNJQVFYOUdjaUFBSUFKTmNnMEZJQUFnQW1zaUJpQUZRU2hxVFEwRkMwRzRJa0c0SWlnQ0FDQUdhaUlBTmdJQVFid2lLQUlBSUFCSkJFQkJ2Q0lnQURZQ0FBc0NRRUdnSHlnQ0FDSURCRUJCeUNJaEFBTkFJQUlnQUNnQ0FDSUJJQUFvQWdRaUJHcEdEUUlnQUNnQ0NDSUFEUUFMREFRTFFaZ2ZLQUlBSWdCQkFDQUFJQUpORzBVRVFFR1lIeUFDTmdJQUMwRUFJUUJCekNJZ0JqWUNBRUhJSWlBQ05nSUFRYWdmUVg4MkFnQkJyQjlCNENJb0FnQTJBZ0JCMUNKQkFEWUNBQU5BSUFCQkEzUWlBVUc0SDJvZ0FVR3dIMm9pQkRZQ0FDQUJRYndmYWlBRU5nSUFJQUJCQVdvaUFFRWdSdzBBQzBHVUh5QUdRU2hySWdCQmVDQUNhMEVIY1NJQmF5SUVOZ0lBUWFBZklBRWdBbW9pQVRZQ0FDQUJJQVJCQVhJMkFnUWdBQ0FDYWtFb05nSUVRYVFmUWZBaUtBSUFOZ0lBREFRTElBSWdBMDBnQVNBRFMzSU5BaUFBS0FJTVFRaHhEUUlnQUNBRUlBWnFOZ0lFUWFBZklBTkJlQ0FEYTBFSGNTSUFhaUlCTmdJQVFaUWZRWlFmS0FJQUlBWnFJZ0lnQUdzaUFEWUNBQ0FCSUFCQkFYSTJBZ1FnQWlBRGFrRW9OZ0lFUWFRZlFmQWlLQUlBTmdJQURBTUxRUUFoQkF3S0MwRUFJUUlNQ0F0Qm1COG9BZ0FnQWtzRVFFR1lIeUFDTmdJQUN5QUNJQVpxSVFGQnlDSWhBQUpBQWtBQ1FBTkFJQUVnQUNnQ0FFY0VRQ0FBS0FJSUlnQU5BUXdDQ3dzZ0FDMEFERUVJY1VVTkFRdEJ5Q0loQUFOQUlBTWdBQ2dDQUNJQlR3UkFJQUVnQUNnQ0JHb2lCQ0FEU3cwREN5QUFLQUlJSVFBTUFBc0FDeUFBSUFJMkFnQWdBQ0FBS0FJRUlBWnFOZ0lFSUFKQmVDQUNhMEVIY1dvaUJ5QUZRUU55TmdJRUlBRkJlQ0FCYTBFSGNXb2lCaUFGSUFkcUlnVnJJUUFnQXlBR1JnUkFRYUFmSUFVMkFnQkJsQjlCbEI4b0FnQWdBR29pQURZQ0FDQUZJQUJCQVhJMkFnUU1DQXRCbkI4b0FnQWdCa1lFUUVHY0h5QUZOZ0lBUVpBZlFaQWZLQUlBSUFCcUlnQTJBZ0FnQlNBQVFRRnlOZ0lFSUFBZ0JXb2dBRFlDQUF3SUN5QUdLQUlFSWdOQkEzRkJBVWNOQmlBRFFYaHhJUWtnQTBIL0FVMEVRQ0FHS0FJTUlnRWdCaWdDQ0NJQ1JnUkFRWWdmUVlnZktBSUFRWDRnQTBFRGRuZHhOZ0lBREFjTElBSWdBVFlDRENBQklBSTJBZ2dNQmdzZ0JpZ0NHQ0VJSUFZZ0JpZ0NEQ0lDUndSQUlBWW9BZ2dpQVNBQ05nSU1JQUlnQVRZQ0NBd0ZDeUFHUVJScUlnRW9BZ0FpQTBVRVFDQUdLQUlRSWdORkRRUWdCa0VRYWlFQkN3TkFJQUVoQkNBRElnSkJGR29pQVNnQ0FDSUREUUFnQWtFUWFpRUJJQUlvQWhBaUF3MEFDeUFFUVFBMkFnQU1CQXRCbEI4Z0JrRW9heUlBUVhnZ0FtdEJCM0VpQVdzaUNEWUNBRUdnSHlBQklBSnFJZ0UyQWdBZ0FTQUlRUUZ5TmdJRUlBQWdBbXBCS0RZQ0JFR2tIMEh3SWlnQ0FEWUNBQ0FESUFSQkp5QUVhMEVIY1dwQkwyc2lBQ0FBSUFOQkVHcEpHeUlCUVJzMkFnUWdBVUhRSWlrQ0FEY0NFQ0FCUWNnaUtRSUFOd0lJUWRBaUlBRkJDR28yQWdCQnpDSWdCallDQUVISUlpQUNOZ0lBUWRRaVFRQTJBZ0FnQVVFWWFpRUFBMEFnQUVFSE5nSUVJQUJCQ0dvZ0FFRUVhaUVBSUFSSkRRQUxJQUVnQTBZTkFDQUJJQUVvQWdSQmZuRTJBZ1FnQXlBQklBTnJJZ0pCQVhJMkFnUWdBU0FDTmdJQUlBSkIvd0ZOQkVBZ0FrRjRjVUd3SDJvaEFBSi9RWWdmS0FJQUlnRkJBU0FDUVFOMmRDSUNjVVVFUUVHSUh5QUJJQUp5TmdJQUlBQU1BUXNnQUNnQ0NBc2hBU0FBSUFNMkFnZ2dBU0FETmdJTUlBTWdBRFlDRENBRElBRTJBZ2dNQVF0Qkh5RUFJQUpCLy8vL0IwMEVRQ0FDUVNZZ0FrRUlkbWNpQUd0MlFRRnhJQUJCQVhSclFUNXFJUUFMSUFNZ0FEWUNIQ0FEUWdBM0FoQWdBRUVDZEVHNElXb2hBUUpBQWtCQmpCOG9BZ0FpQkVFQklBQjBJZ1p4UlFSQVFZd2ZJQVFnQm5JMkFnQWdBU0FETmdJQURBRUxJQUpCR1NBQVFRRjJhMEVBSUFCQkgwY2JkQ0VBSUFFb0FnQWhCQU5BSUFRaUFTZ0NCRUY0Y1NBQ1JnMENJQUJCSFhZaEJDQUFRUUYwSVFBZ0FTQUVRUVJ4YWlJR0tBSVFJZ1FOQUFzZ0JpQUROZ0lRQ3lBRElBRTJBaGdnQXlBRE5nSU1JQU1nQXpZQ0NBd0JDeUFCS0FJSUlnQWdBellDRENBQklBTTJBZ2dnQTBFQU5nSVlJQU1nQVRZQ0RDQURJQUEyQWdnTFFaUWZLQUlBSWdBZ0JVME5BRUdVSHlBQUlBVnJJZ0UyQWdCQm9COUJvQjhvQWdBaUFDQUZhaUlDTmdJQUlBSWdBVUVCY2pZQ0JDQUFJQVZCQTNJMkFnUWdBRUVJYWlFQURBZ0xRWVFmUVRBMkFnQkJBQ0VBREFjTFFRQWhBZ3NnQ0VVTkFBSkFJQVlvQWh3aUFVRUNkRUc0SVdvaUJDZ0NBQ0FHUmdSQUlBUWdBallDQUNBQ0RRRkJqQjlCakI4b0FnQkJmaUFCZDNFMkFnQU1BZ3NnQ0VFUVFSUWdDQ2dDRUNBR1JodHFJQUkyQWdBZ0FrVU5BUXNnQWlBSU5nSVlJQVlvQWhBaUFRUkFJQUlnQVRZQ0VDQUJJQUkyQWhnTElBWW9BaFFpQVVVTkFDQUNJQUUyQWhRZ0FTQUNOZ0lZQ3lBQUlBbHFJUUFnQmlBSmFpSUdLQUlFSVFNTElBWWdBMEYrY1RZQ0JDQUZJQUJCQVhJMkFnUWdBQ0FGYWlBQU5nSUFJQUJCL3dGTkJFQWdBRUY0Y1VHd0gyb2hBUUovUVlnZktBSUFJZ0pCQVNBQVFRTjJkQ0lBY1VVRVFFR0lIeUFBSUFKeU5nSUFJQUVNQVFzZ0FTZ0NDQXNoQUNBQklBVTJBZ2dnQUNBRk5nSU1JQVVnQVRZQ0RDQUZJQUEyQWdnTUFRdEJIeUVESUFCQi8vLy9CMDBFUUNBQVFTWWdBRUVJZG1jaUFXdDJRUUZ4SUFGQkFYUnJRVDVxSVFNTElBVWdBellDSENBRlFnQTNBaEFnQTBFQ2RFRzRJV29oQVFKQUFrQkJqQjhvQWdBaUFrRUJJQU4wSWdSeFJRUkFRWXdmSUFJZ0JISTJBZ0FnQVNBRk5nSUFEQUVMSUFCQkdTQURRUUYyYTBFQUlBTkJIMGNiZENFRElBRW9BZ0FoQWdOQUlBSWlBU2dDQkVGNGNTQUFSZzBDSUFOQkhYWWhBaUFEUVFGMElRTWdBU0FDUVFSeGFpSUVLQUlRSWdJTkFBc2dCQ0FGTmdJUUN5QUZJQUUyQWhnZ0JTQUZOZ0lNSUFVZ0JUWUNDQXdCQ3lBQktBSUlJZ0FnQlRZQ0RDQUJJQVUyQWdnZ0JVRUFOZ0lZSUFVZ0FUWUNEQ0FGSUFBMkFnZ0xJQWRCQ0dvaEFBd0NDd0pBSUFkRkRRQUNRQ0FFS0FJY0lnQkJBblJCdUNGcUlnRW9BZ0FnQkVZRVFDQUJJQUkyQWdBZ0FnMEJRWXdmSUFoQmZpQUFkM0VpQ0RZQ0FBd0NDeUFIUVJCQkZDQUhLQUlRSUFSR0cyb2dBallDQUNBQ1JRMEJDeUFDSUFjMkFoZ2dCQ2dDRUNJQUJFQWdBaUFBTmdJUUlBQWdBallDR0FzZ0JDZ0NGQ0lBUlEwQUlBSWdBRFlDRkNBQUlBSTJBaGdMQWtBZ0EwRVBUUVJBSUFRZ0F5QUZhaUlBUVFOeU5nSUVJQUFnQkdvaUFDQUFLQUlFUVFGeU5nSUVEQUVMSUFRZ0JVRURjallDQkNBRUlBVnFJZ0lnQTBFQmNqWUNCQ0FDSUFOcUlBTTJBZ0FnQTBIL0FVMEVRQ0FEUVhoeFFiQWZhaUVBQW45QmlCOG9BZ0FpQVVFQklBTkJBM1owSWdOeFJRUkFRWWdmSUFFZ0EzSTJBZ0FnQUF3QkN5QUFLQUlJQ3lFQklBQWdBallDQ0NBQklBSTJBZ3dnQWlBQU5nSU1JQUlnQVRZQ0NBd0JDMEVmSVFBZ0EwSC8vLzhIVFFSQUlBTkJKaUFEUVFoMlp5SUFhM1pCQVhFZ0FFRUJkR3RCUG1vaEFBc2dBaUFBTmdJY0lBSkNBRGNDRUNBQVFRSjBRYmdoYWlFQkFrQUNRQ0FJUVFFZ0FIUWlCbkZGQkVCQmpCOGdCaUFJY2pZQ0FDQUJJQUkyQWdBTUFRc2dBMEVaSUFCQkFYWnJRUUFnQUVFZlJ4dDBJUUFnQVNnQ0FDRUZBMEFnQlNJQktBSUVRWGh4SUFOR0RRSWdBRUVkZGlFR0lBQkJBWFFoQUNBQklBWkJCSEZxSWdZb0FoQWlCUTBBQ3lBR0lBSTJBaEFMSUFJZ0FUWUNHQ0FDSUFJMkFnd2dBaUFDTmdJSURBRUxJQUVvQWdnaUFDQUNOZ0lNSUFFZ0FqWUNDQ0FDUVFBMkFoZ2dBaUFCTmdJTUlBSWdBRFlDQ0FzZ0JFRUlhaUVBREFFTEFrQWdDVVVOQUFKQUlBSW9BaHdpQUVFQ2RFRzRJV29pQVNnQ0FDQUNSZ1JBSUFFZ0JEWUNBQ0FFRFFGQmpCOGdDMEYrSUFCM2NUWUNBQXdDQ3lBSlFSQkJGQ0FKS0FJUUlBSkdHMm9nQkRZQ0FDQUVSUTBCQ3lBRUlBazJBaGdnQWlnQ0VDSUFCRUFnQkNBQU5nSVFJQUFnQkRZQ0dBc2dBaWdDRkNJQVJRMEFJQVFnQURZQ0ZDQUFJQVEyQWhnTEFrQWdBMEVQVFFSQUlBSWdBeUFGYWlJQVFRTnlOZ0lFSUFBZ0Ftb2lBQ0FBS0FJRVFRRnlOZ0lFREFFTElBSWdCVUVEY2pZQ0JDQUNJQVZxSWdRZ0EwRUJjallDQkNBRElBUnFJQU0yQWdBZ0J3UkFJQWRCZUhGQnNCOXFJUUJCbkI4b0FnQWhBUUovUVFFZ0IwRURkblFpQlNBR2NVVUVRRUdJSHlBRklBWnlOZ0lBSUFBTUFRc2dBQ2dDQ0FzaEJpQUFJQUUyQWdnZ0JpQUJOZ0lNSUFFZ0FEWUNEQ0FCSUFZMkFnZ0xRWndmSUFRMkFnQkJrQjhnQXpZQ0FBc2dBa0VJYWlFQUN5QUtRUkJxSkFBZ0FBdlNDd0VIZndKQUlBQkZEUUFnQUVFSWF5SUNJQUJCQkdzb0FnQWlBVUY0Y1NJQWFpRUZBa0FnQVVFQmNRMEFJQUZCQTNGRkRRRWdBaUFDS0FJQUlnRnJJZ0pCbUI4b0FnQkpEUUVnQUNBQmFpRUFBa0FDUUVHY0h5Z0NBQ0FDUndSQUlBRkIvd0ZOQkVBZ0FVRURkaUVFSUFJb0Fnd2lBU0FDS0FJSUlnTkdCRUJCaUI5QmlCOG9BZ0JCZmlBRWQzRTJBZ0FNQlFzZ0F5QUJOZ0lNSUFFZ0F6WUNDQXdFQ3lBQ0tBSVlJUVlnQWlBQ0tBSU1JZ0ZIQkVBZ0FpZ0NDQ0lESUFFMkFnd2dBU0FETmdJSURBTUxJQUpCRkdvaUJDZ0NBQ0lEUlFSQUlBSW9BaEFpQTBVTkFpQUNRUkJxSVFRTEEwQWdCQ0VISUFNaUFVRVVhaUlFS0FJQUlnTU5BQ0FCUVJCcUlRUWdBU2dDRUNJRERRQUxJQWRCQURZQ0FBd0NDeUFGS0FJRUlnRkJBM0ZCQTBjTkFrR1FIeUFBTmdJQUlBVWdBVUYrY1RZQ0JDQUNJQUJCQVhJMkFnUWdCU0FBTmdJQUR3dEJBQ0VCQ3lBR1JRMEFBa0FnQWlnQ0hDSURRUUowUWJnaGFpSUVLQUlBSUFKR0JFQWdCQ0FCTmdJQUlBRU5BVUdNSDBHTUh5Z0NBRUYrSUFOM2NUWUNBQXdDQ3lBR1FSQkJGQ0FHS0FJUUlBSkdHMm9nQVRZQ0FDQUJSUTBCQ3lBQklBWTJBaGdnQWlnQ0VDSURCRUFnQVNBRE5nSVFJQU1nQVRZQ0dBc2dBaWdDRkNJRFJRMEFJQUVnQXpZQ0ZDQURJQUUyQWhnTElBSWdCVThOQUNBRktBSUVJZ0ZCQVhGRkRRQUNRQUpBQWtBQ1FDQUJRUUp4UlFSQVFhQWZLQUlBSUFWR0JFQkJvQjhnQWpZQ0FFR1VIMEdVSHlnQ0FDQUFhaUlBTmdJQUlBSWdBRUVCY2pZQ0JDQUNRWndmS0FJQVJ3MEdRWkFmUVFBMkFnQkJuQjlCQURZQ0FBOExRWndmS0FJQUlBVkdCRUJCbkI4Z0FqWUNBRUdRSDBHUUh5Z0NBQ0FBYWlJQU5nSUFJQUlnQUVFQmNqWUNCQ0FBSUFKcUlBQTJBZ0FQQ3lBQlFYaHhJQUJxSVFBZ0FVSC9BVTBFUUNBQlFRTjJJUVFnQlNnQ0RDSUJJQVVvQWdnaUEwWUVRRUdJSDBHSUh5Z0NBRUYrSUFSM2NUWUNBQXdGQ3lBRElBRTJBZ3dnQVNBRE5nSUlEQVFMSUFVb0FoZ2hCaUFGSUFVb0Fnd2lBVWNFUUVHWUh5Z0NBQm9nQlNnQ0NDSURJQUUyQWd3Z0FTQUROZ0lJREFNTElBVkJGR29pQkNnQ0FDSURSUVJBSUFVb0FoQWlBMFVOQWlBRlFSQnFJUVFMQTBBZ0JDRUhJQU1pQVVFVWFpSUVLQUlBSWdNTkFDQUJRUkJxSVFRZ0FTZ0NFQ0lERFFBTElBZEJBRFlDQUF3Q0N5QUZJQUZCZm5FMkFnUWdBaUFBUVFGeU5nSUVJQUFnQW1vZ0FEWUNBQXdEQzBFQUlRRUxJQVpGRFFBQ1FDQUZLQUljSWdOQkFuUkJ1Q0ZxSWdRb0FnQWdCVVlFUUNBRUlBRTJBZ0FnQVEwQlFZd2ZRWXdmS0FJQVFYNGdBM2R4TmdJQURBSUxJQVpCRUVFVUlBWW9BaEFnQlVZYmFpQUJOZ0lBSUFGRkRRRUxJQUVnQmpZQ0dDQUZLQUlRSWdNRVFDQUJJQU0yQWhBZ0F5QUJOZ0lZQ3lBRktBSVVJZ05GRFFBZ0FTQUROZ0lVSUFNZ0FUWUNHQXNnQWlBQVFRRnlOZ0lFSUFBZ0Ftb2dBRFlDQUNBQ1Fad2ZLQUlBUncwQVFaQWZJQUEyQWdBUEN5QUFRZjhCVFFSQUlBQkJlSEZCc0I5cUlRRUNmMEdJSHlnQ0FDSURRUUVnQUVFRGRuUWlBSEZGQkVCQmlCOGdBQ0FEY2pZQ0FDQUJEQUVMSUFFb0FnZ0xJUUFnQVNBQ05nSUlJQUFnQWpZQ0RDQUNJQUUyQWd3Z0FpQUFOZ0lJRHd0Qkh5RURJQUJCLy8vL0IwMEVRQ0FBUVNZZ0FFRUlkbWNpQVd0MlFRRnhJQUZCQVhSclFUNXFJUU1MSUFJZ0F6WUNIQ0FDUWdBM0FoQWdBMEVDZEVHNElXb2hBUUpBQWtBQ1FFR01IeWdDQUNJRVFRRWdBM1FpQjNGRkJFQkJqQjhnQkNBSGNqWUNBQ0FCSUFJMkFnQWdBaUFCTmdJWURBRUxJQUJCR1NBRFFRRjJhMEVBSUFOQkgwY2JkQ0VESUFFb0FnQWhBUU5BSUFFaUJDZ0NCRUY0Y1NBQVJnMENJQU5CSFhZaEFTQURRUUYwSVFNZ0JDQUJRUVJ4YWlJSFFSQnFLQUlBSWdFTkFBc2dCeUFDTmdJUUlBSWdCRFlDR0FzZ0FpQUNOZ0lNSUFJZ0FqWUNDQXdCQ3lBRUtBSUlJZ0FnQWpZQ0RDQUVJQUkyQWdnZ0FrRUFOZ0lZSUFJZ0JEWUNEQ0FDSUFBMkFnZ0xRYWdmUWFnZktBSUFRUUZySWdCQmZ5QUFHellDQUFzTEJBQWpBQXNHQUNBQUpBQUxFQUFqQUNBQWEwRndjU0lBSkFBZ0FBdEtBUUYvSUFBZ0FVa0VRQ0FBSUFFZ0FoQUNEd3NnQWdSQUlBQWdBbW9oQXlBQklBSnFJUUVEUUNBRFFRRnJJZ01nQVVFQmF5SUJMUUFBT2dBQUlBSkJBV3NpQWcwQUN3c2dBQXY5RGdJUmZ3RitJd0JCTUdzaUJ5UUFRYmgvSVFnQ1FDQUZSUTBBSUFRc0FBQWlDVUgvQVhFaEN3SkFJQWxCQUVnRVFDQUxRZjRBYTBFQmRpSUdJQVZQRFFKQmJDRUlJQXRCL3dCcklndEIvd0ZMRFFJZ0JFRUJhaUVJUVFBaEJRTkFJQVVnQzA4RVFDQUxJUWdnQmlFTERBTUZJQUFnQldvZ0NDQUZRUUYyYWlJRUxRQUFRUVIyT2dBQUlBQWdCVUVCY21vZ0JDMEFBRUVQY1RvQUFDQUZRUUpxSVFVTUFRc0FDd0FMSUFVZ0MwME5BU0FIUWY4Qk5nSUVJQVlnQjBFRWFpQUhRUWhxSUFSQkFXb2lEaUFMRUF3aUJFR0lmMHNFUUNBRUlRZ01BZ3RCVkNFSUlBY29BZ2dpRUVFR1N3MEJJQWNvQWdRaUVVRUJkQ0lKUVFKcXJVSUJJQkN0aGlJWVFRRWdFSFFpRFVFQmFpSUZyVUlDaG54OFFndDhRdnovLy8vLy8vLy8vd0NEUXVRQ1ZnMEJRVkloQ0NBUlFmOEJTdzBCSUExQmYzTkJBblJCNUFKcXJTQVJRUUZxSWhWQkFYU3RJQmg4UWdoOFZBMEJJQXNnQkdzaEZpQUVJQTVxSVJjZ0JrR0FCR29pRWlBRlFRSjBhaUlSSUFscVFRSnFJUTRnQmtHRUJHb2hFMEdBZ0FJZ0VIUkJFSFloQ1VFQUlRVkJBU0VQSUExQkFXc2lGQ0VLQTBBZ0JTQVZSa1VFUUFKQUlBWWdCVUVCZENJSWFpOEJBQ0lFUWYvL0EwWUVRQ0FUSUFwQkFuUnFJQVU2QUFJZ0NrRUJheUVLUVFFaEJBd0JDeUFQUVFBZ0NTQUV3VW9iSVE4TElBZ2dFV29nQkRzQkFDQUZRUUZxSVFVTUFRc0xJQVlnRHpzQmdnUWdCaUFRT3dHQUJBSkFJQW9nRkVZRVFDQU5RUU4ySVFoQ0FDRVlRUUFoRHdOQUlBd2dGVVlFUUNBSUlBMUJBWFpxUVFOcUlnbEJBWFFoQ0VFQUlRUkJBQ0VLQTBCQkFDRUZJQW9nRFU4TkJBTkFJQVZCQWtaRkJFQWdFeUFGSUFsc0lBUnFJQlJ4UVFKMGFpQU9JQVVnQ21wcUxRQUFPZ0FDSUFWQkFXb2hCUXdCQ3dzZ0NrRUNhaUVLSUFRZ0NHb2dGSEVoQkF3QUN3QUZJQVlnREVFQmRHb3VBUUFoQ1NBT0lBOXFJZ1FnR0RjQUFFRUlJUVVEUUNBRklBbE9SUVJBSUFRZ0JXb2dHRGNBQUNBRlFRaHFJUVVNQVFzTElCaENnWUtFaUpDZ3dJQUJmQ0VZSUF4QkFXb2hEQ0FKSUE5cUlROE1BUXNBQ3dBTElBMUJBM1lnRFVFQmRtcEJBMm9oQ0VFQUlRVURRQ0FNSUJWR1JRUkFRUUFoQ1NBR0lBeEJBWFJxTGdFQUlnUkJBQ0FFUVFCS0d5RUVBMEFnQkNBSlJrVUVRQ0FUSUFWQkFuUnFJQXc2QUFJRFFDQUZJQWhxSUJSeElnVWdDa3NOQUFzZ0NVRUJhaUVKREFFTEN5QU1RUUZxSVF3TUFRc0xRWDhoQ0NBRkRRSUxJQkJCQVdvaENFRUFJUVVEUUNBRklBMUdSUVJBSUJFZ0V5QUZRUUowYWlJT0xRQUNRUUYwYWlJRUlBUXZBUUFpQ1VFQmFqc0JBQ0FPSUFnZ0NXZEJZSE5xSWdRNkFBTWdEaUFKSUFSMElBMXJPd0VBSUFWQkFXb2hCUXdCQ3dzQ1FBSkFJQVl2QVlJRUJFQWdCMEVjYWlJRUlCY2dGaEFOSWdoQmlIOUxEUUlnQjBFVWFpQUVJQklRRGlBSFFReHFJQVFnRWhBT1FRQWhCUU5BSUFkQkhHb2lCQkFQSUFWQit3RkxjZzBDSUFBZ0JXb2lCaUFIUVJScUlBUVFFRG9BQUNBR0lBZEJER29nQkJBUU9nQUJJQVZCQW5JaEJDQUhRUnhxRUE4RVFDQUVJUVVNQXdVZ0FDQUVhaUFIUVJScUlBZEJIR29pQkJBUU9nQUFJQVlnQjBFTWFpQUVFQkE2QUFNZ0JVRUVhaUVGREFFTEFBc0FDeUFIUVJ4cUlnUWdGeUFXRUEwaUNFR0lmMHNOQVNBSFFSUnFJQVFnRWhBT0lBZEJER29nQkNBU0VBNUJBQ0VGQTBBZ0IwRWNhaUlFRUE4Z0JVSDdBVXR5UlFSQUlBQWdCV29pQmlBSFFSUnFJQVFRRVRvQUFDQUdJQWRCREdvZ0JCQVJPZ0FCSUFWQkFuSWhCQ0FIUVJ4cUVBOEVRQ0FFSVFVRklBQWdCR29nQjBFVWFpQUhRUnhxSWdRUUVUb0FBQ0FHSUFkQkRHb2dCQkFST2dBRElBVkJCR29oQlF3Q0N3c0xBbjhEUUVHNmZ5RUlJQVZCL1FGTERRTWdBQ0FGYWlJR0lBZEJGR29nQjBFY2FpSUpFQkU2QUFBZ0JrRUJhaUVFSUFrUUQwRURSZ1JBSUFkQkRHb2hDRUVDREFJTElBVkIvQUZMRFFNZ0JpQUhRUXhxSUFkQkhHb2lCQkFST2dBQklBVkJBbW9oQlNBRUVBOUJBMGNOQUFzZ0FDQUZhaUVFSUFkQkZHb2hDRUVEQ3lBRUlBZ2dCMEVjYWhBUk9nQUFJQVpxSUFCcklRZ01BUXNDZndOQVFicC9JUWdnQlVIOUFVc05BaUFBSUFWcUlnWWdCMEVVYWlBSFFSeHFJZ2tRRURvQUFDQUdRUUZxSVFRZ0NSQVBRUU5HQkVBZ0IwRU1haUVJUVFJTUFnc2dCVUg4QVVzTkFpQUdJQWRCREdvZ0IwRWNhaUlFRUJBNkFBRWdCVUVDYWlFRklBUVFEMEVEUncwQUN5QUFJQVZxSVFRZ0IwRVVhaUVJUVFNTElBUWdDQ0FIUVJ4cUVCQTZBQUFnQm1vZ0FHc2hDQXNnQ0VHSWYwc05BUXNnQ0NFRVFRQWhCU0FCUVFCQk5CQURJUWxCQUNFS0EwQWdCQ0FGUndSQUlBQWdCV29pQmkwQUFDSUJRUXRMQkVCQmJDRUlEQU1GSUFrZ0FVRUNkR29pQVNBQktBSUFRUUZxTmdJQUlBVkJBV29oQlVFQklBWXRBQUIwUVFGMUlBcHFJUW9NQWdzQUN3dEJiQ0VJSUFwRkRRQWdDbWNpQlVFZmN5SUJRUXRMRFFBZ0EwRWdJQVZyTmdJQVFRRkJBaUFCZENBS2F5SURaMEVmY3lJQmRDQURSdzBBSUFBZ0JHb2dBVUVCYWlJQU9nQUFJQWtnQUVFQ2RHb2lBQ0FBS0FJQVFRRnFOZ0lBSUFrb0FnUWlBRUVDU1NBQVFRRnhjZzBBSUFJZ0JFRUJhallDQUNBTFFRRnFJUWdMSUFkQk1Hb2tBQ0FJQzZBRkFReC9Jd0JCRUdzaURDUUFBbjhnQkVFSFRRUkFJQXhDQURjRENDQU1RUWhxSWdVZ0F5QUVFQUlhUVd3Z0FDQUJJQUlnQlVFSUVBd2lBQ0FBSUFSTEd5QUFJQUJCaVg5Skd3d0JDeUFBUVFBZ0FTZ0NBRUVCYWlJTlFRRjBFQU1oRDBGVUlBTW9BQUFpQmtFUGNTSUFRUXBMRFFBYUlBSWdBRUVGYWpZQ0FDQURJQVJxSWdKQkJHc2hCeUFDUVFkcklRc2dBRUVHYWlFT1FRUWhBaUFHUVFSMklRVkJJQ0FBZENJSVFRRnlJUWxCQUNFQVFRRWhCaUFESVFRRFFBSkFJQVpCQVhGRkJFQURRQ0FGUVg5elFZQ0FnSUI0Y21naUJrRVlTVVVFUUNBQVFTUnFJUUFnQkNBTFRRUi9JQVJCQTJvRklBUWdDMnRCQTNRZ0FtcEJIM0VoQWlBSEN5SUVLQUFBSUFKMklRVU1BUXNMSUFJZ0JrRWVjU0lLYWtFQ2FpRUNJQVpCQVhaQkEyd2dBR29nQlNBS2RrRURjV29pQUNBTlR3MEJBbjhnQkNBTFN5QUNRUU4ySUFScUlnVWdCMHR4UlFSQUlBSkJCM0VoQWlBRkRBRUxJQVFnQjJ0QkEzUWdBbXBCSDNFaEFpQUhDeUlFS0FBQUlBSjJJUVVMSUFVZ0NFRUJhM0VpQmlBSVFRRjBRUUZySWdvZ0NXc2lFRWtFZnlBT1FRRnJCU0FGSUFweElnVWdFRUVBSUFVZ0NFNGJheUVHSUE0TElRVWdEeUFBUVFGMGFpQUdRUUZySWdvN0FRQWdBRUVCYWlFQUlBSWdCV29oQWlBSVFRRWdCbXNnQ2lBR1FRQktHeUFKYWlJSlNnUkFJQWxCQWtnTkFVRWdJQWxuSWdWcklRNUJBU0FGUVI5emRDRUlDeUFBSUExUERRQWdDa0VBUnlFR0FuOGdCQ0FMU3lBQ1FRTjFJQVJxSWdVZ0IwdHhSUVJBSUFKQkIzRWhBaUFGREFFTElBSWdCQ0FIYTBFRGRHcEJIM0VoQWlBSEN5SUVLQUFBSUFKMklRVU1BUXNMUVd3Z0NVRUJSdzBBR2tGUUlBQWdEVXNOQUJwQmJDQUNRU0JLRFFBYUlBRWdBRUVCYXpZQ0FDQUVJQUpCQjJwQkEzVnFJQU5yQ3lBTVFSQnFKQUFMOGdFQkFYOGdBa1VFUUNBQVFnQTNBZ0FnQUVFQU5nSVFJQUJDQURjQ0NFRzRmdzhMSUFBZ0FUWUNEQ0FBSUFGQkJHbzJBaEFnQWtFRVR3UkFJQUFnQVNBQ2FpSUJRUVJySWdNMkFnZ2dBQ0FES0FBQU5nSUFJQUZCQVdzdEFBQWlBUVJBSUFBZ0FXZEJGMnMyQWdRZ0FnOExJQUJCQURZQ0JFRi9Ed3NnQUNBQk5nSUlJQUFnQVMwQUFDSUROZ0lBQWtBQ1FBSkFJQUpCQW1zT0FnRUFBZ3NnQUNBQkxRQUNRUkIwSUFOeUlnTTJBZ0FMSUFBZ0FTMEFBVUVJZENBRGFqWUNBQXNnQVNBQ2FrRUJheTBBQUNJQlJRUkFJQUJCQURZQ0JFRnNEd3NnQUNBQlp5QUNRUU4wYTBFSmFqWUNCQ0FDQzBRQkFuOGdBU0FDTHdFQUlnTWdBU2dDQkdvaUJEWUNCQ0FBSUFOQkFuUkJvQjFxS0FJQUlBRW9BZ0JCQUNBRWEzWnhOZ0lBSUFFUUR4b2dBQ0FDUVFScU5nSUVDNThCQVFSL1FRTWhBU0FBS0FJRUlnSkJJRTBFUUNBQUtBSUlJZ0VnQUNnQ0VFOEVRQ0FBSUFKQkIzRTJBZ1FnQUNBQklBSkJBM1pySWdJMkFnZ2dBQ0FDS0FBQU5nSUFRUUFQQ3lBQUtBSU1JZ01nQVVZRVFFRUJRUUlnQWtFZ1NSc1BDeUFBSUFFZ0FTQURheUFDUVFOMklnUWdBU0FFYXlBRFNTSUJHeUlEYXlJRU5nSUlJQUFnQWlBRFFRTjBhellDQkNBQUlBUW9BQUEyQWdBTElBRUxTQUVFZnlBQUtBSUVJQUFvQWdCQkFuUnFJZ0l0QUFJZ0FpOEJBQ0VFSUFFZ0FTZ0NCQ0lGSUFJdEFBTWlBbW8yQWdRZ0FDQUVJQUVvQWdBZ0JYUkJBQ0FDYTNacU5nSUFDMUlCQkg4Z0FDZ0NCQ0FBS0FJQVFRSjBhaUlDTFFBQ0lBSXZBUUFoQkNBQklBSXRBQU1pQWlBQktBSUVhaUlGTmdJRUlBQWdCQ0FDUVFKMFFhQWRhaWdDQUNBQktBSUFRUUFnQld0MmNXbzJBZ0FMQ0FBZ0FFR0lmMHNMR2dBZ0FBUkFJQUVFUUNBQ0lBQWdBUkVDQUE4TElBQVFCZ3NMcGdnQ0RYOEJmaU1BUVJCcklna2tBQ0FKUVFBMkFnd2dDVUVBTmdJSUFuOENRQ0FEUWVnSmFpQURJQWxCQ0dvZ0NVRU1haUFCSUFJZ0EwR0FBV29RQ3lJUFFZaC9TdzBBUVZRZ0NTZ0NEQ0lFSUFBb0FnQWlBVUgvQVhGQkFXcExEUUVhSUFCQkJHb2hDeUFBSUFGQi80R0FlSEVnQkVFUWRFR0FnUHdIY1hJMkFnQkJmeUFFSUFSQkFFZ2JRUUZxSVFCQkFDRUJJQWtvQWdnaEJVRUFJUUlEUUNBQUlBSkdCRUFnQlVFRGF5RUJRUUFoQUFOQUFrQkJBQ0VDSUFBZ0FVNEVRQU5BSUFBZ0JVNE5BaUFESUFBZ0EycEI2QWxxTFFBQVFRSjBha0ZBYXlJQklBRW9BZ0FpQVVFQmFqWUNBQ0FCSUFOcUlBQTZBT2dISUFCQkFXb2hBQXdBQ3dBRkEwQWdBa0VFUmtVRVFDQURJQU1nQUNBQ2FpSUhha0hvQ1dvdEFBQkJBblJxUVVCcklnZ2dDQ2dDQUNJSVFRRnFOZ0lBSUFNZ0NHb2dCem9BNkFjZ0FrRUJhaUVDREFFTEN5QUFRUVJxSVFBTUFnc0FDd3NnQkVFQmFpRU9JQU1vQWdBaEIwRUFJUUJCQVNFSUEwQWdDQ0FPUmcwRElBNGdDR3NoQkNBRElBaEJBblJxS0FJQUlRVUNRQUpBQWtBQ1FBSkFBa0JCQVNBSWRFRUJkU0lOUVFGckRnZ0FBUVFDQkFRRUF3UUxRUUFoQWlBRlFRQWdCVUVBU2hzaEJpQUFJUUVEUUNBQ0lBWkdEUVVnQXlBQ0lBZHFhaTBBNkFjaENpQUxJQUZCQVhScUlnd2dCRG9BQVNBTUlBbzZBQUFnQWtFQmFpRUNJQUZCQVdvaEFRd0FDd0FMUVFBaEFpQUZRUUFnQlVFQVNoc2hDaUFBSVFFRFFDQUNJQXBHRFFRZ0N5QUJRUUYwYWlJR0lBTWdBaUFIYW1vdEFPZ0hJZ3c2QUFJZ0JpQUVPZ0FCSUFZZ0REb0FBQ0FHSUFRNkFBTWdBa0VCYWlFQ0lBRkJBbW9oQVF3QUN3QUxRUUFoQWlBRlFRQWdCVUVBU2hzaEJpQUVRUWgwUVlEK0EzRWhCQ0FBSVFFRFFDQUNJQVpHRFFNZ0N5QUJRUUYwYWlBRUlBTWdBaUFIYW1vdEFPZ0hjcTFDZ1lDRWdKQ0F3QUIrTndBQUlBSkJBV29oQWlBQlFRUnFJUUVNQUFzQUMwRUFJUUlnQlVFQUlBVkJBRW9iSVFZZ0JFRUlkRUdBL2dOeElRUWdBQ0VCQTBBZ0FpQUdSZzBDSUFzZ0FVRUJkR29pQ2lBRUlBTWdBaUFIYW1vdEFPZ0hjcTFDZ1lDRWdKQ0F3QUIrSWhFM0FBZ2dDaUFSTndBQUlBSkJBV29oQWlBQlFRaHFJUUVNQUFzQUMwRUFJUUVnQlVFQUlBVkJBRW9iSVFvZ0JFRUlkRUdBL2dOeElRd2dBQ0VFQTBBZ0FTQUtSZzBCSUFzZ0JFRUJkR29oRUNBTUlBTWdBU0FIYW1vdEFPZ0hjcTFDZ1lDRWdKQ0F3QUIrSVJGQkFDRUNBMEFnQWlBTlRrVUVRQ0FRSUFKQkFYUnFJZ1lnRVRjQUdDQUdJQkUzQUJBZ0JpQVJOd0FJSUFZZ0VUY0FBQ0FDUVJCcUlRSU1BUXNMSUFGQkFXb2hBU0FFSUExcUlRUU1BQXNBQ3lBSVFRRnFJUWdnQlNBSGFpRUhJQVVnRFd3Z0FHb2hBQXdBQ3dBRklBTWdBa0VDZEdvaUIwRkFheUFCTmdJQUlBSkJBV29oQWlBSEtBSUFJQUZxSVFFTUFRc0FDd0FMSUE4TElBbEJFR29rQUF2eUFnRUdmeU1BUVNCcklnVWtBQ0FFS0FJQUlRWWdCVUVNYWlBQ0lBTVFEU0lEUVloL1RRUkFJQVJCQkdvaEFpQUFJQUZxSWdsQkEyc2hCRUVBSUFaQkVIWnJRUjl4SVFNRFFDQUZRUXhxRUE4Z0FDQUVUM0pGQkVBZ0FpQUZLQUlNSWdZZ0JTZ0NFQ0lIZENBRGRrRUJkR29pQ0MwQUFTRUtJQUFnQ0MwQUFEb0FBQ0FDSUFZZ0J5QUthaUlHZENBRGRrRUJkR29pQnkwQUFDRUlJQVVnQmlBSExRQUJhallDRUNBQUlBZzZBQUVnQUVFQ2FpRUFEQUVMQ3dOQUlBVkJER29RRHlFSElBVW9BZ3doQmlBRktBSVFJUVFnQUNBSlR5QUhja1VFUUNBQ0lBWWdCSFFnQTNaQkFYUnFJZ1l0QUFBaEJ5QUZJQVFnQmkwQUFXbzJBaEFnQUNBSE9nQUFJQUJCQVdvaEFBd0JDd3NEUUNBQUlBbFBSUVJBSUFJZ0JpQUVkQ0FEZGtFQmRHb2lCeTBBQVNFSUlBQWdCeTBBQURvQUFDQUFRUUZxSVFBZ0JDQUlhaUVFREFFTEMwRnNRV3dnQVNBRktBSVVJQVVvQWhoSEd5QUVRU0JIR3lFREN5QUZRU0JxSkFBZ0F3dlBGQUVqZnlNQVFkQUFheUlGSkFCQmJDRUpBa0FnQTBFS1NRMEFBa0FnQXlBQ0x3QUVJZ2NnQWk4QUFDSUlJQUl2QUFJaURXcHFRUVpxSWd4SkRRQWdCQzhCQWlFR0lBVkJQR29nQWtFR2FpSUNJQWdRRFNJSlFZaC9TdzBCSUFWQktHb2dBaUFJYWlJQ0lBMFFEU0lKUVloL1N3MEJJQVZCRkdvZ0FpQU5haUlDSUFjUURTSUpRWWgvU3cwQklBVWdBaUFIYWlBRElBeHJFQTBpQ1VHSWYwc05BU0FFUVFScUlRb2dBQ0FCYWlJZlFRTnJJU0JCQUNBR2EwRWZjU0VMSUFVb0FnZ2hFU0FGS0FJY0lSSWdCU2dDTUNFVElBVW9Ba1FoRkNBRktBSUVJUWtnQlNnQ0dDRU5JQVVvQWl3aERDQUZLQUpBSVFZZ0JTZ0NFQ0VoSUFVb0FpUWhJaUFGS0FJNElTTWdCU2dDVENFa0lBVW9BZ0FoRlNBRktBSVVJUllnQlNnQ0tDRVhJQVVvQWp3aEdFRUJJUThnQUNBQlFRTnFRUUoySWdScUlnTWdCR29pQWlBRWFpSVpJUVFnQWlFSUlBTWhCd05BSUE5QkFYRkZJQVFnSUU5eVJRUkFJQUFnQ2lBWUlBWjBJQXQyUVFKMGFpSU9Md0VBT3dBQUlBNHRBQUloR2lBT0xRQURJUkFnQnlBS0lCY2dESFFnQzNaQkFuUnFJZzR2QVFBN0FBQWdEaTBBQWlFYklBNHRBQU1oRHlBSUlBb2dGaUFOZENBTGRrRUNkR29pRGk4QkFEc0FBQ0FPTFFBQ0lSd2dEaTBBQXlFZElBUWdDaUFWSUFsMElBdDJRUUowYWlJT0x3RUFPd0FBSUE0dEFBSWhIaUFPTFFBRElRNGdBQ0FRYWlJbElBb2dHQ0FHSUJwcUlnWjBJQXQyUVFKMGFpSVFMd0VBT3dBQUlCQXRBQUlnRUMwQUF5RW1JQWNnRDJvaUp5QUtJQmNnRENBYmFpSWFkQ0FMZGtFQ2RHb2lCeThCQURzQUFDQUhMUUFDSVF3Z0J5MEFBeUVRSUFnZ0hXb2lHeUFLSUJZZ0RTQWNhaUlQZENBTGRrRUNkR29pQ0M4QkFEc0FBQ0FJTFFBQ0lRMGdDQzBBQXlFY0lBUWdEbW9pSFNBS0lCVWdDU0FlYWlJT2RDQUxka0VDZEdvaUNTOEJBRHNBQUNBR2FpRUFRUU1oQndKL0lCUWdKRWtFUUNBQUlRWkJBd3dCQ3lBQVFRZHhJUVlnRkNBQVFRTjJheUlVS0FBQUlSaEJBQXNnQ1MwQUF5RWVJQWt0QUFJaENDQU1JQnBxSVFBZ0V5QWpTUVIvSUFBRklCTWdBRUVEZG1zaUV5Z0FBQ0VYUVFBaEJ5QUFRUWR4Q3lFTUlBMGdEMm9oQUNBSGNpRUpRUU1oRHdKL0lCSWdJa2tFUUNBQUlRMUJBd3dCQ3lBQVFRZHhJUTBnRWlBQVFRTjJheUlTS0FBQUlSWkJBQXNnQ0NBT2FpRUFJQWx5SUJFZ0lVa0VmeUFBQlNBUklBQkJBM1pySWhFb0FBQWhGVUVBSVE4Z0FFRUhjUXNoQ1NBbElDWnFJUUFnRUNBbmFpRUhJQnNnSEdvaENDQWRJQjVxSVFRZ0QzSkZJUThNQVFzTElBVWdERFlDTENBRklBWTJBa0FnQlNBTk5nSVlJQVVnQ1RZQ0JDQUZJQlEyQWtRZ0JTQVROZ0l3SUFVZ0VqWUNIQ0FGSUJFMkFnZ2dCU0FZTmdJOElBVWdGellDS0NBRklCWTJBaFFnQlNBVk5nSUFJQUlnQjBrZ0FDQURTM0lOQUVGc0lRa2dDQ0FaU3cwQklBTkJBMnNoQ1FOQUlBVkJQR29RRDBVZ0FDQUpTWEVFUUNBQUlBb2dCU2dDUENJTklBVW9Ba0FpREhRZ0MzWkJBblJxSWc0dkFRQTdBQUFnQUNBT0xRQURhaUlHSUFvZ0RTQU1JQTR0QUFKcUlnQjBJQXQyUVFKMGFpSU1Md0VBT3dBQUlBVWdBQ0FNTFFBQ2FqWUNRQ0FHSUF3dEFBTnFJUUFNQVFVZ0EwRUNheUVNQTBBZ0JVRThhaEFQSVFZZ0JTZ0NQQ0VOSUFVb0FrQWhDU0FBSUF4TElBWnlSUVJBSUFBZ0NpQU5JQWwwSUF0MlFRSjBhaUlHTHdFQU93QUFJQVVnQ1NBR0xRQUNhallDUUNBQUlBWXRBQU5xSVFBTUFRc0xBMEFnQUNBTVMwVUVRQ0FBSUFvZ0RTQUpkQ0FMZGtFQ2RHb2lCaThCQURzQUFDQUFJQVl0QUFOcUlRQWdDU0FHTFFBQ2FpRUpEQUVMQ3dKQUlBQWdBMDhOQUNBQUlBb2dEU0FKZENBTGRpSUFRUUowYWlJRExRQUFPZ0FBSUFNdEFBTkJBVVlFUUNBSklBTXRBQUpxSVFrTUFRc2dDVUVmU3cwQVFTQWdDU0FLSUFCQkFuUnFMUUFDYWlJQUlBQkJJRThiSVFrTElBSkJBMnNoREFOQUlBVkJLR29RRDBVZ0J5QU1TWEVFUUNBSElBb2dCU2dDS0NJR0lBVW9BaXdpQUhRZ0MzWkJBblJxSWcwdkFRQTdBQUFnQnlBTkxRQURhaUlESUFvZ0JpQUFJQTB0QUFKcUlnQjBJQXQyUVFKMGFpSUdMd0VBT3dBQUlBVWdBQ0FHTFFBQ2FqWUNMQ0FESUFZdEFBTnFJUWNNQVFVZ0FrRUNheUVHQTBBZ0JVRW9haEFQSVFNZ0JTZ0NLQ0VNSUFVb0Fpd2hBQ0FHSUFkSklBTnlSUVJBSUFjZ0NpQU1JQUIwSUF0MlFRSjBhaUlETHdFQU93QUFJQVVnQUNBRExRQUNhallDTENBSElBTXRBQU5xSVFjTUFRc0xBMEFnQmlBSFNVVUVRQ0FISUFvZ0RDQUFkQ0FMZGtFQ2RHb2lBeThCQURzQUFDQUhJQU10QUFOcUlRY2dBQ0FETFFBQ2FpRUFEQUVMQ3dKQUlBSWdCMDBOQUNBSElBb2dEQ0FBZENBTGRpSUNRUUowYWlJRExRQUFPZ0FBSUFNdEFBTkJBVVlFUUNBQUlBTXRBQUpxSVFBTUFRc2dBRUVmU3cwQVFTQWdBQ0FLSUFKQkFuUnFMUUFDYWlJQUlBQkJJRThiSVFBTElCbEJBMnNoREFOQUlBVkJGR29RRDBVZ0NDQU1TWEVFUUNBSUlBb2dCU2dDRkNJR0lBVW9BaGdpQW5RZ0MzWkJBblJxSWcwdkFRQTdBQUFnQ0NBTkxRQURhaUlESUFvZ0JpQUNJQTB0QUFKcUlnSjBJQXQyUVFKMGFpSUdMd0VBT3dBQUlBVWdBaUFHTFFBQ2FqWUNHQ0FESUFZdEFBTnFJUWdNQVFVZ0dVRUNheUVEQTBBZ0JVRVVhaEFQSVFJZ0JTZ0NGQ0VHSUFVb0FoZ2hCeUFESUFoSklBSnlSUVJBSUFnZ0NpQUdJQWQwSUF0MlFRSjBhaUlDTHdFQU93QUFJQVVnQnlBQ0xRQUNhallDR0NBSUlBSXRBQU5xSVFnTUFRc0xBMEFnQXlBSVNVVUVRQ0FJSUFvZ0JpQUhkQ0FMZGtFQ2RHb2lBaThCQURzQUFDQUlJQUl0QUFOcUlRZ2dCeUFDTFFBQ2FpRUhEQUVMQ3dKQUlBZ2dHVThOQUNBSUlBb2dCaUFIZENBTGRpSUNRUUowYWlJRExRQUFPZ0FBSUFNdEFBTkJBVVlFUUNBSElBTXRBQUpxSVFjTUFRc2dCMEVmU3cwQVFTQWdCeUFLSUFKQkFuUnFMUUFDYWlJQ0lBSkJJRThiSVFjTEEwQWdCUkFQUlNBRUlDQkpjUVJBSUFRZ0NpQUZLQUlBSWdZZ0JTZ0NCQ0lDZENBTGRrRUNkR29pREM4QkFEc0FBQ0FFSUF3dEFBTnFJZ01nQ2lBR0lBSWdEQzBBQW1vaUFuUWdDM1pCQW5ScUlnUXZBUUE3QUFBZ0JTQUNJQVF0QUFKcU5nSUVJQU1nQkMwQUEyb2hCQXdCQlNBZlFRSnJJUU1EUUNBRkVBOGhBaUFGS0FJQUlRWWdCU2dDQkNFSUlBTWdCRWtnQW5KRkJFQWdCQ0FLSUFZZ0NIUWdDM1pCQW5ScUlnSXZBUUE3QUFBZ0JTQUlJQUl0QUFKcU5nSUVJQVFnQWkwQUEyb2hCQXdCQ3dzRFFDQURJQVJKUlFSQUlBUWdDaUFHSUFoMElBdDJRUUowYWlJQ0x3RUFPd0FBSUFRZ0FpMEFBMm9oQkNBSUlBSXRBQUpxSVFnTUFRc0xBa0FnQkNBZlR3MEFJQVFnQ2lBR0lBaDBJQXQySWdKQkFuUnFJZ010QUFBNkFBQWdBeTBBQTBFQlJnUkFJQWdnQXkwQUFtb2hDQXdCQ3lBSVFSOUxEUUJCSUNBSUlBb2dBa0VDZEdvdEFBSnFJZ0lnQWtFZ1R4c2hDQXRCYkVGc1FXeEJiRUZzUVd4QmJFRnNJQUVnQ0VFZ1J4c2dCU2dDQ0NBRktBSU1SeHNnQjBFZ1J4c2dCU2dDSENBRktBSWdSeHNnQUVFZ1J4c2dCU2dDTUNBRktBSTBSeHNnQ1VFZ1J4c2dCU2dDUkNBRktBSklSeHNoQ1F3SkN3QUxBQXNBQ3dBTEFBc0FDd0FMQUF0QmJDRUpDeUFGUWRBQWFpUUFJQWtMN0JBQkhuOGpBRUhRQUdzaUJTUUFRV3doQ1FKQUlBTkJDa2tOQUFKQUlBTWdBaThBQkNJR0lBSXZBQUFpQnlBQ0x3QUNJZ2hxYWtFR2FpSU9TUTBBSUFRdkFRSWhEeUFGUVR4cUlBSkJCbW9pQWlBSEVBMGlDVUdJZjBzTkFTQUZRU2hxSUFJZ0Iyb2lBaUFJRUEwaUNVR0lmMHNOQVNBRlFSUnFJQUlnQ0dvaUFpQUdFQTBpQ1VHSWYwc05BU0FGSUFJZ0Jtb2dBeUFPYXhBTklnbEJpSDlMRFFFZ0JFRUVhaUVLSUFBZ0FXb2lIRUVEYXlFZFFRQWdEMnRCSDNFaEN5QUZLQUlJSVJFZ0JTZ0NIQ0VTSUFVb0FqQWhFeUFGS0FKRUlSUWdCU2dDQkNFSklBVW9BaGdoQmlBRktBSXNJUWNnQlNnQ1FDRUlJQVVvQWhBaEhpQUZLQUlrSVI4Z0JTZ0NPQ0VnSUFVb0Frd2hJU0FGS0FJQUlSVWdCU2dDRkNFV0lBVW9BaWdoRnlBRktBSThJUmhCQVNFTklBQWdBVUVEYWtFQ2RpSUNhaUlPSUFKcUlnOGdBbW9pR1NFRUlBOGhBaUFPSVFNRFFDQU5SU0FFSUIxUGNrVUVRQ0FLSUJnZ0NIUWdDM1pCQVhScUlnd3RBQUVoRFNBQUlBd3RBQUE2QUFBZ0NpQVhJQWQwSUF0MlFRRjBhaUlNTFFBQklSQWdBeUFNTFFBQU9nQUFJQW9nRmlBR2RDQUxka0VCZEdvaURDMEFBU0VhSUFJZ0RDMEFBRG9BQUNBS0lCVWdDWFFnQzNaQkFYUnFJZ3d0QUFFaEd5QUVJQXd0QUFBNkFBQWdDaUFZSUFnZ0RXb2lDSFFnQzNaQkFYUnFJZ3d0QUFFaERTQUFJQXd0QUFBNkFBRWdDaUFYSUFjZ0VHb2lCM1FnQzNaQkFYUnFJZ3d0QUFFaEVDQURJQXd0QUFBNkFBRWdDaUFXSUFZZ0dtb2lESFFnQzNaQkFYUnFJZ1l0QUFFaEdpQUNJQVl0QUFBNkFBRWdDaUFWSUFrZ0cyb2lHM1FnQzNaQkFYUnFJZ2t0QUFFaElpQUVJQWt0QUFBNkFBRWdDQ0FOYWlFR1FRTWhDUUovSUJRZ0lVa0VRRUVESVEwZ0Jnd0JDeUFVSUFaQkEzWnJJaFFvQUFBaEdFRUFJUTBnQmtFSGNRc2hDQ0FISUJCcUlRWWdFeUFnU1FSL0lBWUZJQk1nQmtFRGRtc2lFeWdBQUNFWFFRQWhDU0FHUVFkeEN5RUhJQXdnR21vaERDQUpJQTF5SVJCQkF5RU5BbjhnRWlBZlNRUkFJQXdoQmtFRERBRUxJQXhCQjNFaEJpQVNJQXhCQTNackloSW9BQUFoRmtFQUN5QWJJQ0pxSVF3Z0VISWhFQ0FSSUI1SkJIOGdEQVVnRVNBTVFRTjJheUlSS0FBQUlSVkJBQ0VOSUF4QkIzRUxJUWtnQkVFQ2FpRUVJQUpCQW1vaEFpQURRUUpxSVFNZ0FFRUNhaUVBSUEwZ0VISkZJUTBNQVFzTElBVWdCellDTENBRklBZzJBa0FnQlNBR05nSVlJQVVnQ1RZQ0JDQUZJQlEyQWtRZ0JTQVROZ0l3SUFVZ0VqWUNIQ0FGSUJFMkFnZ2dCU0FZTmdJOElBVWdGellDS0NBRklCWTJBaFFnQlNBVk5nSUFJQUFnRGtzZ0F5QVBTM0lOQUVGc0lRa2dBaUFaU3cwQklBNUJBMnNoQ1FOQUlBVkJQR29RRHlBQUlBbFBja1VFUUNBS0lBVW9BandpQmlBRktBSkFJZ2QwSUF0MlFRRjBhaUlJTFFBQklRd2dBQ0FJTFFBQU9nQUFJQW9nQmlBSElBeHFJZ1owSUF0MlFRRjBhaUlITFFBQUlRZ2dCU0FHSUFjdEFBRnFOZ0pBSUFBZ0NEb0FBU0FBUVFKcUlRQU1BUXNMQTBBZ0JVRThhaEFQSVFjZ0JTZ0NQQ0VHSUFVb0FrQWhDU0FBSUE1UElBZHlSUVJBSUFvZ0JpQUpkQ0FMZGtFQmRHb2lCaTBBQUNFSElBVWdDU0FHTFFBQmFqWUNRQ0FBSUFjNkFBQWdBRUVCYWlFQURBRUxDd05BSUFBZ0RrOUZCRUFnQ2lBR0lBbDBJQXQyUVFGMGFpSUhMUUFCSUFBZ0J5MEFBRG9BQUNBQVFRRnFJUUFnQ1dvaENRd0JDd3NnRDBFRGF5RUFBMEFnQlVFb2FoQVBJQUFnQTAxeVJRUkFJQW9nQlNnQ0tDSUdJQVVvQWl3aUIzUWdDM1pCQVhScUlnZ3RBQUVoRGlBRElBZ3RBQUE2QUFBZ0NpQUdJQWNnRG1vaUJuUWdDM1pCQVhScUlnY3RBQUFoQ0NBRklBWWdCeTBBQVdvMkFpd2dBeUFJT2dBQklBTkJBbW9oQXd3QkN3c0RRQ0FGUVNocUVBOGhCeUFGS0FJb0lRWWdCU2dDTENFQUlBTWdEMDhnQjNKRkJFQWdDaUFHSUFCMElBdDJRUUYwYWlJR0xRQUFJUWNnQlNBQUlBWXRBQUZxTmdJc0lBTWdCem9BQUNBRFFRRnFJUU1NQVFzTEEwQWdBeUFQVDBVRVFDQUtJQVlnQUhRZ0MzWkJBWFJxSWdjdEFBRWhDQ0FESUFjdEFBQTZBQUFnQTBFQmFpRURJQUFnQ0dvaEFBd0JDd3NnR1VFRGF5RURBMEFnQlVFVWFoQVBJQUlnQTA5eVJRUkFJQW9nQlNnQ0ZDSUdJQVVvQWhnaUIzUWdDM1pCQVhScUlnZ3RBQUVoRGlBQ0lBZ3RBQUE2QUFBZ0NpQUdJQWNnRG1vaUJuUWdDM1pCQVhScUlnY3RBQUFoQ0NBRklBWWdCeTBBQVdvMkFoZ2dBaUFJT2dBQklBSkJBbW9oQWd3QkN3c0RRQ0FGUVJScUVBOGhCeUFGS0FJVUlRWWdCU2dDR0NFRElBSWdHVThnQjNKRkJFQWdDaUFHSUFOMElBdDJRUUYwYWlJR0xRQUFJUWNnQlNBRElBWXRBQUZxTmdJWUlBSWdCem9BQUNBQ1FRRnFJUUlNQVFzTEEwQWdBaUFaVDBVRVFDQUtJQVlnQTNRZ0MzWkJBWFJxSWdjdEFBRWhDQ0FDSUFjdEFBQTZBQUFnQWtFQmFpRUNJQU1nQ0dvaEF3d0JDd3NEUUNBRkVBOGdCQ0FkVDNKRkJFQWdDaUFGS0FJQUlnSWdCU2dDQkNJR2RDQUxka0VCZEdvaUJ5MEFBU0VJSUFRZ0J5MEFBRG9BQUNBS0lBSWdCaUFJYWlJQ2RDQUxka0VCZEdvaUJpMEFBQ0VISUFVZ0FpQUdMUUFCYWpZQ0JDQUVJQWM2QUFFZ0JFRUNhaUVFREFFTEN3TkFJQVVRRHlFSElBVW9BZ0FoQmlBRktBSUVJUUlnQkNBY1R5QUhja1VFUUNBS0lBWWdBblFnQzNaQkFYUnFJZ1l0QUFBaEJ5QUZJQUlnQmkwQUFXbzJBZ1FnQkNBSE9nQUFJQVJCQVdvaEJBd0JDd3NEUUNBRUlCeFBSUVJBSUFvZ0JpQUNkQ0FMZGtFQmRHb2lCeTBBQVNFSUlBUWdCeTBBQURvQUFDQUVRUUZxSVFRZ0FpQUlhaUVDREFFTEMwRnNRV3hCYkVGc1FXeEJiRUZzUVd3Z0FTQUNRU0JIR3lBRktBSUlJQVVvQWd4SEd5QURRU0JIR3lBRktBSWNJQVVvQWlCSEd5QUFRU0JIR3lBRktBSXdJQVVvQWpSSEd5QUpRU0JIR3lBRktBSkVJQVVvQWtoSEd5RUpEQUVMUVd3aENRc2dCVUhRQUdva0FDQUpDMWdCQTM4Q1FDQUFLQUtRNndFaUFVVU5BQ0FCS0FJQUlBRkJ0TlVCYWlnQ0FDSUNJQUZCdU5VQmFpZ0NBQ0lERUJNZ0FnUkFJQU1nQVNBQ0VRSUFEQUVMSUFFUUJnc2dBRUVBTmdLZzZ3RWdBRUlBTndPUTZ3RUw2UU1DQkg4Q2ZpQUFRUUJCS0JBRElRUWdBa0VCUVFVZ0F4c2lBRWtFUUNBQUR3c2dBVVVFUUVGL0R3dEJBU0VHQWtBQ1FDQURRUUZHRFFBZ0F5RUdJQUVvQUFBaUJVR282cjVwUmcwQVFYWWhBeUFGUVhCeFFkRFV0TUlCUncwQlFRZ2hBeUFDUVFoSkRRRWdBVFVBQkNFSUlBUkJBVFlDRkNBRUlBZzNBd0JCQUE4TElBRWdBaUFHRUJvaUF5QUNTdzBBSUFRZ0F6WUNHRUZ5SVFNZ0FDQUJhaUlGUVFGckxRQUFJZ0pCQ0hFTkFDQUNRU0J4SWdaRkJFQkJjQ0VESUFVdEFBQWlCVUduQVVzTkFTQUZRUWR4clVJQklBVkJBM1pCQ21xdGhpSUlRZ09JZmlBSWZDRUpJQUJCQVdvaEFBc2dBa0VHZGlFRklBSkJBblpCQUNFREFrQUNRQUpBQWtBZ0FrRURjVUVCYXc0REFBRUNBd3NnQUNBQmFpMEFBQ0VESUFCQkFXb2hBQXdDQ3lBQUlBRnFMd0FBSVFNZ0FFRUNhaUVBREFFTElBQWdBV29vQUFBaEF5QUFRUVJxSVFBTFFRRnhJUUlDZmdKQUFrQUNRQUpBSUFWQkFXc09Bd0VDQXdBTFFuOGdCa1VOQXhvZ0FDQUJhakVBQUF3REN5QUFJQUZxTXdBQVFvQUNmQXdDQ3lBQUlBRnFOUUFBREFFTElBQWdBV29wQUFBTElRZ2dCQ0FDTmdJZ0lBUWdBellDSENBRUlBZzNBd0JCQUNFRElBUkJBRFlDRkNBRUlBZ2dDU0FHR3lJSU53TUlJQVJDZ0lBSUlBZ2dDRUtBZ0FoYUd6NENFQXNnQXd0ZkFRRi9RYmgvSVFNZ0FVRUJRUVVnQWhzaUFrOEVmeUFBSUFKcVFRRnJMUUFBSWdCQkEzRkJBblJCb0I1cUtBSUFJQUpxSUFCQkJIWkJESEZCc0I1cUtBSUFhaUFBUVNCeElnRkZhaUFCUVFWMklBQkJ3QUJKY1dvRlFiaC9Dd3NNQUNBQUlBRWdBa0VBRUJrTGx3TUNCWDhDZmlNQVFVQnFJZ1FrQUFKQUEwQWdBVUVGVHdSQUFrQWdBQ2dBQUVGd2NVSFExTFRDQVVZRVFFSitJUWNnQVVFSVNRMEVJQUFvQUFRaUFrRjNTdzBFSUFKQkNHb2lBeUFCU3cwRUlBSkJnWDlKRFFFTUJBc2dCRUVZYWlBQUlBRVFHeUVDUW40Z0JDa0RHRUlBSUFRb0FpeEJBVWNiSUFJYklnZENmVllOQXlBSElBaDhJZ2dnQjFSQ2ZpRUhEUU1DUUFKQUlBRkJDRWtOQUNBQUtBQUFRWEJ4UWREVXRNSUJSdzBBSUFBb0FBUWlBa0YzU3cwRlFiaC9JQUpCQ0dvaUFpQUJJQUpKR3lFRERBRUxJQVJCR0dvZ0FDQUJFQnNpQWtHSWYwc0VRQ0FDSVFNTUFRdEJ1SDhoQXlBQ0RRQWdBU0FFS0FJd0lnSnJJUVVnQUNBQ2FpRUdBMEFnQmlBRklBUkJER29RSFNJRFFZaC9TdzBCSUFOQkEyb2lBaUFGU3dSQVFiaC9JUU1NQWdzZ0JTQUNheUVGSUFJZ0Jtb2hCaUFFS0FJUVJRMEFDeUFFS0FJNEJIOUJ1SDhoQXlBRlFRUkpEUUVnQmtFRWFnVWdCZ3NnQUdzaEF3c2dBMEdJZjBzTkF3c2dBU0FEYXlFQklBQWdBMm9oQUF3QkN3dENmaUFJSUFFYklRY0xJQVJCUUdza0FDQUhDMlFCQVg5QnVIOGhBd0pBSUFGQkEwa05BQ0FBTFFBQ0lRRWdBaUFBTHdBQUlnQkJBWEUyQWdRZ0FpQUFRUUYyUVFOeElnTTJBZ0FnQWlBQUlBRkJFSFJ5UVFOMklnQTJBZ2dDUUFKQUlBTkJBV3NPQXdJQkFBRUxRV3dQQ3lBQUlRTUxJQU1MUkFFQ2Z5QUJJQUlvQWdRaUF5QUJLQUlFYWlJRU5nSUVJQUFnQTBFQ2RFR2dIV29vQWdBZ0FTZ0NBRUVBSUFScmRuRTJBZ0FnQVJBUEdpQUFJQUpCQ0dvMkFnUUx6Z0VCQm45QnVuOGhDZ0pBSUFJb0FnUWlDQ0FDS0FJQUlnbHFJZzBnQVNBQWEwc05BRUZzSVFvZ0NTQUVJQU1vQWdBaUMydExEUUFnQUNBSmFpSUVJQUlvQWdnaURHc2hBaUFBSUFGQklHc2lBQ0FMSUFsQkFCQWdJQU1nQ1NBTGFqWUNBQUpBQWtBZ0JDQUZheUFNVHdSQUlBSWhCUXdCQ3lBTUlBUWdCbXRMRFFJZ0J5QUhJQUlnQldzaUFtb2lBU0FJYWs4RVFDQUVJQUVnQ0JBS0dnd0NDeUFDSUFocUlRZ2dCQ0FCUVFBZ0Ftc1FDaUFDYXlFRUN5QUVJQUFnQlNBSVFRRVFJQXNnRFNFS0N5QUtDOGNFQVFKL0lBQWdBMm9oQmdKQUlBTkJCMHdFUUFOQUlBQWdCazhOQWlBQUlBSXRBQUE2QUFBZ0FFRUJhaUVBSUFKQkFXb2hBZ3dBQ3dBTElBUkJBVVlFUUFKQUlBQWdBbXNpQlVFSFRRUkFJQUFnQWkwQUFEb0FBQ0FBSUFJdEFBRTZBQUVnQUNBQ0xRQUNPZ0FDSUFBZ0FpMEFBem9BQXlBQUlBSWdCVUVDZENJRlFjQWVhaWdDQUdvaUFpZ0FBRFlBQkNBQ0lBVkI0QjVxS0FJQWF5RUNEQUVMSUFBZ0Fpa0FBRGNBQUFzZ0FrRUlhaUVDSUFCQkNHb2hBQXNnQVNBR1R3UkFJQUFnQTJvaEFTQUVRUUZISUFBZ0FtdEJEMHB5UlFSQUEwQWdBQ0FDS1FBQU53QUFJQUpCQ0dvaEFpQUFRUWhxSWdBZ0FVa05BQXdEQ3dBTElBQWdBaWtBQURjQUFDQUFJQUlwQUFnM0FBZ2dBMEVSU1EwQklBQkJFR29oQUFOQUlBQWdBaWtBRURjQUFDQUFJQUlwQUJnM0FBZ2dBQ0FDS1FBZ053QVFJQUFnQWlrQUtEY0FHQ0FDUVNCcUlRSWdBRUVnYWlJQUlBRkpEUUFMREFFTEFrQWdBQ0FCU3dSQUlBQWhBUXdCQ3lBQklBQnJJUVVDUUNBRVFRRkhJQUFnQW10QkQwcHlSUVJBSUFJaEF3TkFJQUFnQXlrQUFEY0FBQ0FEUVFocUlRTWdBRUVJYWlJQUlBRkpEUUFMREFFTElBQWdBaWtBQURjQUFDQUFJQUlwQUFnM0FBZ2dCVUVSU0EwQUlBQkJFR29oQUNBQ0lRTURRQ0FBSUFNcEFCQTNBQUFnQUNBREtRQVlOd0FJSUFBZ0F5a0FJRGNBRUNBQUlBTXBBQ2czQUJnZ0EwRWdhaUVESUFCQklHb2lBQ0FCU1EwQUN3c2dBaUFGYWlFQ0N3TkFJQUVnQms4TkFTQUJJQUl0QUFBNkFBQWdBVUVCYWlFQklBSkJBV29oQWd3QUN3QUxDNjRIQWdWL0FYNGpBRUdBQVdzaUVTUUFJQkVnQXpZQ2ZFRi9JUThDUUFKQUFrQUNRQUpBSUFJT0JBRUFBd0lFQ3lBR1JRUkFRYmgvSVE4TUJBdEJiQ0VQSUFVdEFBQWlBaUFEU3cwRElBZ2dBa0VDZENJQ2FpZ0NBQ0VESUFJZ0Iyb29BZ0FoQWlBQVFRQTZBQXNnQUVJQU53SUFJQUFnQWpZQ0RDQUFJQU02QUFvZ0FFRUFPd0VJSUFFZ0FEWUNBRUVCSVE4TUF3c2dBU0FKTmdJQVFRQWhEd3dDQ3lBS1JRUkFRV3doRHd3Q0MwRUFJUThnQzBVZ0RFRVpTSElOQVVFSUlBUjBRUWhxSVFCQkFDRURBMEFnQUNBRFRRMENJQU5CUUdzaEF3d0FDd0FMUVd3aER5QVJJQkZCL0FCcUlCRkIrQUJxSUFVZ0JoQU1JZ05CaUg5TERRQWdFU2dDZUNJQ0lBUkxEUUFnRVNnQ2ZFRUJhaUVKSUFCQkNHb2hDMEdBZ0FJZ0FuUkJFSFVoQlVFQklSQkJBU0FDZENJUFFRRnJJZ29oRWdOQUlBa2dEa2NFUUFKQUlCRWdEa0VCZENJRWFpOEJBQ0lNUWYvL0EwWUVRQ0FMSUJKQkEzUnFJQTQyQWdRZ0VrRUJheUVTUVFFaERBd0JDeUFRUVFBZ0JTQU13VW9iSVJBTElBUWdEV29nRERzQkFDQU9RUUZxSVE0TUFRc0xJQUFnQWpZQ0JDQUFJQkEyQWdBQ1FDQUtJQkpHQkVBZ0RVSHFBR29oQmtFQUlSQkJBQ0VNQTBBZ0NTQVFSZ1JBSUE5QkEzWWdEMEVCZG1wQkEyb2lCVUVCZENFRVFRQWhERUVBSVJJRFFFRUFJUTRnRHlBU1RRMEVBMEFnRGtFQ1J3UkFJQXNnQlNBT2JDQU1haUFLY1VFRGRHb2dCaUFPSUJKcWFpMEFBRFlDQkNBT1FRRnFJUTRNQVFzTElCSkJBbW9oRWlBRUlBeHFJQXB4SVF3TUFBc0FCU0FSSUJCQkFYUnFMZ0VBSVFVZ0JpQU1haUlFSUJNM0FBQkJDQ0VPQTBBZ0JTQU9TZ1JBSUFRZ0Rtb2dFemNBQUNBT1FRaHFJUTRNQVFzTElCTkNnWUtFaUpDZ3dJQUJmQ0VUSUJCQkFXb2hFQ0FGSUF4cUlRd01BUXNBQ3dBTElBOUJBM1lnRDBFQmRtcEJBMm9oQlVFQUlSQkJBQ0VPQTBBZ0NTQVFSZzBCUVFBaERDQVJJQkJCQVhScUxnRUFJZ1JCQUNBRVFRQktHeUVFQTBBZ0JDQU1Sd1JBSUFzZ0RrRURkR29nRURZQ0JBTkFJQVVnRG1vZ0NuRWlEaUFTU3cwQUN5QU1RUUZxSVF3TUFRc0xJQkJCQVdvaEVBd0FDd0FMSUFKQkFXb2hCVUVBSVF3RFFDQU1JQTlIQkVBZ0RTQUxJQXhCQTNScUlna29BZ1FpQkVFQmRHb2lBaUFDTHdFQUlnWkJBV283QVFBZ0NTQUZJQVpuUVdCemFpSUNPZ0FESUFrZ0JpQUNkQ0FQYXpzQkFDQUpJQWdnQkVFQ2RDSUNhaWdDQURvQUFpQUpJQUlnQjJvb0FnQTJBZ1FnREVFQmFpRU1EQUVMQ3lBQklBQTJBZ0FnQXlFUEN5QVJRWUFCYWlRQUlBOEw3Vm9DTzM4R2ZpTUFRZUFCYXlJRUpBQUNRRUd3N0FrUUJTSUZSUVJBUVVBaEJ3d0JDeUFGUWdBM0F2VHFBU0FGUVFBMkFzVHJBU0FGUVFBMkFyVHJBU0FGUWdBM0FwenJBU0FGUVFBMkFyanBBU0FGUVFBMkFxenNDU0FGUWdBM0F0VHJBU0FGUWdBM0FxenJBU0FGUWdBM0E0anJBU0FGUWdBM0F1VHFBU0FGUWdBM0F1VHJBU0FGUVlHQWdNQUFOZ0s4NndFZ0JVSUFOd0trNndFZ0JVSDg2Z0ZxUVFBMkFnQWdCVUdRNndGcVFnQTNBd0FnQlJBWUlBVkJyTlVCYWlFVUlBVkIrT3NCYWlFY0lBVkJzT29CYWlFaUlBVkJvREJxSVNvZ0JVR1lJR29oS3lBRlFhalFBR29oSGlBRlFSQnFJU3dnQlVFSWFpRW9JQVZCQkdvaExTQUZRY0RwQVdvaEtTQUZRWWpyQVdvZ0JFR1VBV29oTHlBRVFZd0JhaUV3SUFSQmhBRnFJVEVnQkVIY0FHb2hNaUFFUWRRQWFpRXpJQVJCekFCcUlUUWdBQ0VkQWtBQ1FBSkFBa0FDUUFOQVFRRkJCU0FGS0FMazZnRWJJUVlDUUFOQUlBTWdCa2tOQVNBQ0tBQUFRWEJ4UWREVXRNSUJSZ1JBUWJoL0lRY2dBMEVJU1EwSUlBSW9BQVFpRGtGM1N3UkFRWEloQnd3SkN5QURJQTVCQ0dvaUNVa05DQ0FPUVlCL1N3UkFJQWtoQnd3SkN5QURJQWxySVFNZ0FpQUphaUVDREFFTEN5QUZRZ0EzQXF6cEFTQUZRZ0EzQStqcEFTQUZRUUEyQXBqckFTQUZRZ0EzQTREcUFTQUZRZ00zQS9qcEFTQUZRYlRwQVdwQ0FEY0NBQ0FGUWZEcEFXcENBRGNEQUNBRlFhalFBR29pQ1VHTWdJRGdBRFlDQUNBRlFhelFBV3BCNEJJcEFnQTNBZ0FnQlVHMDBBRnFRZWdTS0FJQU5nSUFJQVVnQlVFUWFqWUNBQ0FGSUFWQm9EQnFOZ0lFSUFVZ0JVR1lJR28yQWdnZ0JTQUpOZ0lNSUFWQkFVRUZJQVVvQXVUcUFSczJBcnpwQVFKQUlBRkZEUUFnQlNnQ3JPa0JJZ2tnSFVZTkFDQUZJQWsyQXJqcEFTQUZJQjAyQXF6cEFTQUZLQUt3NlFFaERpQUZJQjAyQXJEcEFTQUZJQjBnRGlBSmEybzJBclRwQVF0QnVIOGhDU0FEUVFWQkNTQUZLQUxrNmdFaUJodEpEUVVnQWtFQlFRVWdCaHNnQmhBYUlnNUJpSDlMQkVBZ0RpRUpEQVVMSUFNZ0RrRURha2tOQlNBcElBSWdEaUFHRUJraUJrR0lmMHNFUUNBR0lRa01CUXNnQmcwRkFrQUNRQ0FGS0FLbzZ3RkJBVWNOQUNBRktBS2s2d0VpQ1VVTkFDQUZLQUtVNndGRkRRQWdDU2dDQkVFQmF5SUhJQVVvQXR6cEFTSUtyVUtIbGErdm1MYmVtNTUvZmtMSno5bXk4ZVc2NmllRlFoZUpRcy9XMDc3U3g2dlpRbjVDK2ZQZDhabjJtYXNXZkNJL1FpR0lJRCtGUXMvVzA3N1N4NnZaUW40aVAwSWRpQ0EvaFVMNTg5M3htZmFacXhaK0lqOUNJSWdnUDRXbmNTRUdJQWtvQWdBaEZRTkFRUUFoQ0FKQUlCVWdCa0VDZEdvb0FnQWlDVVVOQUNBSktBSUlRUWhKRFFBZ0NTZ0NCQ0lTS0FBQVFiZkl3dUYrUncwQUlCSW9BQVFoQ0FzZ0NDQUtSd1JBSUFZZ0IzRkJBV29oQmlBSURRRUxDeUFKUlEwQUlBVVFHQ0FGUVg4MkFxRHJBU0FGSUFrMkFwVHJBU0FGSUFVb0F0enBBU0lJTmdLWTZ3RU1BUXNnQlNnQzNPa0JJUWdMQWtBZ0NFVU5BQ0FGS0FLWTZ3RWdDRVlOQUVGZ0lRa01CZ3NDUUNBRktBTGc2UUVFUUNBRklBVW9BdWpxQVNJSlJUWUM3T29CSUFrTkFTQUZRdm5xME5EbnlhSGs0UUEzQTZqcUFTQUZRZ0EzQTZEcUFTQUZRcy9XMDc3U3g2dlpRamNEbU9vQklBVkMxdXVDN3VyOWlmWGdBRGNEa09vQklBVkNBRGNEaU9vQklDSkJBRUVvRUFNYURBRUxJQVZCQURZQzdPb0JDeUFCSUIxcUlTVWdCU0FGS1FQbzZRRWdEcTE4TndQbzZRRWdBeUFPYXlFRElBSWdEbW9oQWlBZElRNERRQ0FDSUFNZ0JFRXNhaEFkSWhWQmlIOUxCRUFnRlNFSkRBWUxJQU5CQTJzaU5TQVZTUTBFSUFKQkEyb2hHMEZzSVFrQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FFS0FJc0RnTUNBUUFWQ3lBVlFmLy9CMHNORXlBVlFRTkpEUklnQlNrRHlPa0JJVDhDUUFKQUlCc3RBQUFpQ1VFRGNTSWFRUUZyRGdNR0FRQUhDeUFGS0FLQTZnRU5BRUZpSVFrTUZRc2dGVUVGU1EwU0lCc29BQUFoQXdKL0FrQUNRQUpBSUFsQkFuWkJBM0VpQ1VFQ2F3NENBUUlBQ3lBSlFRQkhJUWNnQTBFRWRrSC9CM0VoQzBFRElRWWdBMEVPZGtIL0IzRU1BZ3RCQkNFR0lBTkJCSFpCLy84QWNTRUxRUUVoQnlBRFFSSjJEQUVMSUFOQkJIWkIvLzhQY1NJTFFZQ0FDRXNORTBFQklRZEJCU0VHSUFJdEFBZEJDblFnQTBFV2RuSUxJZ2dnQm1vaUNTQVZTdzBTQWtBZ0MwR0JCa2tOQUNBRktBS2M2d0ZGRFFCQkFDRURBMEFnQTBHRGdBRkxEUUVnQTBGQWF5RUREQUFMQUFzZ0JpQWJhaUVQSUJwQkEwY05CaUFGS0FJTUlnSXRBQUZCQ0hRaEF5QUhEUWNnQTBVTkNDQUVRZkFBYWlBUElBZ1FEU0lEUVloL1N3MEpJQUpCQkdvaEJpQUxJQnhxSWhKQkEyc2hDa0VBSUFJdkFRSnJRUjl4SVFjZ0hDRURBMEFnQkVId0FHb1FEMFVnQXlBS1NYRUVRQ0FESUFZZ0JDZ0NjQ0lJSUFRb0FuUWlEM1FnQjNaQkFuUnFJZ0l2QVFBN0FBQWdBeUFDTFFBRGFpSURJQVlnQ0NBUElBSXRBQUpxSWdoMElBZDJRUUowYWlJQ0x3RUFPd0FBSUFRZ0NDQUNMUUFDYWpZQ2RDQURJQUl0QUFOcUlRTU1BUVVnRWtFQ2F5RUlBMEFnQkVId0FHb1FEeUVQSUFRb0FuQWhDaUFFS0FKMElRSWdBeUFJU3lBUGNrVUVRQ0FESUFZZ0NpQUNkQ0FIZGtFQ2RHb2lDaThCQURzQUFDQUVJQUlnQ2kwQUFtbzJBblFnQXlBS0xRQURhaUVEREFFTEN3TkFJQU1nQ0UwRVFDQURJQVlnQ2lBQ2RDQUhka0VDZEdvaUR5OEJBRHNBQUNBRElBOHRBQU5xSVFNZ0FpQVBMUUFDYWlFQ0RBRUxDd0pBSUFNZ0VrOE5BQ0FESUFZZ0NpQUNkQ0FIZGtFQ2RHb2lBeTBBQURvQUFDQURMUUFEUVFGR0JFQWdBaUFETFFBQ2FpRUNEQUVMSUFKQkgwc05BRUVnSUFJZ0F5MEFBbW9pQWlBQ1FTQlBHeUVDQzBGc1FXd2dDeUFFS0FKNElBUW9BbnhIR3lBQ1FTQkhHeUVEREFzTEFBc0FDeUFFS0FJMElnSWdKU0FPYTBzTkNpQU9SUVJBUVFBaENTQUNEUUlNRGdzZ0RpQWJMUUFBSUFJUUF4b2dBaUVKREF3TElCVWdKU0FPYTBzTkNTQU9EUUZCQUNFSklCVkZEUXdMUWJaL0lRa01FUXNnRGlBYklCVVFBaG9nRlNFSkRBb0xJQndnR3dKL0FrQUNRQUpBSUFsQkFuWkJBM0ZCQVdzT0F3RUFBZ0FMSUFsQkEzWWhBMEVCREFJTElCc3ZBQUJCQkhZaEEwRUNEQUVMSUJWQkJFa05EaUFDTHdBRElBSXRBQVZCRUhSeUlnSkJqNENBQVVzTkRpQUNRUVIySVFOQkF3c2lBbW90QUFBZ0EwRWdhaEFESVFrZ0JTQUROZ0tBNndFZ0JTQUpOZ0x3NmdFZ0FrRUJhaUVKREFVTElCVUNmd0pBQWtBQ1FDQUpRUUoyUVFOeFFRRnJEZ01CQUFJQUN5QUpRUU4ySVFOQkFRd0NDeUFiTHdBQVFRUjJJUU5CQWd3QkN5QUNMd0FESUFJdEFBVkJFSFJ5UVFSMklRTkJBd3NpQWlBRGFpSUpRU0JxU1FSQUlBa2dGVXNORFNBY0lBSWdHMm9nQXhBQ0lRSWdCU0FETmdLQTZ3RWdCU0FDTmdMdzZnRWdBaUFEYWlJQ1FnQTNBQmdnQWtJQU53QVFJQUpDQURjQUNDQUNRZ0EzQUFBTUJRc2dCU0FETmdLQTZ3RWdCU0FDSUJ0cU5nTHc2Z0VNQkFzZ0IwVUVRQ0FlSUE4Z0NDQVVFQlFpQWtHSWYwc2dBaUFJVDNJTkRDQWNJQXNnQWlBUGFpQUlJQUpySUI0UUZTRUREQU1MSUF0RklBaEZjZzBMSUF0QkNIWWlBeUFJSUF0SkJIOGdDRUVFZENBTGJnVkJEd3RCR0d3aUFrR01DR29vQWdCc0lBSkJpQWhxS0FJQWFpSUdRUU4ySUFacUlBSkJnQWhxS0FJQUlBSkJoQWhxS0FJQUlBTnNha2tFUUNNQVFSQnJJaEFrQUNBZUtBSUFJUU1nRkVId0JHcEJBRUhzQUJBRElRWkJWQ0VDQWtBZ0EwSC9BWEVpREVFTVN3MEFBa0FnRkVIY0NXb2dCaUFRUVFocUlCQkJER29nRHlBSUlCUkIzQXRxSWhjUUN5SVNRWWgvU3cwQUlCQW9BZ3dpQmlBTVN3MEJJQlJCcUFWcUlRMGdGRUdrQldvaE5pQWVRUVJxSVJFZ0EwR0FnSUI0Y1NFM0lBWkJBV29pRXlFQ0lBWWhBd05BSUFJaUIwRUJheUVDSUFNaUNrRUJheUVESUJRZ0NrRUNkR29vQXZBRVJRMEFDMEVCSUFjZ0IwRUJUUnNoRmtFQUlRZEJBU0VDQTBBZ0FpQVdSd1JBSUJRZ0FrRUNkQ0lEYWlnQzhBUWhHQ0FESUExcUlBYzJBZ0FnQWtFQmFpRUNJQWNnR0dvaEJ3d0JDd3NnRFNBSE5nSUFRUUFoQWlBUUtBSUlJUU1EUUNBQ0lBTkhCRUFnRFNBQ0lCUnFRZHdKYWkwQUFDSVlRUUowYWlJWklCa29BZ0FpR1VFQmFqWUNBQ0FVSUJsQkFYUnFJaGtnR0RvQTNRVWdHU0FDT2dEY0JTQUNRUUZxSVFJTUFRc0xRUUFoQXlBTlFRQTJBZ0FnRENBR1FYOXphaUVHUVFFaEFnTkFJQUlnRmtjRVFDQVVJQUpCQW5ScUlnMGdBellDQUNBTktBTHdCQ0FDSUFacWRDQURhaUVESUFKQkFXb2hBZ3dCQ3dzZ0RDQVRJQXBySWdaclFRRnFJUW9nQmlFREEwQWdBeUFLU1FSQUlCUWdBMEUwYkdvaERVRUJJUUlEUUNBQ0lCWkhCRUFnRFNBQ1FRSjBJaGhxSUJRZ0dHb29BZ0FnQTNZMkFnQWdBa0VCYWlFQ0RBRUxDeUFEUVFGcUlRTU1BUXNMSUJjZ0ZFRTBFQUloT0NBVVFaQU1haUU1SUJNZ0RHc2hPaUFVUWR3RmFpRVhRUUFoQ2dOQUFrQUNRQ0FISUFwSEJFQkJBU0FNSUJNZ0Z5QUtRUUYwYWlJQ0xRQUJJZzFySWdOckloaDBJUmtnQWkwQUFDRVdJRGdnRFVFQ2RHb2lIeWdDQUNFQ0lBWWdHRTBFUUNBMlFRRWdBeUE2YWlJTklBMUJBVXdiSWlCQkFuUWlKR29vQWdBaERTQTVJQlFnQTBFMGJHcEJOQkFDSVNFZ0RVRUJkQ0VtSUJFZ0FrRUNkR29oSXlBZ1FRRk5EUUlnQTBFUWRFR0FnUHdIY1NBV2NrR0FnSUFJY2lFZ0lDRWdKR29vQWdBaEpFRUFJUUlEUUNBQ0lDUkdEUU1nSXlBQ1FRSjBhaUFnTmdFQUlBSkJBV29oQWd3QUN3QUxJQUlnQWlBWmFpSU5JQUlnRFVzYklRMGdBMEVRZEVHQWdQd0hjU0FXY2tHQWdJQUljaUVEQTBBZ0FpQU5SZzBESUJFZ0FrRUNkR29nQXpZQkFDQUNRUUZxSVFJTUFBc0FDeUFlSUF4QkVIUWdOM0lnREhKQmdBSnlOZ0lBREFNTElBY2dEV3NoSkNBWElDWnFJU1pCQUNFTkEwQWdEU0FrUmcwQlFRRWdHQ0FUSUNZZ0RVRUJkR29pSnkwQUFTSUNheUk3YTNRaVBDQWhJQUpCQW5ScUlpQW9BZ0FpQW1vaFBTQURJRHRxUVJCMFFZQ0EvQWR4SUNjdEFBQkJDSFJ5SUJaeVFZQ0FnQkJ5SVNjRFFDQWpJQUpCQW5ScUlDYzJBUUFnQWtFQmFpSUNJRDFKRFFBTElDQWdJQ2dDQUNBOGFqWUNBQ0FOUVFGcUlRME1BQXNBQ3lBZklCOG9BZ0FnR1dvMkFnQWdDa0VCYWlFS0RBQUxBQXNnRWlFQ0N5QVFRUkJxSkFBZ0FrR0lmMHNnQWlBSVQzSU5EQ0FjSUFzZ0FpQVBhaUFJSUFKcklCNFFGaUVEREFNTElCNGdEeUFJSUJRUUZDSUNRWWgvU3lBQ0lBaFBjZzBMSUJ3Z0N5QUNJQTlxSUFnZ0Ftc2dIaEFYSVFNTUFnc2dBd1JBSUJ3Z0N5QVBJQWdnQWhBV0lRTU1BZ3NnSENBTElBOGdDQ0FDRUJjaEF3d0JDeUFjSUFzZ0R5QUlJQUlRRlNFREN5QURRWWgvU3cwSUlBVWdDellDZ09zQklBVWdIRFlDOE9vQklBVkJBVFlDZ09vQklCcEJBa1lFUUNBRklCNDJBZ3dMSUFzZ0hHb2lBa0lBTndBQUlBSkNBRGNBR0NBQ1FnQTNBQkFnQWtJQU53QUlJQWxCaUg5TERRb0xJQWtnRlVZTkNDQVZJQWxySVFZZ0JTZ0NuT3NCSVFvQ1FDQUpJQnRxSWdNdEFBQWlEMFVFUUVFQklRSkJBQ0VQUWJoL0lRa2dCa0VCUmcwQkRBc0xBbjhnQTBFQmFpQVB3Q0lDUVFCT0RRQWFJQUpCZjBZRVFDQUdRUU5JRFFzZ0F5OEFBVUdBL2dGcUlROGdBMEVEYWd3QkN5QUdRUUpJRFFvZ0F5MEFBU0FQUVFoMGNrR0FnQUpySVE4Z0EwRUNhZ3NoRWtHNGZ5RUpJQkpCQVdvaUFpQVZJQnRxSWdkTERRb2dMQ0FGSUJJdEFBQWlFa0VHZGtFalFRa2dBaUFISUFKclFjQVFRZEFSUWZBU0lBVW9Bb1RxQVNBS0lBOGdGQkFoSWdsQmlIOUxEUWdnS3lBb0lCSkJCSFpCQTNGQkgwRUlJQUlnQ1dvaUFpQUhJQUpyUVlBTFFZQU1RWUFYSUFVb0FvVHFBU0FGS0FLYzZ3RWdEeUFVRUNFaUNFR0lmMHNOQ0VGc0lRa2dLaUF0SUJKQkFuWkJBM0ZCTkVFSklBSWdDR29pQWlBSElBSnJRWUFOUWVBT1FaQVpJQVVvQW9UcUFTQUZLQUtjNndFZ0R5QVVFQ0VpQjBHSWYwc05DaUFDSUFkcUlBTnJJZ0loQ1NBQ1FZaC9TdzBLQ3lBT0lBOUJBRXh5RFFFTFFicC9JUWtNQ0FzZ0pTQU9heUVKSUFZZ0Ftc2hCaUFDSUFOcUlRY0NRQUpBQWtBZ0NrVUVRQ0FQUVFsSUlBVXBBOGpwQVVLQmdJQUlWSElOQWlBb0tBSUFJZ0pCQ0dvaEVpQUNLQUlFSVFwQkFDRURRUUFoQWdOQUlBTWdDblpGQkVBZ0FpQVNJQU5CQTNScUxRQUNRUlpMYWlFQ0lBTkJBV29oQXd3QkN3c2dCVUVBTmdLYzZ3RWdBa0VJSUFwcmRFRVVUdzBCREFNTElBVkJBRFlDbk9zQkN5QUVJQVVvQXZEcUFTSUROZ0xjQVNBSklBNXFJUllnQXlBRktBS0E2d0ZxSVJjQ1FDQVBSUVJBSUE0aEJ3d0JDeUFGS0FLNDZRRWhHaUFGS0FLMDZRRWhHQ0FGS0FLdzZRRWhFaUFGUVFFMkFvVHFBVUVBSVFNRFFDQURRUU5IQkVBZ0JDQURRUUowSWdKcUlBSWdCV3BCck5BQmFpZ0NBRFlDWkNBRFFRRnFJUU1NQVFzTFFXd2hDU0FFUVRocUlnSWdCeUFHRUExQmlIOUxEUU5CQ0NBUElBOUJDRTRiSVI4Z05DQUNJQVVvQWdBUUhpQXpJQUlnQlNnQ0NCQWVJRElnQWlBRktBSUVFQjRnRGlBU2F5RVpRUUFoQ0FOQUlBUkJPR29RRDBFRFJpQUlJQjlPY2tVRVFDQUVLQUpRSUFRb0FreEJBM1JxS1FJQUlrQ25JZ2RCRUhZaUVVSC9BWEVoQ3lBRUtBSmdJQVFvQWx4QkEzUnFLUUlBSWtHbklneEJFSFlpSVVIL0FYRWhFQ0FFS0FKWUlBUW9BbFJCQTNScUtRSUFJa0pDSUlpbklRWWdRVUlnaUNCQVFpQ0lweUVEQWtBZ1FrSVFpS2NpQ2tIL0FYRWlBa0VDVHdSQUFrQWdBa0VaU1NBL1FvR0FnQkJVY2tVRVFDQUVRU0FnQkNnQ1BDSUtheUlOSUFJZ0FpQU5TeHNpRXlBS2FqWUNQQ0FHSUFRb0FqZ2dDblJCQUNBVGEzWWdBaUFUYXlJVGRHb2hDaUFFUVRocUVBOGFJQUlnRFUwTkFTQUVJQVFvQWp3aUFpQVRhallDUENBRUtBSTRJQUowUVFBZ0UydDJJQXBxSVFvTUFRc2dCQ0FDSUFRb0Fqd2lEV28yQWp3Z0JDZ0NPQ0FOZEVFQUlBcHJkaUFHYWlFS0lBUkJPR29RRHhvTElBUXBBbVFoUkNBRUlBbzJBbVFnQkNCRU53Sm9EQUVMQWtBZ0FrVUVRQ0FEQkVBZ0JDZ0NaQ0VLREFNTElBUW9BbWdoQ2d3QkN5QUVJQVFvQWp3aUFrRUJhallDUEFKL0lBWWdBMFZxSUFRb0FqZ2dBblJCSDNacUlnSkJBMFlFUUNBRUtBSmtRUUZyREFFTElBSkJBblFnQkdvb0FtUUxJZ1pGSUFacUlRb2dBa0VCUndSQUlBUWdCQ2dDYURZQ2JBc0xJQVFnQkNnQ1pEWUNhQ0FFSUFvMkFtUUxweUVDSUVGQ2dJRDhCNE5RUlFSQUlBUWdCQ2dDUENJR0lCQnFOZ0k4SUFRb0FqZ2dCblJCQUNBaGEzWWdBbW9oQWdzZ0N5QVFha0VVVHdSQUlBUkJPR29RRHhvTElFQkNnSUQ4QjROUVJRUkFJQVFnQkNnQ1BDSUdJQXRxTmdJOElBUW9BamdnQm5SQkFDQVJhM1lnQTJvaEF3c2dCRUU0YWhBUEdpQUVJQVFvQWpnaUJrRUFJQWRCR0hZaUN5QUVLQUk4YWlJUWEzWWdDMEVDZEVHZ0hXb29BZ0J4SUFkQi8vOERjV28yQWt3Z0JDQVFJQXhCR0hZaUIyb2lDellDUENBRUlBZEJBblJCb0IxcUtBSUFJQVpCQUNBTGEzWnhJQXhCLy84RGNXbzJBbHdnQkVFNGFoQVBHaUFFSUVLbklnWkJHSFlpQnlBRUtBSThhaUlMTmdJOElBUWdCMEVDZEVHZ0hXb29BZ0FnQkNnQ09FRUFJQXRyZG5FZ0JrSC8vd054YWpZQ1ZDQUVRZkFBYWlBSVFReHNhaUlHSUFvMkFnZ2dCaUFDTmdJRUlBWWdBellDQUNBSVFRRnFJUWdnQXlBWmFpQUNhaUVaREFFTEN5QUlJQjlJRFFNZ0ZrRWdheUVoSUE0aEJ3TkFJQVJCT0dvUUQwRURSaUFJSUE5T2NrVUVRQ0FFS0FKUUlBUW9Ba3hCQTNScUtRSUFJa0NuSWdaQkVIWWlJMEgvQVhFaENpQUVLQUpnSUFRb0FseEJBM1JxS1FJQUlrR25JZzFCRUhZaUlFSC9BWEVoRXlBRUtBSllJQVFvQWxSQkEzUnFLUUlBSWtKQ0lJaW5JUU1nUVVJZ2lDQkFRaUNJcHlFTEFrQWdRa0lRaUtjaURFSC9BWEVpQWtFQ1R3UkFBa0FnQWtFWlNTQS9Rb0dBZ0JCVWNrVUVRQ0FFUVNBZ0JDZ0NQQ0lNYXlJUklBSWdBaUFSU3hzaUVDQU1hallDUENBRElBUW9BamdnREhSQkFDQVFhM1lnQWlBUWF5SU1kR29oRUNBRVFUaHFFQThhSUFJZ0VVME5BU0FFSUFRb0Fqd2lBaUFNYWpZQ1BDQUVLQUk0SUFKMFFRQWdER3QySUJCcUlSQU1BUXNnQkNBQ0lBUW9BandpRUdvMkFqd2dCQ2dDT0NBUWRFRUFJQXhyZGlBRGFpRVFJQVJCT0dvUUR4b0xJQVFwQW1RaFJDQUVJQkEyQW1RZ0JDQkVOd0pvREFFTEFrQWdBa1VFUUNBTEJFQWdCQ2dDWkNFUURBTUxJQVFvQW1naEVBd0JDeUFFSUFRb0Fqd2lBa0VCYWpZQ1BBSi9JQU1nQzBWcUlBUW9BamdnQW5SQkgzWnFJZ0pCQTBZRVFDQUVLQUprUVFGckRBRUxJQUpCQW5RZ0JHb29BbVFMSWdORklBTnFJUkFnQWtFQlJ3UkFJQVFnQkNnQ2FEWUNiQXNMSUFRZ0JDZ0NaRFlDYUNBRUlCQTJBbVFMcHlFTUlFRkNnSUQ4QjROUVJRUkFJQVFnQkNnQ1BDSUNJQk5xTmdJOElBUW9BamdnQW5SQkFDQWdhM1lnREdvaERBc2dDaUFUYWtFVVR3UkFJQVJCT0dvUUR4b0xJRUJDZ0lEOEI0TlFSUVJBSUFRZ0JDZ0NQQ0lDSUFwcU5nSThJQVFvQWpnZ0FuUkJBQ0FqYTNZZ0Myb2hDd3NnQkVFNGFoQVBHaUFFSUFRb0FqZ2lBa0VBSUFaQkdIWWlBeUFFS0FJOGFpSUthM1lnQTBFQ2RFR2dIV29vQWdCeElBWkIvLzhEY1dvMkFrd2dCQ0FLSUExQkdIWWlBMm9pQmpZQ1BDQUVJQU5CQW5SQm9CMXFLQUlBSUFKQkFDQUdhM1p4SUExQi8vOERjV28yQWx3Z0JFRTRhaEFQR2lBRUlFS25JZ0pCR0hZaUF5QUVLQUk4YWlJR05nSThJQVFnQTBFQ2RFR2dIV29vQWdBZ0JDZ0NPRUVBSUFacmRuRWdBa0gvL3dOeGFqWUNWQUpBQWtBQ1FDQUVLQUxjQVNJRElBUkI4QUJxSUFoQkIzRkJER3hxSWhNb0FnQWlFV29pSXlBWFN3MEFJQWNnRXlnQ0JDSU5JQkZxSWdwcUlDRkxEUUFnQ2tFZ2FpQVdJQWRyVFEwQkN5QUVJQk1vQWdnMkFoZ2dCQ0FUS1FJQU53TVFJQWNnRmlBRVFSQnFJQVJCM0FGcUlCY2dFaUFZSUJvUUh5RUtEQUVMSUFjZ0VXb2hBaUFUS0FJSUlRWWdCeUFES1FBQU53QUFJQWNnQXlrQUNEY0FDQUpBSUJGQkVVa05BQ0FISUFNcEFCQTNBQkFnQnlBREtRQVlOd0FZSUJGQkVHdEJFVWdOQUNBRFFSQnFJUU1nQjBFZ2FpRVJBMEFnRVNBREtRQVFOd0FBSUJFZ0F5a0FHRGNBQ0NBUklBTXBBQ0EzQUJBZ0VTQURLUUFvTndBWUlBTkJJR29oQXlBUlFTQnFJaEVnQWtrTkFBc0xJQUlnQm1zaEF5QUVJQ00yQXR3QklBSWdFbXNnQmtrRVFDQUdJQUlnR0d0TERRY2dHaUFhSUFNZ0Vtc2lBMm9pRVNBTmFrOEVRQ0FDSUJFZ0RSQUtHZ3dDQ3lBRElBMXFJUTBnQWlBUlFRQWdBMnNRQ2lBRGF5RUNJQkloQXdzZ0JrRVFUd1JBSUFJZ0F5a0FBRGNBQUNBQ0lBTXBBQWczQUFnZ0RVRVJTQTBCSUFJZ0RXb2hCaUFDUVJCcUlRSURRQ0FDSUFNcEFCQTNBQUFnQWlBREtRQVlOd0FJSUFJZ0F5a0FJRGNBRUNBQ0lBTXBBQ2czQUJnZ0EwRWdhaUVESUFKQklHb2lBaUFHU1EwQUN3d0JDd0pBSUFaQkIwMEVRQ0FDSUFNdEFBQTZBQUFnQWlBRExRQUJPZ0FCSUFJZ0F5MEFBam9BQWlBQ0lBTXRBQU02QUFNZ0FpQURJQVpCQW5RaUJrSEFIbW9vQWdCcUlnTW9BQUEyQUFRZ0F5QUdRZUFlYWlnQ0FHc2hBd3dCQ3lBQ0lBTXBBQUEzQUFBTElBMUJDVWtOQUNBQ0lBMXFJUkVnQWtFSWFpSUdJQU5CQ0dvaUEydEJEMHdFUUFOQUlBWWdBeWtBQURjQUFDQURRUWhxSVFNZ0JrRUlhaUlHSUJGSkRRQU1BZ3NBQ3lBR0lBTXBBQUEzQUFBZ0JpQURLUUFJTndBSUlBMUJHVWdOQUNBQ1FSaHFJUUlEUUNBQ0lBTXBBQkEzQUFBZ0FpQURLUUFZTndBSUlBSWdBeWtBSURjQUVDQUNJQU1wQUNnM0FCZ2dBMEVnYWlFRElBSkJJR29pQWlBUlNRMEFDd3NnQ2tHSWYwc0VRQ0FLSVFrTUJnVWdFeUFRTmdJSUlCTWdERFlDQkNBVElBczJBZ0FnQ0VFQmFpRUlJQWNnQ21vaEJ5QUxJQmxxSUF4cUlSa01BZ3NBQ3dzZ0NDQVBTQTBESUFnZ0gyc2hCZ05BQWtBZ0JpQVBUZ1JBUVFBaEF3TkFJQU5CQTBZTkFpQUZJQU5CQW5RaUFtcEJyTkFCYWlBQ0lBUnFLQUprTmdJQUlBTkJBV29oQXd3QUN3QUxBa0FDUUFKQUlBUW9BdHdCSWdNZ0JFSHdBR29nQmtFSGNVRU1iR29pQ0NnQ0FDSU1haUlRSUJkTERRQWdCeUFJS0FJRUlnc2dER29pQ21vZ0lVc05BQ0FLUVNCcUlCWWdCMnRORFFFTElBUWdDQ2dDQ0RZQ0tDQUVJQWdwQWdBM0F5QWdCeUFXSUFSQklHb2dCRUhjQVdvZ0Z5QVNJQmdnR2hBZklRb01BUXNnQnlBTWFpRUNJQWdvQWdnaENDQUhJQU1wQUFBM0FBQWdCeUFES1FBSU53QUlBa0FnREVFUlNRMEFJQWNnQXlrQUVEY0FFQ0FISUFNcEFCZzNBQmdnREVFUWEwRVJTQTBBSUFOQkVHb2hBeUFIUVNCcUlRd0RRQ0FNSUFNcEFCQTNBQUFnRENBREtRQVlOd0FJSUF3Z0F5a0FJRGNBRUNBTUlBTXBBQ2czQUJnZ0EwRWdhaUVESUF4QklHb2lEQ0FDU1EwQUN3c2dBaUFJYXlFRElBUWdFRFlDM0FFZ0FpQVNheUFJU1FSQUlBZ2dBaUFZYTBzTkJ5QWFJQm9nQXlBU2F5SURhaUlNSUF0cVR3UkFJQUlnRENBTEVBb2FEQUlMSUFNZ0Myb2hDeUFDSUF4QkFDQURheEFLSUFOcklRSWdFaUVEQ3lBSVFSQlBCRUFnQWlBREtRQUFOd0FBSUFJZ0F5a0FDRGNBQ0NBTFFSRklEUUVnQWlBTGFpRUlJQUpCRUdvaEFnTkFJQUlnQXlrQUVEY0FBQ0FDSUFNcEFCZzNBQWdnQWlBREtRQWdOd0FRSUFJZ0F5a0FLRGNBR0NBRFFTQnFJUU1nQWtFZ2FpSUNJQWhKRFFBTERBRUxBa0FnQ0VFSFRRUkFJQUlnQXkwQUFEb0FBQ0FDSUFNdEFBRTZBQUVnQWlBRExRQUNPZ0FDSUFJZ0F5MEFBem9BQXlBQ0lBTWdDRUVDZENJSVFjQWVhaWdDQUdvaUF5Z0FBRFlBQkNBRElBaEI0QjVxS0FJQWF5RUREQUVMSUFJZ0F5a0FBRGNBQUFzZ0MwRUpTUTBBSUFJZ0Myb2hEQ0FDUVFocUlnZ2dBMEVJYWlJRGEwRVBUQVJBQTBBZ0NDQURLUUFBTndBQUlBTkJDR29oQXlBSVFRaHFJZ2dnREVrTkFBd0NDd0FMSUFnZ0F5a0FBRGNBQUNBSUlBTXBBQWczQUFnZ0MwRVpTQTBBSUFKQkdHb2hBZ05BSUFJZ0F5a0FFRGNBQUNBQ0lBTXBBQmczQUFnZ0FpQURLUUFnTndBUUlBSWdBeWtBS0RjQUdDQURRU0JxSVFNZ0FrRWdhaUlDSUF4SkRRQUxDeUFLUVloL1N3UkFJQW9oQ1F3R0JTQUdRUUZxSVFZZ0J5QUthaUVIREFJTEFBc0xJQVFvQXR3QklRTUxRYnAvSVFrZ0Z5QURheUlDSUJZZ0IydExEUUlnQndSL0lBY2dBeUFDRUFJZ0Ftb0ZRUUFMSUE1cklRa01BZ3NnQlVFQU5nS2M2d0VMSUFRZ0JTZ0M4T29CSWdNMkF0d0JJQWtnRG1vaERDQURJQVVvQW9EckFXb2hFQUpBSUE5RkJFQWdEaUVHREFFTElBVW9BcmpwQVNFTklBVW9BclRwQVNFVElBVW9BckRwQVNFU0lBVkJBVFlDaE9vQlFRQWhBd05BSUFOQkEwY0VRQ0FFSUFOQkFuUWlBbW9nQWlBRmFrR3MwQUZxS0FJQU5nS2NBU0FEUVFGcUlRTU1BUXNMUVd3aENTQUVRZkFBYWlJQ0lBY2dCaEFOUVloL1N3MEJJREVnQWlBRktBSUFFQjRnTUNBQ0lBVW9BZ2dRSGlBdklBSWdCU2dDQkJBZUlBeEJJR3NoR0NBT0lRWURRQ0FFS0FLSUFTQUVLQUtFQVVFRGRHb3BBZ0FpUUtjaUNrRVFkaUlaUWY4QmNTRUxJQVFvQXBnQklBUW9BcFFCUVFOMGFpa0NBQ0pCcHlJV1FSQjJJaDlCL3dGeElSb2dCQ2dDa0FFZ0JDZ0NqQUZCQTNScUtRSUFJa0pDSUlpbklRY2dRVUlnaUNCQVFpQ0lweUVEQWtBZ1FrSVFpS2NpQ0VIL0FYRWlBa0VDVHdSQUFrQWdBa0VaU1NBL1FvR0FnQkJVY2tVRVFDQUVRU0FnQkNnQ2RDSUlheUlSSUFJZ0FpQVJTeHNpRnlBSWFqWUNkQ0FISUFRb0FuQWdDSFJCQUNBWGEzWWdBaUFYYXlJWGRHb2hDQ0FFUWZBQWFoQVBHaUFDSUJGTkRRRWdCQ0FFS0FKMElnSWdGMm8yQW5RZ0JDZ0NjQ0FDZEVFQUlCZHJkaUFJYWlFSURBRUxJQVFnQWlBRUtBSjBJaEZxTmdKMElBUW9BbkFnRVhSQkFDQUlhM1lnQjJvaENDQUVRZkFBYWhBUEdnc2dCQ2tDbkFFaFJDQUVJQWcyQXB3QklBUWdSRGNDb0FFTUFRc0NRQ0FDUlFSQUlBTUVRQ0FFS0FLY0FTRUlEQU1MSUFRb0FxQUJJUWdNQVFzZ0JDQUVLQUowSWdKQkFXbzJBblFDZnlBSElBTkZhaUFFS0FKd0lBSjBRUjkyYWlJQ1FRTkdCRUFnQkNnQ25BRkJBV3NNQVFzZ0FrRUNkQ0FFYWlnQ25BRUxJZ2RGSUFkcUlRZ2dBa0VCUndSQUlBUWdCQ2dDb0FFMkFxUUJDd3NnQkNBRUtBS2NBVFlDb0FFZ0JDQUlOZ0tjQVF1bklRSWdRVUtBZ1B3SGcxQkZCRUFnQkNBRUtBSjBJZ2NnR21vMkFuUWdCQ2dDY0NBSGRFRUFJQjlyZGlBQ2FpRUNDeUFMSUJwcVFSUlBCRUFnQkVId0FHb1FEeG9MSUVCQ2dJRDhCNE5RUlFSQUlBUWdCQ2dDZENJSElBdHFOZ0owSUFRb0FuQWdCM1JCQUNBWmEzWWdBMm9oQXdzZ0JFSHdBR29RRHhvZ0JDQUVLQUp3SWdkQkFDQUtRUmgySWdzZ0JDZ0NkR29pR210MklBdEJBblJCb0IxcUtBSUFjU0FLUWYvL0EzRnFOZ0tFQVNBRUlCb2dGa0VZZGlJS2FpSUxOZ0owSUFRZ0NrRUNkRUdnSFdvb0FnQWdCMEVBSUF0cmRuRWdGa0gvL3dOeGFqWUNsQUVnQkVId0FHb1FEeG9nQkNCQ3B5SUhRUmgySWdvZ0JDZ0NkR29pQ3pZQ2RDQUVJQXBCQW5SQm9CMXFLQUlBSUFRb0FuQkJBQ0FMYTNaeElBZEIvLzhEY1dvMkFvd0JJQVFnQXpZQ09DQUVJQUkyQWp3Z0JDQUlOZ0pBQWtBQ1FBSkFJQVFvQXR3Qklnc2dBMm9pRmlBUVN3MEFJQVlnQWlBRGFpSUthaUFZU3cwQUlBcEJJR29nRENBR2EwME5BUXNnQkNBRVFVQnJLQUlBTmdJSUlBUWdCQ2tET0RjREFDQUdJQXdnQkNBRVFkd0JhaUFRSUJJZ0V5QU5FQjhoQ2d3QkN5QURJQVpxSVFjZ0JpQUxLUUFBTndBQUlBWWdDeWtBQ0RjQUNBSkFJQU5CRVVrTkFDQUdJQXNwQUJBM0FCQWdCaUFMS1FBWU53QVlJQU5CRUd0QkVVZ05BQ0FMUVJCcUlRTWdCa0VnYWlFTEEwQWdDeUFES1FBUU53QUFJQXNnQXlrQUdEY0FDQ0FMSUFNcEFDQTNBQkFnQ3lBREtRQW9Od0FZSUFOQklHb2hBeUFMUVNCcUlnc2dCMGtOQUFzTElBY2dDR3NoQXlBRUlCWTJBdHdCSUFjZ0Vtc2dDRWtFUUNBSUlBY2dFMnRMRFFRZ0RTQU5JQU1nRW1zaUEyb2lDeUFDYWs4RVFDQUhJQXNnQWhBS0dnd0NDeUFISUF0QkFDQURheEFLSUFRZ0FpQURhaUlDTmdJOElBTnJJUWNnRWlFREN5QUlRUkJQQkVBZ0J5QURLUUFBTndBQUlBY2dBeWtBQ0RjQUNDQUNRUkZJRFFFZ0FpQUhhaUVJSUFkQkVHb2hBZ05BSUFJZ0F5a0FFRGNBQUNBQ0lBTXBBQmczQUFnZ0FpQURLUUFnTndBUUlBSWdBeWtBS0RjQUdDQURRU0JxSVFNZ0FrRWdhaUlDSUFoSkRRQUxEQUVMQWtBZ0NFRUhUUVJBSUFjZ0F5MEFBRG9BQUNBSElBTXRBQUU2QUFFZ0J5QURMUUFDT2dBQ0lBY2dBeTBBQXpvQUF5QUhJQU1nQ0VFQ2RDSUlRY0FlYWlnQ0FHb2lBeWdBQURZQUJDQURJQWhCNEI1cUtBSUFheUVEREFFTElBY2dBeWtBQURjQUFBc2dBa0VKU1EwQUlBSWdCMm9oQ3lBSFFRaHFJZ2dnQTBFSWFpSURhMEVQVEFSQUEwQWdDQ0FES1FBQU53QUFJQU5CQ0dvaEF5QUlRUWhxSWdnZ0Mwa05BQXdDQ3dBTElBZ2dBeWtBQURjQUFDQUlJQU1wQUFnM0FBZ2dBa0VaU0EwQUlBZEJHR29oQWdOQUlBSWdBeWtBRURjQUFDQUNJQU1wQUJnM0FBZ2dBaUFES1FBZ053QVFJQUlnQXlrQUtEY0FHQ0FEUVNCcUlRTWdBa0VnYWlJQ0lBdEpEUUFMQ3lBS1FZaC9Td1JBSUFvaENRd0RDeUFHSUFwcUlRWWdCRUh3QUdvUUR5RURJQTlCQVdzaUR3MEFDMEVBSVFJZ0EwRUNTUTBCQTBBZ0FrRURSd1JBSUFVZ0FrRUNkQ0lEYWtHczBBRnFJQU1nQkdvb0Fwd0JOZ0lBSUFKQkFXb2hBZ3dCQ3dzZ0JDZ0MzQUVoQXd0QnVuOGhDU0FRSUFOcklnSWdEQ0FHYTBzTkFDQUdCSDhnQmlBRElBSVFBaUFDYWdWQkFBc2dEbXNoQ1FzZ0NVR0lmMHNOQmdzQ1FDQUZLQUxzNmdGRkRRQWdCU0FGS1FPSTZnRWdDYTE4TndPSTZnRUNRQ0FGS0FMUTZnRWlBaUFKYWlJSVFSOU5CRUFnRGtVTkFTQUNJQ0pxSUE0Z0NSQUNHaUFGS0FMUTZnRWdDV29oQ0F3QkN5QU9JUU1nQWdSQUlBSWdJbW9nQTBFZ0lBSnJFQUlhSUFVb0F0RHFBU0VDSUFWQkFEWUMwT29CSUFVZ0JTa0RrT29CSUFVcEFMRHFBVUxQMXRPKzBzZXIyVUorZkVJZmlVS0hsYSt2bUxiZW01NS9mamNEa09vQklBVWdCU2tEbU9vQklBVXBBTGpxQVVMUDF0Tyswc2VyMlVKK2ZFSWZpVUtIbGErdm1MYmVtNTUvZmpjRG1Pb0JJQVVnQlNrRG9Pb0JJQVVwQU1EcUFVTFAxdE8rMHNlcjJVSitmRUlmaVVLSGxhK3ZtTGJlbTU1L2ZqY0RvT29CSUFVZ0JTa0RxT29CSUFVcEFNanFBVUxQMXRPKzBzZXIyVUorZkVJZmlVS0hsYSt2bUxiZW01NS9mamNEcU9vQklBTWdBbXRCSUdvaEF3c2dDU0FPYWlJQ0lBTkJJR3BQQkVBZ0FrRWdheUVHSUFVcEE2anFBU0UvSUFVcEE2RHFBU0ZBSUFVcEE1anFBU0ZCSUFVcEE1RHFBU0ZDQTBBZ0F5a0FHRUxQMXRPKzBzZXIyVUorSUQ5OFFoK0pRb2VWcjYrWXR0NmJubjkrSVQ4Z0F5a0FFRUxQMXRPKzBzZXIyVUorSUVCOFFoK0pRb2VWcjYrWXR0NmJubjkrSVVBZ0F5a0FDRUxQMXRPKzBzZXIyVUorSUVGOFFoK0pRb2VWcjYrWXR0NmJubjkrSVVFZ0F5a0FBRUxQMXRPKzBzZXIyVUorSUVKOFFoK0pRb2VWcjYrWXR0NmJubjkrSVVJZ0EwRWdhaUlESUFaTkRRQUxJQVVnUHpjRHFPb0JJQVVnUURjRG9Pb0JJQVVnUVRjRG1Pb0JJQVVnUWpjRGtPb0JDeUFDSUFOTkRRRWdJaUFESUFJZ0Eyc2lDQkFDR2dzZ0JTQUlOZ0xRNmdFTElEVWdGV3NoQXlBVklCdHFJUUlnQ1NBT2FpRU9JQVFvQWpCRkRRQUxJQ2twQXdBaVAwSi9VU0EvSUE0Z0hXdXNVWEpGQkVCQmJDRUpEQVlMSUFVb0F1RHBBUVJBUVdvaENTQURRUVJKRFFZZ0JTZ0M2T29CUlFSQUlDSWdCU2dDME9vQmFpRUtBbjRnQlNrRGlPb0JJajlDSUZvRVFDQUZLUU9ZNmdFaVFFSUhpU0FGS1FPUTZnRWlRVUlCaVh3Z0JTa0RvT29CSWtKQ0RJbDhJQVVwQTZqcUFTSkRRaEtKZkNCQlFzL1cwNzdTeDZ2WlFuNUNINGxDaDVXdnI1aTIzcHVlZjM2RlFvZVZyNitZdHQ2Ym5uOStRcDJqdGVxRHNZMksrZ0I5SUVCQ3o5YlR2dExIcTlsQ2ZrSWZpVUtIbGErdm1MYmVtNTUvZm9WQ2g1V3ZyNWkyM3B1ZWYzNUNuYU8xNm9PeGpZcjZBSDBnUWtMUDF0Tyswc2VyMlVKK1FoK0pRb2VWcjYrWXR0NmJubjkraFVLSGxhK3ZtTGJlbTU1L2ZrS2RvN1hxZzdHTml2b0FmU0JEUXMvVzA3N1N4NnZaUW41Q0g0bENoNVd2cjVpMjNwdWVmMzZGUW9lVnI2K1l0dDZibm45K1FwMmp0ZXFEc1kySytnQjlEQUVMSUFVcEE2RHFBVUxGejlteThlVzY2aWQ4Q3lBL2ZDRS9JQ0loQmdOQUlBb2dCa0VJYWlJSFR3UkFJQVlwQUFCQ3o5YlR2dExIcTlsQ2ZrSWZpVUtIbGErdm1MYmVtNTUvZmlBL2hVSWJpVUtIbGErdm1MYmVtNTUvZmtLZG83WHFnN0dOaXZvQWZTRS9JQWNoQmd3QkN3c0NRQ0FLSUFaQkJHb2lDRWtFUUNBR0lRZ01BUXNnQmpVQUFFS0hsYSt2bUxiZW01NS9maUEvaFVJWGlVTFAxdE8rMHNlcjJVSitRdm56M2ZHWjlwbXJGbndoUHdzRFFDQUlJQXBKQkVBZ0NERUFBRUxGejlteThlVzY2aWQrSUQrRlFndUpRb2VWcjYrWXR0NmJubjkrSVQ4Z0NFRUJhaUVJREFFTEN5QUNLQUFBSUQ5Q0lZZ2dQNFZDejliVHZ0TEhxOWxDZmlJL1FoMklJRCtGUXZuejNmR1o5cG1yRm40aVAwSWdpQ0EvaGFkSERRY0xJQU5CQkdzaEF5QUNRUVJxSVFJTElBNGdIV3NpQ1VHSmYwOE5CQ0FCSUFscklRRWdDU0FkYWlFZFFRRWhQZ3dCQ3d0QnVIOGhCeUFERFFRZ0hTQUFheUVIREFRTFFXd2hDUXdCQzBHNGZ5RUpDMEc0ZnlFSElBbEJka1lnUG5FTkFRc2dDU0VIQ3lnQ0FBMEFJQVZCL09vQmFpZ0NBQ0VCSUFWQitPb0JhaWdDQUNFQUlBVVFHQ0FGS0FLdzZ3RWdBQ0FCRUJNZ0JVRUFOZ0t3NndFZ0JTZ0NwT3NCSWdJRVFBSkFBa0FDUUFKQUlBSW9BZ0FpQXdSQUlBQkZEUUlnQVNBRElBQVJBZ0FNQVFzZ0FFVU5BZ3NnQVNBQ0lBQVJBZ0FNQWdzZ0F4QUdDeUFDRUFZTElBVkJBRFlDcE9zQkN5QUFCRUFnQVNBRklBQVJBZ0FNQVFzZ0JSQUdDeUFFUWVBQmFpUUFJQWNMQzZnVkNRQkJpQWdMRFFFQUFBQUJBQUFBQWdBQUFBSUFRYUFJQzdNR0FRQUFBQUVBQUFBQ0FBQUFBZ0FBQUNZQUFBQ0NBQUFBSVFVQUFFb0FBQUJuQ0FBQUpnQUFBTUFCQUFDQUFBQUFTUVVBQUVvQUFBQytDQUFBS1FBQUFDd0NBQUNBQUFBQVNRVUFBRW9BQUFDK0NBQUFMd0FBQU1vQ0FBQ0FBQUFBaWdVQUFFb0FBQUNFQ1FBQU5RQUFBSE1EQUFDQUFBQUFuUVVBQUVvQUFBQ2dDUUFBUFFBQUFJRURBQUNBQUFBQTZ3VUFBRXNBQUFBK0NnQUFSQUFBQUo0REFBQ0FBQUFBVFFZQUFFc0FBQUNxQ2dBQVN3QUFBTE1EQUFDQUFBQUF3UVlBQUUwQUFBQWZEUUFBVFFBQUFGTUVBQUNBQUFBQUl3Z0FBRkVBQUFDbUR3QUFWQUFBQUprRUFBQ0FBQUFBU3drQUFGY0FBQUN4RWdBQVdBQUFBTm9FQUFDQUFBQUFid2tBQUYwQUFBQWpGQUFBVkFBQUFFVUZBQUNBQUFBQVZBb0FBR29BQUFDTUZBQUFhZ0FBQUs4RkFBQ0FBQUFBZGdrQUFId0FBQUJPRUFBQWZBQUFBTklDQUFDQUFBQUFZd2NBQUpFQUFBQ1FCd0FBa2dBQUFBQUFBQUFCQUFBQUFRQUFBQVVBQUFBTkFBQUFIUUFBQUQwQUFBQjlBQUFBL1FBQUFQMEJBQUQ5QXdBQS9RY0FBUDBQQUFEOUh3QUEvVDhBQVAxL0FBRDkvd0FBL2Y4QkFQMy9Bd0Q5L3djQS9mOFBBUDMvSHdEOS96OEEvZjkvQVAzLy93RDkvLzhCL2YvL0EvMy8vd2Y5Ly84UC9mLy9ILzMvL3ovOS8vOS9BQUFBQUFFQUFBQUNBQUFBQXdBQUFBUUFBQUFGQUFBQUJnQUFBQWNBQUFBSUFBQUFDUUFBQUFvQUFBQUxBQUFBREFBQUFBMEFBQUFPQUFBQUR3QUFBQkFBQUFBUkFBQUFFZ0FBQUJNQUFBQVVBQUFBRlFBQUFCWUFBQUFYQUFBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUJ3QUFBQWRBQUFBSGdBQUFCOEFBQUFEQUFBQUJBQUFBQVVBQUFBR0FBQUFCd0FBQUFnQUFBQUpBQUFBQ2dBQUFBc0FBQUFNQUFBQURRQUFBQTRBQUFBUEFBQUFFQUFBQUJFQUFBQVNBQUFBRXdBQUFCUUFBQUFWQUFBQUZnQUFBQmNBQUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBSEFBQUFCMEFBQUFlQUFBQUh3QUFBQ0FBQUFBaEFBQUFJZ0FBQUNNQUFBQWxBQUFBSndBQUFDa0FBQUFyQUFBQUx3QUFBRE1BQUFBN0FBQUFRd0FBQUZNQUFBQmpBQUFBZ3dBQUFBTUJBQUFEQWdBQUF3UUFBQU1JQUFBREVBQUFBeUFBQUFOQUFBQURnQUFBQXdBQkFFSGdEd3RSQVFBQUFBRUFBQUFCQUFBQUFRQUFBQUlBQUFBQ0FBQUFBd0FBQUFNQUFBQUVBQUFBQkFBQUFBVUFBQUFIQUFBQUNBQUFBQWtBQUFBS0FBQUFDd0FBQUF3QUFBQU5BQUFBRGdBQUFBOEFBQUFRQUVIRUVBdUxBUUVBQUFBQ0FBQUFBd0FBQUFRQUFBQUZBQUFBQmdBQUFBY0FBQUFJQUFBQUNRQUFBQW9BQUFBTEFBQUFEQUFBQUEwQUFBQU9BQUFBRHdBQUFCQUFBQUFTQUFBQUZBQUFBQllBQUFBWUFBQUFIQUFBQUNBQUFBQW9BQUFBTUFBQUFFQUFBQUNBQUFBQUFBRUFBQUFDQUFBQUJBQUFBQWdBQUFBUUFBQUFJQUFBQUVBQUFBQ0FBQUFBQUFFQVFaQVNDK1lFQVFBQUFBRUFBQUFCQUFBQUFRQUFBQUlBQUFBQ0FBQUFBd0FBQUFNQUFBQUVBQUFBQmdBQUFBY0FBQUFJQUFBQUNRQUFBQW9BQUFBTEFBQUFEQUFBQUEwQUFBQU9BQUFBRHdBQUFCQUFBQUFCQUFBQUJBQUFBQWdBQUFBQUFBQUFBUUFCQVFZQUFBQUFBQUFFQUFBQUFCQUFBQVFBQUFBQUlBQUFCUUVBQUFBQUFBQUZBd0FBQUFBQUFBVUVBQUFBQUFBQUJRWUFBQUFBQUFBRkJ3QUFBQUFBQUFVSkFBQUFBQUFBQlFvQUFBQUFBQUFGREFBQUFBQUFBQVlPQUFBQUFBQUJCUkFBQUFBQUFBRUZGQUFBQUFBQUFRVVdBQUFBQUFBQ0JSd0FBQUFBQUFNRklBQUFBQUFBQkFVd0FBQUFJQUFHQlVBQUFBQUFBQWNGZ0FBQUFBQUFDQVlBQVFBQUFBQUtCZ0FFQUFBQUFBd0dBQkFBQUNBQUFBUUFBQUFBQUFBQUJBRUFBQUFBQUFBRkFnQUFBQ0FBQUFVRUFBQUFBQUFBQlFVQUFBQWdBQUFGQndBQUFBQUFBQVVJQUFBQUlBQUFCUW9BQUFBQUFBQUZDd0FBQUFBQUFBWU5BQUFBSUFBQkJSQUFBQUFBQUFFRkVnQUFBQ0FBQVFVV0FBQUFBQUFDQlJnQUFBQWdBQU1GSUFBQUFBQUFBd1VvQUFBQUFBQUdCRUFBQUFBUUFBWUVRQUFBQUNBQUJ3V0FBQUFBQUFBSkJnQUNBQUFBQUFzR0FBZ0FBREFBQUFRQUFBQUFFQUFBQkFFQUFBQWdBQUFGQWdBQUFDQUFBQVVEQUFBQUlBQUFCUVVBQUFBZ0FBQUZCZ0FBQUNBQUFBVUlBQUFBSUFBQUJRa0FBQUFnQUFBRkN3QUFBQ0FBQUFVTUFBQUFBQUFBQmc4QUFBQWdBQUVGRWdBQUFDQUFBUVVVQUFBQUlBQUNCUmdBQUFBZ0FBSUZIQUFBQUNBQUF3VW9BQUFBSUFBRUJUQUFBQUFBQUJBR0FBQUJBQUFBRHdZQWdBQUFBQUFPQmdCQUFBQUFBQTBHQUNBQVFZQVhDNGNDQVFBQkFRVUFBQUFBQUFBRkFBQUFBQUFBQmdROUFBQUFBQUFKQmYwQkFBQUFBQThGL1g4QUFBQUFGUVg5L3g4QUFBQURCUVVBQUFBQUFBY0VmUUFBQUFBQURBWDlEd0FBQUFBU0JmMy9Bd0FBQUJjRi9mOS9BQUFBQlFVZEFBQUFBQUFJQlAwQUFBQUFBQTRGL1Q4QUFBQUFGQVg5L3c4QUFBQUNCUUVBQUFBUUFBY0VmUUFBQUFBQUN3WDlCd0FBQUFBUkJmMy9BUUFBQUJZRi9mOC9BQUFBQkFVTkFBQUFFQUFJQlAwQUFBQUFBQTBGL1I4QUFBQUFFd1g5L3djQUFBQUJCUUVBQUFBUUFBWUVQUUFBQUFBQUNnWDlBd0FBQUFBUUJmMy9BQUFBQUJ3Ri9mLy9Ed0FBR3dYOS8vOEhBQUFhQmYzLy93TUFBQmtGL2YvL0FRQUFHQVg5Ly84QVFaQVpDNFlFQVFBQkFRWUFBQUFBQUFBR0F3QUFBQUFBQUFRRUFBQUFJQUFBQlFVQUFBQUFBQUFGQmdBQUFBQUFBQVVJQUFBQUFBQUFCUWtBQUFBQUFBQUZDd0FBQUFBQUFBWU5BQUFBQUFBQUJoQUFBQUFBQUFBR0V3QUFBQUFBQUFZV0FBQUFBQUFBQmhrQUFBQUFBQUFHSEFBQUFBQUFBQVlmQUFBQUFBQUFCaUlBQUFBQUFBRUdKUUFBQUFBQUFRWXBBQUFBQUFBQ0JpOEFBQUFBQUFNR093QUFBQUFBQkFaVEFBQUFBQUFIQm9NQUFBQUFBQWtHQXdJQUFCQUFBQVFFQUFBQUFBQUFCQVVBQUFBZ0FBQUZCZ0FBQUFBQUFBVUhBQUFBSUFBQUJRa0FBQUFBQUFBRkNnQUFBQUFBQUFZTUFBQUFBQUFBQmc4QUFBQUFBQUFHRWdBQUFBQUFBQVlWQUFBQUFBQUFCaGdBQUFBQUFBQUdHd0FBQUFBQUFBWWVBQUFBQUFBQUJpRUFBQUFBQUFFR0l3QUFBQUFBQVFZbkFBQUFBQUFDQmlzQUFBQUFBQU1HTXdBQUFBQUFCQVpEQUFBQUFBQUZCbU1BQUFBQUFBZ0dBd0VBQUNBQUFBUUVBQUFBTUFBQUJBUUFBQUFRQUFBRUJRQUFBQ0FBQUFVSEFBQUFJQUFBQlFnQUFBQWdBQUFGQ2dBQUFDQUFBQVVMQUFBQUFBQUFCZzRBQUFBQUFBQUdFUUFBQUFBQUFBWVVBQUFBQUFBQUJoY0FBQUFBQUFBR0dnQUFBQUFBQUFZZEFBQUFBQUFBQmlBQUFBQUFBQkFHQXdBQkFBQUFEd1lEZ0FBQUFBQU9CZ05BQUFBQUFBMEdBeUFBQUFBQURBWURFQUFBQUFBTEJnTUlBQUFBQUFvR0F3UUFRYVFkQzlrQkFRQUFBQU1BQUFBSEFBQUFEd0FBQUI4QUFBQS9BQUFBZndBQUFQOEFBQUQvQVFBQS93TUFBUDhIQUFEL0R3QUEveDhBQVA4L0FBRC9md0FBLy84QUFQLy9BUUQvL3dNQS8vOEhBUC8vRHdELy94OEEvLzgvQVAvL2Z3RC8vLzhBLy8vL0FmLy8vd1AvLy84SC8vLy9ELy8vL3gvLy8vOC8vLy8vZndBQUFBQUJBQUFBQWdBQUFBUUFBQUFBQUFBQUFnQUFBQVFBQUFBSUFBQUFBQUFBQUFFQUFBQUNBQUFBQVFBQUFBUUFBQUFFQUFBQUJBQUFBQVFBQUFBSUFBQUFDQUFBQUFnQUFBQUhBQUFBQ0FBQUFBa0FBQUFLQUFBQUN3QkJnQjhMQTRBUkFRPT0iO3ZhciBPST1uZXcgeUEsVEk9ITE7YXN5bmMgZnVuY3Rpb24gY2UoQSxJLHQpe2xldCBlPW51bGw7dHlwZW9mIEEhPSJzdHJpbmciP2U9QS5ocmVmOkEuc3RhcnRzV2l0aCgiaHR0cCIpP2U9QTplPWAke0l9LyR7QX1gLGUuZW5kc1dpdGgoIi5qcyIpJiYoZT1lLnN1YnN0cmluZygwLGUubGVuZ3RoLTMpKSxlLmVuZHNXaXRoKCIud2FzbSIpJiYoZT1lLnN1YnN0cmluZygwLGUubGVuZ3RoLTUpKTtsZXQgZz1gJHtlfS53YXNtYCxyPWF3YWl0IGRBLmdldChgJHtnfS56c3RgLHtyZXNwb25zZVR5cGU6ImFycmF5YnVmZmVyIixwYXJhbXM6dH0pO1RJfHwoYXdhaXQgT0kuaW5pdCgpLFRJPSEwKTtsZXQgcz1PSS5kZWNvZGUobmV3IFVpbnQ4QXJyYXkoci5kYXRhKSkuYnVmZmVyO3JldHVybihhd2FpdCBpbXBvcnQoYCR7ZX0uanNgKSkuZGVmYXVsdCh7d2FzbUJpbmFyeTpzfSl9dmFyIHhJPWNlO3ZhciB3QT1uZXcgTWFwO2FzeW5jIGZ1bmN0aW9uIGZlKEEsSSx0KXtsZXQgZT1BLGc9QSxyPW51bGw7cmV0dXJuIHR5cGVvZiBBIT0ic3RyaW5nIiYmKGU9bmV3IFVSTChBLmhyZWYpLGc9ZS5ocmVmKSx3QS5oYXMoZyk/cj1hd2FpdCB3QS5nZXQoZyk6KHdBLnNldChnLHhJKGUsSSx0KSkscj1hd2FpdCB3QS5nZXQoZykpLHJ9dmFyIFBJPWZlO3ZhciBsZT17VGV4dEZpbGU6IlRleHRGaWxlIixCaW5hcnlGaWxlOiJCaW5hcnlGaWxlIixUZXh0U3RyZWFtOiJUZXh0U3RyZWFtIixCaW5hcnlTdHJlYW06IkJpbmFyeVN0cmVhbSIsSW1hZ2U6IkltYWdlIixNZXNoOiJNZXNoIixQb2x5RGF0YToiUG9seURhdGEiLEpzb25Db21wYXRpYmxlOiJKc29uQ29tcGF0aWJsZSJ9LEQ9bGU7dmFyIERlPXtJbnQ4OiJpbnQ4IixVSW50ODoidWludDgiLEludDE2OiJpbnQxNiIsVUludDE2OiJ1aW50MTYiLEludDMyOiJpbnQzMiIsVUludDMyOiJ1aW50MzIiLEludDY0OiJpbnQ2NCIsVUludDY0OiJ1aW50NjQiLFNpemVWYWx1ZVR5cGU6InVpbnQ2NCIsSWRlbnRpZmllclR5cGU6InVpbnQ2NCIsSW5kZXhWYWx1ZVR5cGU6ImludDY0IixPZmZzZXRWYWx1ZVR5cGU6ImludDY0In0scD1EZTt2YXIgdWU9e0Zsb2F0MzI6ImZsb2F0MzIiLEZsb2F0NjQ6ImZsb2F0NjQiLFNwYWNlUHJlY2lzaW9uVHlwZToiZmxvYXQ2NCJ9LFA9dWU7ZnVuY3Rpb24gaGUoQSxJKXtsZXQgdD1udWxsO3N3aXRjaChBKXtjYXNlIHAuVUludDg6e3Q9bmV3IFVpbnQ4QXJyYXkoSSk7YnJlYWt9Y2FzZSBwLkludDg6e3Q9bmV3IEludDhBcnJheShJKTticmVha31jYXNlIHAuVUludDE2Ont0PW5ldyBVaW50MTZBcnJheShJKTticmVha31jYXNlIHAuSW50MTY6e3Q9bmV3IEludDE2QXJyYXkoSSk7YnJlYWt9Y2FzZSBwLlVJbnQzMjp7dD1uZXcgVWludDMyQXJyYXkoSSk7YnJlYWt9Y2FzZSBwLkludDMyOnt0PW5ldyBJbnQzMkFycmF5KEkpO2JyZWFrfWNhc2UgcC5VSW50NjQ6e3R5cGVvZiBnbG9iYWxUaGlzLkJpZ1VpbnQ2NEFycmF5PT0iZnVuY3Rpb24iP3Q9bmV3IEJpZ1VpbnQ2NEFycmF5KEkpOnQ9bmV3IFVpbnQ4QXJyYXkoSSk7YnJlYWt9Y2FzZSBwLkludDY0Ont0eXBlb2YgZ2xvYmFsVGhpcy5CaWdJbnQ2NEFycmF5PT0iZnVuY3Rpb24iP3Q9bmV3IEJpZ0ludDY0QXJyYXkoSSk6dD1uZXcgVWludDhBcnJheShJKTticmVha31jYXNlIFAuRmxvYXQzMjp7dD1uZXcgRmxvYXQzMkFycmF5KEkpO2JyZWFrfWNhc2UgUC5GbG9hdDY0Ont0PW5ldyBGbG9hdDY0QXJyYXkoSSk7YnJlYWt9Y2FzZSJudWxsIjp7dD1udWxsO2JyZWFrfWNhc2UgbnVsbDp7dD1udWxsO2JyZWFrfWRlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJUeXBlIGlzIG5vdCBzdXBwb3J0ZWQgYXMgYSBUeXBlZEFycmF5Iil9cmV0dXJuIHR9dmFyIFk9aGU7dmFyIFpJPXR5cGVvZiBnbG9iYWxUaGlzLlNoYXJlZEFycmF5QnVmZmVyPT0iZnVuY3Rpb24iLGpJPW5ldyBUZXh0RW5jb2RlcixXST1uZXcgVGV4dERlY29kZXIoInV0Zi04Iik7ZnVuY3Rpb24gZGUoQSxJKXtsZXQgdD17ZmxhZ3M6InIiLGVuY29kaW5nOiJiaW5hcnkifSxlPUEuZnNfb3BlbihJLHQuZmxhZ3MpLHI9QS5mc19zdGF0KEkpLnNpemUsaT1udWxsO1pJP2k9bmV3IFNoYXJlZEFycmF5QnVmZmVyKHIpOmk9bmV3IEFycmF5QnVmZmVyKHIpO2xldCBzPW5ldyBVaW50OEFycmF5KGkpO3JldHVybiBBLmZzX3JlYWQoZSxzLDAsciwwKSxBLmZzX2Nsb3NlKGUpLHN9ZnVuY3Rpb24gVkkoQSxJLHQpe2xldCBlPW51bGw7Wkk/ZT1uZXcgU2hhcmVkQXJyYXlCdWZmZXIodCk6ZT1uZXcgQXJyYXlCdWZmZXIodCk7bGV0IGc9bmV3IFVpbnQ4QXJyYXkoZSkscj1uZXcgVWludDhBcnJheShBLkhFQVBVOC5idWZmZXIsSSx0KTtyZXR1cm4gZy5zZXQociksZ31mdW5jdGlvbiB5KEEsSSx0LGUpe2xldCBnPTA7cmV0dXJuIEkhPT1udWxsJiYoZz1BLmNjYWxsKCJpdGtfd2FzbV9pbnB1dF9hcnJheV9hbGxvYyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCx0LGUsSS5idWZmZXIuYnl0ZUxlbmd0aF0pLEEuSEVBUFU4LnNldChuZXcgVWludDhBcnJheShJLmJ1ZmZlciksZykpLGd9ZnVuY3Rpb24gaihBLEksdCl7bGV0IGU9SlNPTi5zdHJpbmdpZnkoSSksZz1BLmNjYWxsKCJpdGtfd2FzbV9pbnB1dF9qc29uX2FsbG9jIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLHQsZS5sZW5ndGhdKTtBLndyaXRlQXNjaWlUb01lbW9yeShlLGcsITEpfWZ1bmN0aW9uIFMoQSxJLHQsZSl7bGV0IGc9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsSSx0XSkscj1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfc2l6ZSIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxJLHRdKSxpPVZJKEEsZyxyKTtyZXR1cm4gWShlLGkuYnVmZmVyKX1mdW5jdGlvbiB6QShBLEkpe2xldCB0PUEuY2NhbGwoIml0a193YXNtX291dHB1dF9qc29uX2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIl0sWzAsSV0pLGU9QS5Bc2NpaVRvU3RyaW5nKHQpO3JldHVybiBKU09OLnBhcnNlKGUpfWZ1bmN0aW9uIHllKEEsSSx0LGUpe2UhPW51bGwmJmUubGVuZ3RoPjAmJmUuZm9yRWFjaChmdW5jdGlvbihuLEMpe3N3aXRjaChuLnR5cGUpe2Nhc2UgRC5UZXh0U3RyZWFtOntsZXQgbz1qSS5lbmNvZGUobi5kYXRhLmRhdGEpLGY9eShBLG8sQywwKSxRPXtzaXplOm8uYnVmZmVyLmJ5dGVMZW5ndGgsZGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2Z9YH07aihBLFEsQyk7YnJlYWt9Y2FzZSBELkpzb25Db21wYXRpYmxlOntsZXQgbz1qSS5lbmNvZGUoSlNPTi5zdHJpbmdpZnkobi5kYXRhKSksZj15KEEsbyxDLDApLFE9e3NpemU6by5idWZmZXIuYnl0ZUxlbmd0aCxkYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Zn1gfTtqKEEsUSxDKTticmVha31jYXNlIEQuQmluYXJ5U3RyZWFtOntsZXQgbz1uLmRhdGEuZGF0YSxmPXkoQSxvLEMsMCksUT17c2l6ZTpvLmJ1ZmZlci5ieXRlTGVuZ3RoLGRhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtmfWB9O2ooQSxRLEMpO2JyZWFrfWNhc2UgRC5UZXh0RmlsZTp7QS5mc193cml0ZUZpbGUobi5kYXRhLnBhdGgsbi5kYXRhLmRhdGEpO2JyZWFrfWNhc2UgRC5CaW5hcnlGaWxlOntBLmZzX3dyaXRlRmlsZShuLmRhdGEucGF0aCxuLmRhdGEuZGF0YSk7YnJlYWt9Y2FzZSBELkltYWdlOntsZXQgbz1uLmRhdGEsZj15KEEsby5kYXRhLEMsMCksUT15KEEsby5kaXJlY3Rpb24sQywxKSxFPXR5cGVvZiBvLm1ldGFkYXRhPy5lbnRyaWVzPCJ1Ij9KU09OLnN0cmluZ2lmeShBcnJheS5mcm9tKG8ubWV0YWRhdGEuZW50cmllcygpKSk6IltdIixjPXtpbWFnZVR5cGU6by5pbWFnZVR5cGUsbmFtZTpvLm5hbWUsb3JpZ2luOm8ub3JpZ2luLHNwYWNpbmc6by5zcGFjaW5nLGRpcmVjdGlvbjpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke1F9YCxzaXplOm8uc2l6ZSxkYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Zn1gLG1ldGFkYXRhOkV9O2ooQSxjLEMpO2JyZWFrfWNhc2UgRC5NZXNoOntsZXQgbz1uLmRhdGEsZj15KEEsby5wb2ludHMsQywwKSxRPXkoQSxvLmNlbGxzLEMsMSksRT15KEEsby5wb2ludERhdGEsQywyKSxjPXkoQSxvLmNlbGxEYXRhLEMsMyksdT17bWVzaFR5cGU6by5tZXNoVHlwZSxuYW1lOm8ubmFtZSxudW1iZXJPZlBvaW50czpvLm51bWJlck9mUG9pbnRzLHBvaW50czpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2Z9YCxudW1iZXJPZkNlbGxzOm8ubnVtYmVyT2ZDZWxscyxjZWxsczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke1F9YCxjZWxsQnVmZmVyU2l6ZTpvLmNlbGxCdWZmZXJTaXplLG51bWJlck9mUG9pbnRQaXhlbHM6by5udW1iZXJPZlBvaW50UGl4ZWxzLHBvaW50RGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke0V9YCxudW1iZXJPZkNlbGxQaXhlbHM6by5udW1iZXJPZkNlbGxQaXhlbHMsY2VsbERhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtjfWB9O2ooQSx1LEMpO2JyZWFrfWNhc2UgRC5Qb2x5RGF0YTp7bGV0IG89bi5kYXRhLGY9eShBLG8ucG9pbnRzLEMsMCksUT15KEEsby52ZXJ0aWNlcyxDLDEpLEU9eShBLG8ubGluZXMsQywyKSxjPXkoQSxvLnBvbHlnb25zLEMsMyksdT15KEEsby50cmlhbmdsZVN0cmlwcyxDLDQpLGQ9eShBLG8ucG9pbnREYXRhLEMsNSksUj15KEEsby5wb2ludERhdGEsQyw2KSxOPXtwb2x5RGF0YVR5cGU6by5wb2x5RGF0YVR5cGUsbmFtZTpvLm5hbWUsbnVtYmVyT2ZQb2ludHM6by5udW1iZXJPZlBvaW50cyxwb2ludHM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtmfWAsdmVydGljZXNCdWZmZXJTaXplOm8udmVydGljZXNCdWZmZXJTaXplLHZlcnRpY2VzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7UX1gLGxpbmVzQnVmZmVyU2l6ZTpvLmxpbmVzQnVmZmVyU2l6ZSxsaW5lczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke0V9YCxwb2x5Z29uc0J1ZmZlclNpemU6by5wb2x5Z29uc0J1ZmZlclNpemUscG9seWdvbnM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtjfWAsdHJpYW5nbGVTdHJpcHNCdWZmZXJTaXplOm8udHJpYW5nbGVTdHJpcHNCdWZmZXJTaXplLHRyaWFuZ2xlU3RyaXBzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7dX1gLG51bWJlck9mUG9pbnRQaXhlbHM6by5udW1iZXJPZlBvaW50UGl4ZWxzLHBvaW50RGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2R9YCxudW1iZXJPZkNlbGxQaXhlbHM6by5udW1iZXJPZkNlbGxQaXhlbHMsY2VsbERhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtSfWB9O2ooQSxOLEMpO2JyZWFrfWRlZmF1bHQ6dGhyb3cgRXJyb3IoIlVuc3VwcG9ydGVkIGlucHV0IEludGVyZmFjZVR5cGUiKX19KSxBLnJlc2V0TW9kdWxlU3Rkb3V0KCksQS5yZXNldE1vZHVsZVN0ZGVycigpO2xldCBnPUEuc3RhY2tTYXZlKCkscj0wO3RyeXtyPUEuY2FsbE1haW4oSS5zbGljZSgpKX1jYXRjaChuKXt0aHJvdyB0eXBlb2Ygbj09Im51bWJlciImJihjb25zb2xlLmxvZygiRXhjZXB0aW9uIHdoaWxlIHJ1bm5pbmcgcGlwZWxpbmU6IiksY29uc29sZS5sb2coInN0ZG91dDoiLEEuZ2V0TW9kdWxlU3Rkb3V0KCkpLGNvbnNvbGUuZXJyb3IoInN0ZGVycjoiLEEuZ2V0TW9kdWxlU3RkZXJyKCkpLHR5cGVvZiBBLmdldEV4Y2VwdGlvbk1lc3NhZ2U8InUiP2NvbnNvbGUuZXJyb3IoImV4Y2VwdGlvbjoiLEEuZ2V0RXhjZXB0aW9uTWVzc2FnZShuKSk6Y29uc29sZS5lcnJvcigiQnVpbGQgbW9kdWxlIGluIERlYnVnIG1vZGUgZm9yIGV4Y2VwdGlvbiBtZXNzYWdlIGluZm9ybWF0aW9uLiIpKSxufWZpbmFsbHl7QS5zdGFja1Jlc3RvcmUoZyl9bGV0IGk9QS5nZXRNb2R1bGVTdGRvdXQoKSxzPUEuZ2V0TW9kdWxlU3RkZXJyKCksYT1bXTtyZXR1cm4gdCE9bnVsbCYmdC5sZW5ndGg+MCYmcj09PTAmJnQuZm9yRWFjaChmdW5jdGlvbihuLEMpe2xldCBvPW51bGw7c3dpdGNoKG4udHlwZSl7Y2FzZSBELlRleHRTdHJlYW06e2xldCBRPUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9hZGRyZXNzIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLEMsMF0pLEU9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X3NpemUiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsQywwXSksYz1uZXcgVWludDhBcnJheShBLkhFQVBVOC5idWZmZXIsUSxFKTtvPXtkYXRhOldJLmRlY29kZShjKX07YnJlYWt9Y2FzZSBELkpzb25Db21wYXRpYmxlOntsZXQgUT1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfYWRkcmVzcyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxDLDBdKSxFPUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9zaXplIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLEMsMF0pLGM9bmV3IFVpbnQ4QXJyYXkoQS5IRUFQVTguYnVmZmVyLFEsRSk7bz1KU09OLnBhcnNlKFdJLmRlY29kZShjKSk7YnJlYWt9Y2FzZSBELkJpbmFyeVN0cmVhbTp7bGV0IFE9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsQywwXSksRT1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfc2l6ZSIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxDLDBdKTtvPXtkYXRhOlZJKEEsUSxFKX07YnJlYWt9Y2FzZSBELlRleHRGaWxlOntvPXtwYXRoOm4uZGF0YS5wYXRoLGRhdGE6QS5mc19yZWFkRmlsZShuLmRhdGEucGF0aCx7ZW5jb2Rpbmc6InV0ZjgifSl9O2JyZWFrfWNhc2UgRC5CaW5hcnlGaWxlOntvPXtwYXRoOm4uZGF0YS5wYXRoLGRhdGE6ZGUoQSxuLmRhdGEucGF0aCl9O2JyZWFrfWNhc2UgRC5JbWFnZTp7bGV0IFE9ekEoQSxDKTtRLmRhdGE9UyhBLEMsMCxRLmltYWdlVHlwZS5jb21wb25lbnRUeXBlKSxRLmRpcmVjdGlvbj1TKEEsQywxLFAuRmxvYXQ2NCksUS5tZXRhZGF0YT1uZXcgTWFwKFEubWV0YWRhdGEpLG89UTticmVha31jYXNlIEQuTWVzaDp7bGV0IFE9ekEoQSxDKTtRLm51bWJlck9mUG9pbnRzPjA/US5wb2ludHM9UyhBLEMsMCxRLm1lc2hUeXBlLnBvaW50Q29tcG9uZW50VHlwZSk6US5wb2ludHM9WShRLm1lc2hUeXBlLnBvaW50Q29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLFEubnVtYmVyT2ZDZWxscz4wP1EuY2VsbHM9UyhBLEMsMSxRLm1lc2hUeXBlLmNlbGxDb21wb25lbnRUeXBlKTpRLmNlbGxzPVkoUS5tZXNoVHlwZS5jZWxsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLFEubnVtYmVyT2ZQb2ludFBpeGVscz4wP1EucG9pbnREYXRhPVMoQSxDLDIsUS5tZXNoVHlwZS5wb2ludFBpeGVsQ29tcG9uZW50VHlwZSk6US5wb2ludERhdGE9WShRLm1lc2hUeXBlLnBvaW50UGl4ZWxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksUS5udW1iZXJPZkNlbGxQaXhlbHM+MD9RLmNlbGxEYXRhPVMoQSxDLDMsUS5tZXNoVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlKTpRLmNlbGxEYXRhPVkoUS5tZXNoVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksbz1RO2JyZWFrfWNhc2UgRC5Qb2x5RGF0YTp7bGV0IFE9ekEoQSxDKTtRLm51bWJlck9mUG9pbnRzPjA/US5wb2ludHM9UyhBLEMsMCxQLkZsb2F0MzIpOlEucG9pbnRzPW5ldyBGbG9hdDMyQXJyYXksUS52ZXJ0aWNlc0J1ZmZlclNpemU+MD9RLnZlcnRpY2VzPVMoQSxDLDEscC5VSW50MzIpOlEudmVydGljZXM9bmV3IFVpbnQzMkFycmF5LFEubGluZXNCdWZmZXJTaXplPjA/US5saW5lcz1TKEEsQywyLHAuVUludDMyKTpRLmxpbmVzPW5ldyBVaW50MzJBcnJheSxRLnBvbHlnb25zQnVmZmVyU2l6ZT4wP1EucG9seWdvbnM9UyhBLEMsMyxwLlVJbnQzMik6US5wb2x5Z29ucz1uZXcgVWludDMyQXJyYXksUS50cmlhbmdsZVN0cmlwc0J1ZmZlclNpemU+MD9RLnRyaWFuZ2xlU3RyaXBzPVMoQSxDLDQscC5VSW50MzIpOlEudHJpYW5nbGVTdHJpcHM9bmV3IFVpbnQzMkFycmF5LFEubnVtYmVyT2ZQb2ludFBpeGVscz4wP1EucG9pbnREYXRhPVMoQSxDLDUsUS5wb2x5RGF0YVR5cGUucG9pbnRQaXhlbENvbXBvbmVudFR5cGUpOlEucG9pbnREYXRhPVkoUS5wb2x5RGF0YVR5cGUucG9pbnRQaXhlbENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxRLm51bWJlck9mQ2VsbFBpeGVscz4wP1EuY2VsbERhdGE9UyhBLEMsNixRLnBvbHlEYXRhVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlKTpRLmNlbGxEYXRhPVkoUS5wb2x5RGF0YVR5cGUuY2VsbFBpeGVsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLG89UTticmVha31kZWZhdWx0OnRocm93IEVycm9yKCJVbnN1cHBvcnRlZCBvdXRwdXQgSW50ZXJmYWNlVHlwZSIpfWxldCBmPXt0eXBlOm4udHlwZSxkYXRhOm99O2EucHVzaChmKX0pLHtyZXR1cm5WYWx1ZTpyLHN0ZG91dDppLHN0ZGVycjpzLG91dHB1dHM6YX19dmFyIFhJPXllO3ZhciB3ZT10eXBlb2YgZ2xvYmFsVGhpcy5TaGFyZWRBcnJheUJ1ZmZlcjwidSI7ZnVuY3Rpb24gbWUoQSxJKXtpZihBPT1udWxsKXJldHVybltdO2xldCB0PVtdO2ZvcihsZXQgZT0wO2U8QS5sZW5ndGg7ZSsrKXtsZXQgZz1wZShBW2VdLEkpO2chPT1udWxsJiZ0LnB1c2goZyl9cmV0dXJuIHR9ZnVuY3Rpb24gcGUoQSxJKXtpZihBPT1udWxsKXJldHVybiBudWxsO2xldCB0PW51bGw7cmV0dXJuIEEuYnVmZmVyIT09dm9pZCAwP3Q9QS5idWZmZXI6QS5ieXRlTGVuZ3RoIT09dm9pZCAwJiYodD1BKSx3ZSYmdCBpbnN0YW5jZW9mIFNoYXJlZEFycmF5QnVmZmVyP251bGw6ST90OnQuc2xpY2UoMCl9dmFyIHpJPW1lO2Z1bmN0aW9uIFNlKEEpe3JldHVybltBLmRhdGEsQS5kaXJlY3Rpb25dfXZhciBfST1TZTtmdW5jdGlvbiBGZShBKXtyZXR1cm5bQS5wb2ludHMsQS5wb2ludERhdGEsQS5jZWxscyxBLmNlbGxEYXRhXX12YXIgdkk9RmU7ZnVuY3Rpb24gUmUoQSl7cmV0dXJuW0EucG9pbnRzLEEudmVydGljZXMsQS5saW5lcyxBLnBvbHlnb25zLEEudHJpYW5nbGVTdHJpcHMsQS5wb2ludERhdGEsQS5jZWxsRGF0YV19dmFyICRJPVJlO2FzeW5jIGZ1bmN0aW9uIE5lKEEsSSx0LGUpe2xldCBnPVhJKEEsSSx0LGUpLHI9W107cmV0dXJuIGcub3V0cHV0cy5mb3JFYWNoKGZ1bmN0aW9uKGkpe2lmKGkudHlwZT09PUQuQmluYXJ5U3RyZWFtfHxpLnR5cGU9PT1ELkJpbmFyeUZpbGUpe2xldCBzPWkuZGF0YTtyLnB1c2gocyl9ZWxzZSBpZihpLnR5cGU9PT1ELkltYWdlKXtsZXQgcz1pLmRhdGE7ci5wdXNoKC4uLl9JKHMpKX1lbHNlIGlmKGkudHlwZT09PUQuTWVzaCl7bGV0IHM9aS5kYXRhO3IucHVzaCguLi52SShzKSl9ZWxzZSBpZihpLnR5cGU9PT1ELlBvbHlEYXRhKXtsZXQgcz1pLmRhdGE7ci5wdXNoKC4uLiRJKHMpKX19KSxTQShnLHpJKHIsITApKX12YXIgQXQ9TmU7dmFyIFVlPXtydW5QaXBlbGluZTphc3luYyBmdW5jdGlvbihBLEksdCxlLGcscil7bGV0IGk9YXdhaXQgUEkoQSxJLHIpO3JldHVybiBhd2FpdCBBdChpLHQsZSxnKX19O29BKFVlKTslMEEvKiEgQnVuZGxlZCBsaWNlbnNlIGluZm9ybWF0aW9uOiUwQSUwQWNvbWxpbmsvZGlzdC9lc20vY29tbGluay5tanM6JTBBICAoKiolMEEgICAqIEBsaWNlbnNlJTBBICAgKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDJTBBICAgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMCUwQSAgICopJTBBKi8lMEEnO2RyKHlyKTtleHBvcnR7WUEgYXMgYmlvUmFkUmVhZEltYWdlLHFBIGFzIGJpb1JhZFdyaXRlSW1hZ2UsVUEgYXMgYm1wUmVhZEltYWdlLFNBIGFzIGJtcFdyaXRlSW1hZ2UsWSBhcyBleHRlbnNpb25Ub0ltYWdlSW8scnQgYXMgZmRmUmVhZEltYWdlLGZhIGFzIGZkZldyaXRlSW1hZ2UsJEEgYXMgZ2RjbVJlYWRJbWFnZSxldCBhcyBnZGNtV3JpdGVJbWFnZSxWQSBhcyBnZTRSZWFkSW1hZ2UsX0EgYXMgZ2U0V3JpdGVJbWFnZSxaQSBhcyBnZTVSZWFkSW1hZ2UsWEEgYXMgZ2U1V3JpdGVJbWFnZSx2QSBhcyBnZUFkd1JlYWRJbWFnZSx6QSBhcyBnZUFkd1dyaXRlSW1hZ2UseSBhcyBnZXREZWZhdWx0V2ViV29ya2VyLGQgYXMgZ2V0UGlwZWxpbmVXb3JrZXJVcmwsRSBhcyBnZXRQaXBlbGluZXNCYXNlVXJsLEtBIGFzIGdpcGxSZWFkSW1hZ2UsakEgYXMgZ2lwbFdyaXRlSW1hZ2UsT0EgYXMgaGRmNVJlYWRJbWFnZSxOQSBhcyBoZGY1V3JpdGVJbWFnZSxSQSBhcyBqcGVnUmVhZEltYWdlLGtBIGFzIGpwZWdXcml0ZUltYWdlLEpBIGFzIGxzbVJlYWRJbWFnZSxMQSBhcyBsc21Xcml0ZUltYWdlLENBIGFzIG1ldGFSZWFkSW1hZ2UsRUEgYXMgbWV0YVdyaXRlSW1hZ2UsTUEgYXMgbWdoUmVhZEltYWdlLEhBIGFzIG1naFdyaXRlSW1hZ2UsUEEgYXMgbWluY1JlYWRJbWFnZSx4QSBhcyBtaW5jV3JpdGVJbWFnZSxHQSBhcyBtcmNSZWFkSW1hZ2UsVEEgYXMgbXJjV3JpdGVJbWFnZSxoQSBhcyBuaWZ0aVJlYWRJbWFnZSx3QSBhcyBuaWZ0aVdyaXRlSW1hZ2UsYkEgYXMgbnJyZFJlYWRJbWFnZSxEQSBhcyBucnJkV3JpdGVJbWFnZSxCQSBhcyBwbmdSZWFkSW1hZ2UsZEEgYXMgcG5nV3JpdGVJbWFnZSxzdCBhcyByZWFkSW1hZ2UsbGEgYXMgcmVhZEltYWdlRmlsZVNlcmllcyxtbyBhcyByZWFkSW1hZ2VIdHRwLEF0IGFzIHNjYW5jb1JlYWRJbWFnZSx0dCBhcyBzY2FuY29Xcml0ZUltYWdlLFZnIGFzIHNldERlZmF1bHRXZWJXb3JrZXIsZHIgYXMgc2V0UGlwZWxpbmVXb3JrZXJVcmwsSGcgYXMgc2V0UGlwZWxpbmVzQmFzZVVybCx5QSBhcyB0aWZmUmVhZEltYWdlLFFBIGFzIHRpZmZXcml0ZUltYWdlLFdBIGFzIHZ0a1JlYWRJbWFnZSxGQSBhcyB2dGtXcml0ZUltYWdlLGl0IGFzIHdhc21SZWFkSW1hZ2Usb3QgYXMgd2FzbVdyaXRlSW1hZ2UsYXQgYXMgd2FzbVpzdGRSZWFkSW1hZ2UsbnQgYXMgd2FzbVpzdGRXcml0ZUltYWdlLG1hIGFzIHdyaXRlSW1hZ2V9OwovKiEgQnVuZGxlZCBsaWNlbnNlIGluZm9ybWF0aW9uOgoKY29tbGluay9kaXN0L2VzbS9jb21saW5rLm1qczoKICAoKioKICAgKiBAbGljZW5zZQogICAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMKICAgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMAogICAqKQoqLwo="""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
