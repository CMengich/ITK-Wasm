# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Vr=Object.defineProperty;var Zr=(A,e)=>{for(var t in e)Vr(A,t,{get:e[t],enumerable:!0})};var zr=new Map([["bmp","bmp"],["dcm","gdcm"],["gipl","gipl"],["gipl.gz","gipl"],["hdf5","hdf5"],["jpg","jpeg"],["jpeg","jpeg"],["iwi","wasm"],["iwi.cbor","wasm"],["iwi.cbor.zst","wasmZstd"],["lsm","lsm"],["mnc","mnc"],["mnc.gz","mnc"],["mnc2","mnc"],["mgh","mgh"],["mgz","mgh"],["mgh.gz","mgh"],["mha","meta"],["mhd","meta"],["mrc","mrc"],["nia","nifti"],["nii","nifti"],["nii.gz","nifti"],["hdr","nifti"],["nrrd","nrrd"],["nhdr","nrrd"],["png","png"],["pic","bioRad"],["tif","tiff"],["tiff","tiff"],["vtk","vtk"],["isq","scanco"],["aim","scanco"],["fdf","fdf"]]),Z=zr;var Xr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},w=Xr;var _r={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},W=_r;function $r(A,e){let t=null;switch(A){case w.UInt8:{t=new Uint8Array(e);break}case w.Int8:{t=new Int8Array(e);break}case w.UInt16:{t=new Uint16Array(e);break}case w.Int16:{t=new Int16Array(e);break}case w.UInt32:{t=new Uint32Array(e);break}case w.Int32:{t=new Int32Array(e);break}case w.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case w.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case W.Float32:{t=new Float32Array(e);break}case W.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var O=$r;var Ai={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},DA=Ai;var XA=class{dimension;componentType;pixelType;components;constructor(e=2,t=w.UInt8,r=DA.Scalar,o=1){this.dimension=e,this.componentType=t,this.pixelType=r,this.components=o}},Nt=XA;function ei(A,e,t,r,o){A[r+t*e]=o}var St=ei;var _A=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(e=new Nt){this.imageType=e;let t=e.dimension;this.origin=new Array(t),this.origin.fill(0),this.spacing=new Array(t),this.spacing.fill(1),this.direction=new Float64Array(t*t),this.direction.fill(0);for(let r=0;r<t;r++)St(this.direction,t,r,r,1);this.size=new Array(t),this.size.fill(0),this.metadata=new Map,this.data=null}},_=_A;function ti(A){let e=new _(A.imageType);if(e.name=A.name,e.origin=Array.from(A.origin),e.spacing=Array.from(A.spacing),e.direction=A.direction.slice(),e.size=Array.from(A.size),A.data!==null){let t=A.data.constructor;e.data=new t(A.data.length),e.data!=null&&e.data.set(A.data,0)}return e}var $A=ti;function ri(A){if(A.length<1)throw Error("At least one images is required.");let e=A[0];if(e.data===null)throw Error("Image data is null.");let t=new _(e.imageType);t.origin=Array.from(e.origin),t.spacing=Array.from(e.spacing);let r=t.imageType.dimension;t.direction=e.direction.slice();let o=r-1;t.size=Array.from(e.size);let i=A.reduce((a,s)=>a+s.size[o],0);t.size[o]=i;let n=t.size.reduce((a,s)=>a*s,1)*t.imageType.components,l=e.data.constructor;t.data=new l(n);let p=t.imageType.components;for(let a=0;a<t.size.length-1;a++)p*=t.size[a];let g=0;if(t.data!=null)for(let a=0;a<A.length;a++)t.data.set(A[a].data,p*g),g+=A[a].size[o];else throw Error("Could not create result image data.");return t}var Ae=ri;function ii(A){let e=A.slice((A.lastIndexOf(".")-1>>>0)+2);if(e.toLowerCase()==="gz"){let t=A.slice(0,-3).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="cbor"){let t=A.slice(0,-5).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zst"){let t=A.slice(0,-10).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}else if(e.toLowerCase()==="zip"){let t=A.slice(0,-4).lastIndexOf(".");e=A.slice((t-1>>>0)+2)}return e}var sA=ii;function oi(A,e){let t={...A.imageType};if(typeof e<"u"&&typeof e.pixelType<"u"&&(t.pixelType=e.pixelType,e.pixelType===DA.Scalar&&t.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType&&(t.componentType=e.componentType);let r=new _(t);if(r.name=A.name,r.origin=Array.from(A.origin),r.spacing=Array.from(A.spacing),r.direction=A.direction.slice(),r.size=Array.from(A.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(A.metadata)))),A.data!==null)if(typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType)switch(A.imageType.componentType){case w.UInt8:case w.Int8:case w.UInt16:case w.Int16:case w.UInt32:case w.Int32:case W.Float32:case W.Float64:switch(r.imageType.componentType){case w.UInt8:r.data=new Uint8Array(A.data);break;case w.Int8:r.data=new Int8Array(A.data);break;case w.UInt16:r.data=new Uint16Array(A.data);break;case w.Int16:r.data=new Int16Array(A.data);break;case w.UInt32:r.data=new Uint32Array(A.data);break;case w.Int32:r.data=new Int32Array(A.data);break;case W.Float32:r.data=new Float32Array(A.data);break;case W.Float64:r.data=new Float64Array(A.data);break;case w.UInt64:r.data=new BigUint64Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asIntN(64,BigInt(A.data[o]));break;case w.Int64:r.data=new BigInt64Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asUintN(64,BigInt(A.data[o]));break}break;case w.UInt64:case w.Int64:switch(r.imageType.componentType){case w.UInt8:r.data=new Uint8Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case w.Int8:r.data=new Int8Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case w.UInt16:r.data=new Uint16Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case w.Int16:r.data=new Int16Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case w.UInt32:r.data=new Uint32Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case w.Int32:r.data=new Int32Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case W.Float32:r.data=new Float32Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case W.Float64:r.data=new Float64Array(A.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(A.data[o]);break;case w.UInt64:r.data=new BigUint64Array(A.data);break;case w.Int64:r.data=new BigInt64Array(A.data);break}break}else{let o=A.data.constructor;r.data=new o(A.data.length),r.data!=null&&r.data.set(A.data,0)}return r}var K=oi;var ee=class{fcn;workerQueue;runInfo;constructor(e,t){this.fcn=t,this.workerQueue=new Array(e),this.workerQueue.fill(null),this.runInfo=[]}runTasks(e,t=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:t,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((o,i)=>{r.resolve=o,r.reject=i,r.results=new Array(e.length),r.completedTasks=0,r.addingTasks=!0,e.forEach((n,l)=>{this.addTask(r.index,l,n)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let e=0;e<this.workerQueue.length;e++){let t=this.workerQueue[e];t?.terminate(),this.workerQueue[e]=null}}cancel(e){let t=this.runInfo[e];t!=null&&(t.canceled=!0)}addTask(e,t,r){let o=this.runInfo[e];if(o?.canceled===!0){o.reject("Remaining tasks canceled"),this.clearTask(o.index);return}if(this.workerQueue.length>0){let i=this.workerQueue.pop();o.runningWorkers++,r[r.length-1].webWorker=i,this.fcn(...r).then(({webWorker:n,...l})=>{if(this.workerQueue.push(n),this.runInfo[e]!==null){if(o.runningWorkers--,o.results[t]=l,o.completedTasks++,o.progressCallback!=null&&o.progressCallback(o.completedTasks,o.results.length),o.taskQueue.length>0){let p=o.taskQueue.shift();this.addTask(e,p[0],p[1])}else if(!o.addingTasks&&o.runningWorkers===0){let p=o.results;o.resolve(p),this.clearTask(o.index)}}}).catch(n=>{o.reject(n),this.clearTask(o.index)})}else o.runningWorkers!==0||o.postponed?o.taskQueue.push([t,r]):(o.postponed=!0,setTimeout(()=>{o.postponed=!1,this.addTask(o.index,t,r)},50))}clearTask(e){this.runInfo[e].results=[],this.runInfo[e].taskQueue=[],this.runInfo[e].progressCallback=null,this.runInfo[e].canceled=null,this.runInfo[e].reject=()=>{},this.runInfo[e].resolve=()=>{}}},te=ee;var ai={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},C=ai;var Wt=Symbol("Comlink.proxy"),ni=Symbol("Comlink.endpoint"),oe=Symbol("Comlink.releaseProxy"),re=Symbol("Comlink.finalizer"),kA=Symbol("Comlink.thrown"),Gt=A=>typeof A=="object"&&A!==null||typeof A=="function",Ii={canHandle:A=>Gt(A)&&A[Wt],serialize(A){let{port1:e,port2:t}=new MessageChannel;return Lt(A,e),[t,[t]]},deserialize(A){return A.start(),ae(A)}},si={canHandle:A=>Gt(A)&&kA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},Ot=new Map([["proxy",Ii],["throw",si]]);function gi(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function Lt(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(o){if(!o||!o.data)return;if(!gi(t,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:i,type:n,path:l}=Object.assign({path:[]},o.data),p=(o.data.argumentList||[]).map(z),g;try{let a=l.slice(0,-1).reduce((Q,I)=>Q[I],A),s=l.reduce((Q,I)=>Q[I],A);switch(n){case"GET":g=s;break;case"SET":a[l.slice(-1)[0]]=z(o.data.value),g=!0;break;case"APPLY":g=s.apply(a,p);break;case"CONSTRUCT":{let Q=new s(...p);g=Ei(Q)}break;case"ENDPOINT":{let{port1:Q,port2:I}=new MessageChannel;Lt(A,I),g=ne(Q,[Q])}break;case"RELEASE":g=void 0;break;default:return}}catch(a){g={value:a,[kA]:0}}Promise.resolve(g).catch(a=>({value:a,[kA]:0})).then(a=>{let[s,Q]=NA(a);e.postMessage(Object.assign(Object.assign({},s),{id:i}),Q),n==="RELEASE"&&(e.removeEventListener("message",r),Jt(e),re in A&&typeof A[re]=="function"&&A[re]())}).catch(a=>{let[s,Q]=NA({value:new TypeError("Unserializable return value"),[kA]:0});e.postMessage(Object.assign(Object.assign({},s),{id:i}),Q)})}),e.start&&e.start()}function Bi(A){return A.constructor.name==="MessagePort"}function Jt(A){Bi(A)&&A.close()}function ae(A,e){return ie(A,[],e)}function RA(A){if(A)throw new Error("Proxy has been released and is not useable")}function Pt(A){return $(A,{type:"RELEASE"}).then(()=>{Jt(A)})}var FA=new WeakMap,UA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(FA.get(A)||0)-1;FA.set(A,e),e===0&&Pt(A)});function Ci(A,e){let t=(FA.get(e)||0)+1;FA.set(e,t),UA&&UA.register(A,e,A)}function li(A){UA&&UA.unregister(A)}function ie(A,e=[],t=function(){}){let r=!1,o=new Proxy(t,{get(i,n){if(RA(r),n===oe)return()=>{li(o),Pt(A),r=!0};if(n==="then"){if(e.length===0)return{then:()=>o};let l=$(A,{type:"GET",path:e.map(p=>p.toString())}).then(z);return l.then.bind(l)}return ie(A,[...e,n])},set(i,n,l){RA(r);let[p,g]=NA(l);return $(A,{type:"SET",path:[...e,n].map(a=>a.toString()),value:p},g).then(z)},apply(i,n,l){RA(r);let p=e[e.length-1];if(p===ni)return $(A,{type:"ENDPOINT"}).then(z);if(p==="bind")return ie(A,e.slice(0,-1));let[g,a]=bt(l);return $(A,{type:"APPLY",path:e.map(s=>s.toString()),argumentList:g},a).then(z)},construct(i,n){RA(r);let[l,p]=bt(n);return $(A,{type:"CONSTRUCT",path:e.map(g=>g.toString()),argumentList:l},p).then(z)}});return Ci(o,A),o}function Qi(A){return Array.prototype.concat.apply([],A)}function bt(A){let e=A.map(NA);return[e.map(t=>t[0]),Qi(e.map(t=>t[1]))]}var xt=new WeakMap;function ne(A,e){return xt.set(A,e),A}function Ei(A){return Object.assign(A,{[Wt]:!0})}function NA(A){for(let[e,t]of Ot)if(t.canHandle(A)){let[r,o]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},o]}return[{type:"RAW",value:A},xt.get(A)||[]]}function z(A){switch(A.type){case"HANDLER":return Ot.get(A.name).deserialize(A.value);case"RAW":return A.value}}function $(A,e,t){return new Promise(r=>{let o=pi();A.addEventListener("message",function i(n){!n.data||!n.data.id||n.data.id!==o||(A.removeEventListener("message",i),r(n.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:o},e),t)})}function pi(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function gA(A,e){return function(){return A.apply(e,arguments)}}var{toString:mi}=Object.prototype,{getPrototypeOf:se}=Object,bA=(A=>e=>{let t=mi.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),J=A=>(A=A.toLowerCase(),e=>bA(e)===A),WA=A=>e=>typeof e===A,{isArray:AA}=Array,BA=WA("undefined");function ui(A){return A!==null&&!BA(A)&&A.constructor!==null&&!BA(A.constructor)&&L(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var Ht=J("ArrayBuffer");function fi(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&Ht(A.buffer),e}var ci=WA("string"),L=WA("function"),Yt=WA("number"),GA=A=>A!==null&&typeof A=="object",di=A=>A===!0||A===!1,SA=A=>{if(bA(A)!=="object")return!1;let e=se(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},yi=J("Date"),hi=J("File"),wi=J("Blob"),Di=J("FileList"),Ri=A=>GA(A)&&L(A.pipe),ki=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||L(A.append)&&((e=bA(A))==="formdata"||e==="object"&&L(A.toString)&&A.toString()==="[object FormData]"))},Fi=J("URLSearchParams"),[Ui,Ni,Si,bi]=["ReadableStream","Request","Response","Headers"].map(J),Wi=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function CA(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,o;if(typeof A!="object"&&(A=[A]),AA(A))for(r=0,o=A.length;r<o;r++)e.call(null,A[r],r,A);else{let i=t?Object.getOwnPropertyNames(A):Object.keys(A),n=i.length,l;for(r=0;r<n;r++)l=i[r],e.call(null,A[l],l,A)}}function qt(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,o;for(;r-- >0;)if(o=t[r],e===o.toLowerCase())return o;return null}var X=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Kt=A=>!BA(A)&&A!==X;function Ie(){let{caseless:A}=Kt(this)&&this||{},e={},t=(r,o)=>{let i=A&&qt(e,o)||o;SA(e[i])&&SA(r)?e[i]=Ie(e[i],r):SA(r)?e[i]=Ie({},r):AA(r)?e[i]=r.slice():e[i]=r};for(let r=0,o=arguments.length;r<o;r++)arguments[r]&&CA(arguments[r],t);return e}var Gi=(A,e,t,{allOwnKeys:r}={})=>(CA(e,(o,i)=>{t&&L(o)?A[i]=gA(o,t):A[i]=o},{allOwnKeys:r}),A),Oi=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Li=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},Ji=(A,e,t,r)=>{let o,i,n,l={};if(e=e||{},A==null)return e;do{for(o=Object.getOwnPropertyNames(A),i=o.length;i-- >0;)n=o[i],(!r||r(n,A,e))&&!l[n]&&(e[n]=A[n],l[n]=!0);A=t!==!1&&se(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},Pi=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},xi=A=>{if(!A)return null;if(AA(A))return A;let e=A.length;if(!Yt(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},Mi=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&se(Uint8Array)),Ti=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),o;for(;(o=r.next())&&!o.done;){let i=o.value;e.call(A,i[0],i[1])}},Hi=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},Yi=J("HTMLFormElement"),qi=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,o){return r.toUpperCase()+o}),Tt=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),Ki=J("RegExp"),jt=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};CA(t,(o,i)=>{let n;(n=e(o,i,A))!==!1&&(r[i]=n||o)}),Object.defineProperties(A,r)},ji=A=>{jt(A,(e,t)=>{if(L(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(L(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},vi=(A,e)=>{let t={},r=o=>{o.forEach(i=>{t[i]=!0})};return AA(A)?r(A):r(String(A).split(e)),t},Vi=()=>{},Zi=(A,e)=>A!=null&&Number.isFinite(A=+A)?A:e;function zi(A){return!!(A&&L(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var Xi=A=>{let e=new Array(10),t=(r,o)=>{if(GA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[o]=r;let i=AA(r)?[]:{};return CA(r,(n,l)=>{let p=t(n,o+1);!BA(p)&&(i[l]=p)}),e[o]=void 0,i}}return r};return t(A,0)},_i=J("AsyncFunction"),$i=A=>A&&(GA(A)||L(A))&&L(A.then)&&L(A.catch),vt=((A,e)=>A?setImmediate:e?((t,r)=>(X.addEventListener("message",({source:o,data:i})=>{o===X&&i===t&&r.length&&r.shift()()},!1),o=>{r.push(o),X.postMessage(t,"*")}))(`axios@${Math.random()}`,[]):t=>setTimeout(t))(typeof setImmediate=="function",L(X.postMessage)),Ao=typeof queueMicrotask<"u"?queueMicrotask.bind(X):typeof process<"u"&&process.nextTick||vt,E={isArray:AA,isArrayBuffer:Ht,isBuffer:ui,isFormData:ki,isArrayBufferView:fi,isString:ci,isNumber:Yt,isBoolean:di,isObject:GA,isPlainObject:SA,isReadableStream:Ui,isRequest:Ni,isResponse:Si,isHeaders:bi,isUndefined:BA,isDate:yi,isFile:hi,isBlob:wi,isRegExp:Ki,isFunction:L,isStream:Ri,isURLSearchParams:Fi,isTypedArray:Mi,isFileList:Di,forEach:CA,merge:Ie,extend:Gi,trim:Wi,stripBOM:Oi,inherits:Li,toFlatObject:Ji,kindOf:bA,kindOfTest:J,endsWith:Pi,toArray:xi,forEachEntry:Ti,matchAll:Hi,isHTMLForm:Yi,hasOwnProperty:Tt,hasOwnProp:Tt,reduceDescriptors:jt,freezeMethods:ji,toObjectSet:vi,toCamelCase:qi,noop:Vi,toFiniteNumber:Zi,findKey:qt,global:X,isContextDefined:Kt,isSpecCompliantForm:zi,toJSONObject:Xi,isAsyncFn:_i,isThenable:$i,setImmediate:vt,asap:Ao};function eA(A,e,t,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),o&&(this.response=o,this.status=o.status?o.status:null)}E.inherits(eA,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:E.toJSONObject(this.config),code:this.code,status:this.status}}});var Vt=eA.prototype,Zt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Zt[A]={value:A}});Object.defineProperties(eA,Zt);Object.defineProperty(Vt,"isAxiosError",{value:!0});eA.from=(A,e,t,r,o,i)=>{let n=Object.create(Vt);return E.toFlatObject(A,n,function(p){return p!==Error.prototype},l=>l!=="isAxiosError"),eA.call(n,A.message,e,t,r,o),n.cause=A,n.name=A.name,i&&Object.assign(n,i),n};var h=eA;var OA=null;function ge(A){return E.isPlainObject(A)||E.isArray(A)}function Xt(A){return E.endsWith(A,"[]")?A.slice(0,-2):A}function zt(A,e,t){return A?A.concat(e).map(function(o,i){return o=Xt(o),!t&&i?"["+o+"]":o}).join(t?".":""):e}function eo(A){return E.isArray(A)&&!A.some(ge)}var to=E.toFlatObject(E,{},null,function(e){return/^is[A-Z]/.test(e)});function ro(A,e,t){if(!E.isObject(A))throw new TypeError("target must be an object");e=e||new(OA||FormData),t=E.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(u,m){return!E.isUndefined(m[u])});let r=t.metaTokens,o=t.visitor||a,i=t.dots,n=t.indexes,p=(t.Blob||typeof Blob<"u"&&Blob)&&E.isSpecCompliantForm(e);if(!E.isFunction(o))throw new TypeError("visitor must be a function");function g(B){if(B===null)return"";if(E.isDate(B))return B.toISOString();if(!p&&E.isBlob(B))throw new h("Blob is not supported. Use a Buffer instead.");return E.isArrayBuffer(B)||E.isTypedArray(B)?p&&typeof Blob=="function"?new Blob([B]):Buffer.from(B):B}function a(B,u,m){let D=B;if(B&&!m&&typeof B=="object"){if(E.endsWith(u,"{}"))u=r?u:u.slice(0,-2),B=JSON.stringify(B);else if(E.isArray(B)&&eo(B)||(E.isFileList(B)||E.endsWith(u,"[]"))&&(D=E.toArray(B)))return u=Xt(u),D.forEach(function(F,H){!(E.isUndefined(F)||F===null)&&e.append(n===!0?zt([u],H,i):n===null?u:u+"[]",g(F))}),!1}return ge(B)?!0:(e.append(zt(m,u,i),g(B)),!1)}let s=[],Q=Object.assign(to,{defaultVisitor:a,convertValue:g,isVisitable:ge});function I(B,u){if(!E.isUndefined(B)){if(s.indexOf(B)!==-1)throw Error("Circular reference detected in "+u.join("."));s.push(B),E.forEach(B,function(D,R){(!(E.isUndefined(D)||D===null)&&o.call(e,D,E.isString(R)?R.trim():R,u,Q))===!0&&I(D,u?u.concat(R):[R])}),s.pop()}}if(!E.isObject(A))throw new TypeError("data must be an object");return I(A),e}var j=ro;function _t(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function $t(A,e){this._pairs=[],A&&j(A,this,e)}var Ar=$t.prototype;Ar.append=function(e,t){this._pairs.push([e,t])};Ar.toString=function(e){let t=e?function(r){return e.call(this,r,_t)}:_t;return this._pairs.map(function(o){return t(o[0])+"="+t(o[1])},"").join("&")};var LA=$t;function io(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function lA(A,e,t){if(!e)return A;let r=t&&t.encode||io;E.isFunction(t)&&(t={serialize:t});let o=t&&t.serialize,i;if(o?i=o(e,t):i=E.isURLSearchParams(e)?e.toString():new LA(e,t).toString(r),i){let n=A.indexOf("#");n!==-1&&(A=A.slice(0,n)),A+=(A.indexOf("?")===-1?"?":"&")+i}return A}var Be=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){E.forEach(this.handlers,function(r){r!==null&&e(r)})}},Ce=Be;var JA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var er=typeof URLSearchParams<"u"?URLSearchParams:LA;var tr=typeof FormData<"u"?FormData:null;var rr=typeof Blob<"u"?Blob:null;var ir={isBrowser:!0,classes:{URLSearchParams:er,FormData:tr,Blob:rr},protocols:["http","https","file","blob","url","data"]};var Ee={};Zr(Ee,{hasBrowserEnv:()=>Qe,hasStandardBrowserEnv:()=>oo,hasStandardBrowserWebWorkerEnv:()=>ao,navigator:()=>le,origin:()=>no});var Qe=typeof window<"u"&&typeof document<"u",le=typeof navigator=="object"&&navigator||void 0,oo=Qe&&(!le||["ReactNative","NativeScript","NS"].indexOf(le.product)<0),ao=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",no=Qe&&window.location.href||"http://localhost";var k={...Ee,...ir};function pe(A,e){return j(A,new k.classes.URLSearchParams,Object.assign({visitor:function(t,r,o,i){return k.isNode&&E.isBuffer(t)?(this.append(r,t.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},e))}function Io(A){return E.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function so(A){let e={},t=Object.keys(A),r,o=t.length,i;for(r=0;r<o;r++)i=t[r],e[i]=A[i];return e}function go(A){function e(t,r,o,i){let n=t[i++];if(n==="__proto__")return!0;let l=Number.isFinite(+n),p=i>=t.length;return n=!n&&E.isArray(o)?o.length:n,p?(E.hasOwnProp(o,n)?o[n]=[o[n],r]:o[n]=r,!l):((!o[n]||!E.isObject(o[n]))&&(o[n]=[]),e(t,r,o[n],i)&&E.isArray(o[n])&&(o[n]=so(o[n])),!l)}if(E.isFormData(A)&&E.isFunction(A.entries)){let t={};return E.forEachEntry(A,(r,o)=>{e(Io(r),o,t,0)}),t}return null}var PA=go;function Bo(A,e,t){if(E.isString(A))try{return(e||JSON.parse)(A),E.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var me={transitional:JA,adapter:["xhr","http","fetch"],transformRequest:[function(e,t){let r=t.getContentType()||"",o=r.indexOf("application/json")>-1,i=E.isObject(e);if(i&&E.isHTMLForm(e)&&(e=new FormData(e)),E.isFormData(e))return o?JSON.stringify(PA(e)):e;if(E.isArrayBuffer(e)||E.isBuffer(e)||E.isStream(e)||E.isFile(e)||E.isBlob(e)||E.isReadableStream(e))return e;if(E.isArrayBufferView(e))return e.buffer;if(E.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let l;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return pe(e,this.formSerializer).toString();if((l=E.isFileList(e))||r.indexOf("multipart/form-data")>-1){let p=this.env&&this.env.FormData;return j(l?{"files[]":e}:e,p&&new p,this.formSerializer)}}return i||o?(t.setContentType("application/json",!1),Bo(e)):e}],transformResponse:[function(e){let t=this.transitional||me.transitional,r=t&&t.forcedJSONParsing,o=this.responseType==="json";if(E.isResponse(e)||E.isReadableStream(e))return e;if(e&&E.isString(e)&&(r&&!this.responseType||o)){let n=!(t&&t.silentJSONParsing)&&o;try{return JSON.parse(e)}catch(l){if(n)throw l.name==="SyntaxError"?h.from(l,h.ERR_BAD_RESPONSE,this,null,this.response):l}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:k.classes.FormData,Blob:k.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};E.forEach(["delete","get","head","post","put","patch"],A=>{me.headers[A]={}});var tA=me;var Co=E.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),or=A=>{let e={},t,r,o;return A&&A.split(`
`).forEach(function(n){o=n.indexOf(":"),t=n.substring(0,o).trim().toLowerCase(),r=n.substring(o+1).trim(),!(!t||e[t]&&Co[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var ar=Symbol("internals");function QA(A){return A&&String(A).trim().toLowerCase()}function xA(A){return A===!1||A==null?A:E.isArray(A)?A.map(xA):String(A)}function lo(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var Qo=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function ue(A,e,t,r,o){if(E.isFunction(r))return r.call(this,e,t);if(o&&(e=t),!!E.isString(e)){if(E.isString(r))return e.indexOf(r)!==-1;if(E.isRegExp(r))return r.test(e)}}function Eo(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function po(A,e){let t=E.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(o,i,n){return this[r].call(this,e,o,i,n)},configurable:!0})})}var rA=class{constructor(e){e&&this.set(e)}set(e,t,r){let o=this;function i(l,p,g){let a=QA(p);if(!a)throw new Error("header name must be a non-empty string");let s=E.findKey(o,a);(!s||o[s]===void 0||g===!0||g===void 0&&o[s]!==!1)&&(o[s||p]=xA(l))}let n=(l,p)=>E.forEach(l,(g,a)=>i(g,a,p));if(E.isPlainObject(e)||e instanceof this.constructor)n(e,t);else if(E.isString(e)&&(e=e.trim())&&!Qo(e))n(or(e),t);else if(E.isHeaders(e))for(let[l,p]of e.entries())i(p,l,r);else e!=null&&i(t,e,r);return this}get(e,t){if(e=QA(e),e){let r=E.findKey(this,e);if(r){let o=this[r];if(!t)return o;if(t===!0)return lo(o);if(E.isFunction(t))return t.call(this,o,r);if(E.isRegExp(t))return t.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=QA(e),e){let r=E.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||ue(this,this[r],r,t)))}return!1}delete(e,t){let r=this,o=!1;function i(n){if(n=QA(n),n){let l=E.findKey(r,n);l&&(!t||ue(r,r[l],l,t))&&(delete r[l],o=!0)}}return E.isArray(e)?e.forEach(i):i(e),o}clear(e){let t=Object.keys(this),r=t.length,o=!1;for(;r--;){let i=t[r];(!e||ue(this,this[i],i,e,!0))&&(delete this[i],o=!0)}return o}normalize(e){let t=this,r={};return E.forEach(this,(o,i)=>{let n=E.findKey(r,i);if(n){t[n]=xA(o),delete t[i];return}let l=e?Eo(i):String(i).trim();l!==i&&delete t[i],t[l]=xA(o),r[l]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return E.forEach(this,(r,o)=>{r!=null&&r!==!1&&(t[o]=e&&E.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(o=>r.set(o)),r}static accessor(e){let r=(this[ar]=this[ar]={accessors:{}}).accessors,o=this.prototype;function i(n){let l=QA(n);r[l]||(po(o,n),r[l]=!0)}return E.isArray(e)?e.forEach(i):i(e),this}};rA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);E.reduceDescriptors(rA.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});E.freezeMethods(rA);var S=rA;function EA(A,e){let t=this||tA,r=e||t,o=S.from(r.headers),i=r.data;return E.forEach(A,function(l){i=l.call(t,i,o.normalize(),e?e.status:void 0)}),o.normalize(),i}function pA(A){return!!(A&&A.__CANCEL__)}function nr(A,e,t){h.call(this,A??"canceled",h.ERR_CANCELED,e,t),this.name="CanceledError"}E.inherits(nr,h,{__CANCEL__:!0});var x=nr;function mA(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new h("Request failed with status code "+t.status,[h.ERR_BAD_REQUEST,h.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}function fe(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function mo(A,e){A=A||10;let t=new Array(A),r=new Array(A),o=0,i=0,n;return e=e!==void 0?e:1e3,function(p){let g=Date.now(),a=r[i];n||(n=g),t[o]=p,r[o]=g;let s=i,Q=0;for(;s!==o;)Q+=t[s++],s=s%A;if(o=(o+1)%A,o===i&&(i=(i+1)%A),g-n<e)return;let I=a&&g-a;return I?Math.round(Q*1e3/I):void 0}}var Ir=mo;function uo(A,e){let t=0,r=1e3/e,o,i,n=(g,a=Date.now())=>{t=a,o=null,i&&(clearTimeout(i),i=null),A.apply(null,g)};return[(...g)=>{let a=Date.now(),s=a-t;s>=r?n(g,a):(o=g,i||(i=setTimeout(()=>{i=null,n(o)},r-s)))},()=>o&&n(o)]}var sr=uo;var iA=(A,e,t=3)=>{let r=0,o=Ir(50,250);return sr(i=>{let n=i.loaded,l=i.lengthComputable?i.total:void 0,p=n-r,g=o(p),a=n<=l;r=n;let s={loaded:n,total:l,progress:l?n/l:void 0,bytes:p,rate:g||void 0,estimated:g&&l&&a?(l-n)/g:void 0,event:i,lengthComputable:l!=null,[e?"download":"upload"]:!0};A(s)},t)},ce=(A,e)=>{let t=A!=null;return[r=>e[0]({lengthComputable:t,total:A,loaded:r}),e[1]]},de=A=>(...e)=>E.asap(()=>A(...e));var gr=k.hasStandardBrowserEnv?((A,e)=>t=>(t=new URL(t,k.origin),A.protocol===t.protocol&&A.host===t.host&&(e||A.port===t.port)))(new URL(k.origin),k.navigator&&/(msie|trident)/i.test(k.navigator.userAgent)):()=>!0;var Br=k.hasStandardBrowserEnv?{write(A,e,t,r,o,i){let n=[A+"="+encodeURIComponent(e)];E.isNumber(t)&&n.push("expires="+new Date(t).toGMTString()),E.isString(r)&&n.push("path="+r),E.isString(o)&&n.push("domain="+o),i===!0&&n.push("secure"),document.cookie=n.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function ye(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function he(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function uA(A,e,t){let r=!ye(e);return A&&r||t==!1?he(A,e):e}var Cr=A=>A instanceof S?{...A}:A;function P(A,e){e=e||{};let t={};function r(g,a,s,Q){return E.isPlainObject(g)&&E.isPlainObject(a)?E.merge.call({caseless:Q},g,a):E.isPlainObject(a)?E.merge({},a):E.isArray(a)?a.slice():a}function o(g,a,s,Q){if(E.isUndefined(a)){if(!E.isUndefined(g))return r(void 0,g,s,Q)}else return r(g,a,s,Q)}function i(g,a){if(!E.isUndefined(a))return r(void 0,a)}function n(g,a){if(E.isUndefined(a)){if(!E.isUndefined(g))return r(void 0,g)}else return r(void 0,a)}function l(g,a,s){if(s in e)return r(g,a);if(s in A)return r(void 0,g)}let p={url:i,method:i,data:i,baseURL:n,transformRequest:n,transformResponse:n,paramsSerializer:n,timeout:n,timeoutMessage:n,withCredentials:n,withXSRFToken:n,adapter:n,responseType:n,xsrfCookieName:n,xsrfHeaderName:n,onUploadProgress:n,onDownloadProgress:n,decompress:n,maxContentLength:n,maxBodyLength:n,beforeRedirect:n,transport:n,httpAgent:n,httpsAgent:n,cancelToken:n,socketPath:n,responseEncoding:n,validateStatus:l,headers:(g,a,s)=>o(Cr(g),Cr(a),s,!0)};return E.forEach(Object.keys(Object.assign({},A,e)),function(a){let s=p[a]||o,Q=s(A[a],e[a],a);E.isUndefined(Q)&&s!==l||(t[a]=Q)}),t}var MA=A=>{let e=P({},A),{data:t,withXSRFToken:r,xsrfHeaderName:o,xsrfCookieName:i,headers:n,auth:l}=e;e.headers=n=S.from(n),e.url=lA(uA(e.baseURL,e.url),A.params,A.paramsSerializer),l&&n.set("Authorization","Basic "+btoa((l.username||"")+":"+(l.password?unescape(encodeURIComponent(l.password)):"")));let p;if(E.isFormData(t)){if(k.hasStandardBrowserEnv||k.hasStandardBrowserWebWorkerEnv)n.setContentType(void 0);else if((p=n.getContentType())!==!1){let[g,...a]=p?p.split(";").map(s=>s.trim()).filter(Boolean):[];n.setContentType([g||"multipart/form-data",...a].join("; "))}}if(k.hasStandardBrowserEnv&&(r&&E.isFunction(r)&&(r=r(e)),r||r!==!1&&gr(e.url))){let g=o&&i&&Br.read(i);g&&n.set(o,g)}return e};var fo=typeof XMLHttpRequest<"u",lr=fo&&function(A){return new Promise(function(t,r){let o=MA(A),i=o.data,n=S.from(o.headers).normalize(),{responseType:l,onUploadProgress:p,onDownloadProgress:g}=o,a,s,Q,I,B;function u(){I&&I(),B&&B(),o.cancelToken&&o.cancelToken.unsubscribe(a),o.signal&&o.signal.removeEventListener("abort",a)}let m=new XMLHttpRequest;m.open(o.method.toUpperCase(),o.url,!0),m.timeout=o.timeout;function D(){if(!m)return;let F=S.from("getAllResponseHeaders"in m&&m.getAllResponseHeaders()),G={data:!l||l==="text"||l==="json"?m.responseText:m.response,status:m.status,statusText:m.statusText,headers:F,config:A,request:m};mA(function(V){t(V),u()},function(V){r(V),u()},G),m=null}"onloadend"in m?m.onloadend=D:m.onreadystatechange=function(){!m||m.readyState!==4||m.status===0&&!(m.responseURL&&m.responseURL.indexOf("file:")===0)||setTimeout(D)},m.onabort=function(){m&&(r(new h("Request aborted",h.ECONNABORTED,A,m)),m=null)},m.onerror=function(){r(new h("Network Error",h.ERR_NETWORK,A,m)),m=null},m.ontimeout=function(){let H=o.timeout?"timeout of "+o.timeout+"ms exceeded":"timeout exceeded",G=o.transitional||JA;o.timeoutErrorMessage&&(H=o.timeoutErrorMessage),r(new h(H,G.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,A,m)),m=null},i===void 0&&n.setContentType(null),"setRequestHeader"in m&&E.forEach(n.toJSON(),function(H,G){m.setRequestHeader(G,H)}),E.isUndefined(o.withCredentials)||(m.withCredentials=!!o.withCredentials),l&&l!=="json"&&(m.responseType=o.responseType),g&&([Q,B]=iA(g,!0),m.addEventListener("progress",Q)),p&&m.upload&&([s,I]=iA(p),m.upload.addEventListener("progress",s),m.upload.addEventListener("loadend",I)),(o.cancelToken||o.signal)&&(a=F=>{m&&(r(!F||F.type?new x(null,A,m):F),m.abort(),m=null)},o.cancelToken&&o.cancelToken.subscribe(a),o.signal&&(o.signal.aborted?a():o.signal.addEventListener("abort",a)));let R=fe(o.url);if(R&&k.protocols.indexOf(R)===-1){r(new h("Unsupported protocol "+R+":",h.ERR_BAD_REQUEST,A));return}m.send(i||null)})};var co=(A,e)=>{let{length:t}=A=A?A.filter(Boolean):[];if(e||t){let r=new AbortController,o,i=function(g){if(!o){o=!0,l();let a=g instanceof Error?g:this.reason;r.abort(a instanceof h?a:new x(a instanceof Error?a.message:a))}},n=e&&setTimeout(()=>{n=null,i(new h(`timeout ${e} of ms exceeded`,h.ETIMEDOUT))},e),l=()=>{A&&(n&&clearTimeout(n),n=null,A.forEach(g=>{g.unsubscribe?g.unsubscribe(i):g.removeEventListener("abort",i)}),A=null)};A.forEach(g=>g.addEventListener("abort",i));let{signal:p}=r;return p.unsubscribe=()=>E.asap(l),p}},Qr=co;var yo=function*(A,e){let t=A.byteLength;if(!e||t<e){yield A;return}let r=0,o;for(;r<t;)o=r+e,yield A.slice(r,o),r=o},ho=async function*(A,e){for await(let t of wo(A))yield*yo(t,e)},wo=async function*(A){if(A[Symbol.asyncIterator]){yield*A;return}let e=A.getReader();try{for(;;){let{done:t,value:r}=await e.read();if(t)break;yield r}}finally{await e.cancel()}},we=(A,e,t,r)=>{let o=ho(A,e),i=0,n,l=p=>{n||(n=!0,r&&r(p))};return new ReadableStream({async pull(p){try{let{done:g,value:a}=await o.next();if(g){l(),p.close();return}let s=a.byteLength;if(t){let Q=i+=s;t(Q)}p.enqueue(new Uint8Array(a))}catch(g){throw l(g),g}},cancel(p){return l(p),o.return()}},{highWaterMark:2})};var HA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",pr=HA&&typeof ReadableStream=="function",Do=HA&&(typeof TextEncoder=="function"?(A=>e=>A.encode(e))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),mr=(A,...e)=>{try{return!!A(...e)}catch{return!1}},Ro=pr&&mr(()=>{let A=!1,e=new Request(k.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!e}),Er=64*1024,De=pr&&mr(()=>E.isReadableStream(new Response("").body)),TA={stream:De&&(A=>A.body)};HA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(e=>{!TA[e]&&(TA[e]=E.isFunction(A[e])?t=>t[e]():(t,r)=>{throw new h(`Response type '${e}' is not supported`,h.ERR_NOT_SUPPORT,r)})})})(new Response);var ko=async A=>{if(A==null)return 0;if(E.isBlob(A))return A.size;if(E.isSpecCompliantForm(A))return(await new Request(k.origin,{method:"POST",body:A}).arrayBuffer()).byteLength;if(E.isArrayBufferView(A)||E.isArrayBuffer(A))return A.byteLength;if(E.isURLSearchParams(A)&&(A=A+""),E.isString(A))return(await Do(A)).byteLength},Fo=async(A,e)=>{let t=E.toFiniteNumber(A.getContentLength());return t??ko(e)},ur=HA&&(async A=>{let{url:e,method:t,data:r,signal:o,cancelToken:i,timeout:n,onDownloadProgress:l,onUploadProgress:p,responseType:g,headers:a,withCredentials:s="same-origin",fetchOptions:Q}=MA(A);g=g?(g+"").toLowerCase():"text";let I=Qr([o,i&&i.toAbortSignal()],n),B,u=I&&I.unsubscribe&&(()=>{I.unsubscribe()}),m;try{if(p&&Ro&&t!=="get"&&t!=="head"&&(m=await Fo(a,r))!==0){let G=new Request(e,{method:"POST",body:r,duplex:"half"}),q;if(E.isFormData(r)&&(q=G.headers.get("content-type"))&&a.setContentType(q),G.body){let[V,wA]=ce(m,iA(de(p)));r=we(G.body,Er,V,wA)}}E.isString(s)||(s=s?"include":"omit");let D="credentials"in Request.prototype;B=new Request(e,{...Q,signal:I,method:t.toUpperCase(),headers:a.normalize().toJSON(),body:r,duplex:"half",credentials:D?s:void 0});let R=await fetch(B),F=De&&(g==="stream"||g==="response");if(De&&(l||F&&u)){let G={};["status","statusText","headers"].forEach(Ut=>{G[Ut]=R[Ut]});let q=E.toFiniteNumber(R.headers.get("content-length")),[V,wA]=l&&ce(q,iA(de(l),!0))||[];R=new Response(we(R.body,Er,V,()=>{wA&&wA(),u&&u()}),G)}g=g||"text";let H=await TA[E.findKey(TA,g)||"text"](R,A);return!F&&u&&u(),await new Promise((G,q)=>{mA(G,q,{data:H,headers:S.from(R.headers),status:R.status,statusText:R.statusText,config:A,request:B})})}catch(D){throw u&&u(),D&&D.name==="TypeError"&&/fetch/i.test(D.message)?Object.assign(new h("Network Error",h.ERR_NETWORK,A,B),{cause:D.cause||D}):h.from(D,D&&D.code,A,B)}});var Re={http:OA,xhr:lr,fetch:ur};E.forEach(Re,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var fr=A=>`- ${A}`,Uo=A=>E.isFunction(A)||A===null||A===!1,YA={getAdapter:A=>{A=E.isArray(A)?A:[A];let{length:e}=A,t,r,o={};for(let i=0;i<e;i++){t=A[i];let n;if(r=t,!Uo(t)&&(r=Re[(n=String(t)).toLowerCase()],r===void 0))throw new h(`Unknown adapter '${n}'`);if(r)break;o[n||"#"+i]=r}if(!r){let i=Object.entries(o).map(([l,p])=>`adapter ${l} `+(p===!1?"is not supported by the environment":"is not available in the build")),n=e?i.length>1?`since :
`+i.map(fr).join(`
`):" "+fr(i[0]):"as no adapter specified";throw new h("There is no suitable adapter to dispatch the request "+n,"ERR_NOT_SUPPORT")}return r},adapters:Re};function ke(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new x(null,A)}function qA(A){return ke(A),A.headers=S.from(A.headers),A.data=EA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),YA.getAdapter(A.adapter||tA.adapter)(A).then(function(r){return ke(A),r.data=EA.call(A,A.transformResponse,r),r.headers=S.from(r.headers),r},function(r){return pA(r)||(ke(A),r&&r.response&&(r.response.data=EA.call(A,A.transformResponse,r.response),r.response.headers=S.from(r.response.headers))),Promise.reject(r)})}var KA="1.8.2";var jA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{jA[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var cr={};jA.transitional=function(e,t,r){function o(i,n){return"[Axios v"+KA+"] Transitional option '"+i+"'"+n+(r?". "+r:"")}return(i,n,l)=>{if(e===!1)throw new h(o(n," has been removed"+(t?" in "+t:"")),h.ERR_DEPRECATED);return t&&!cr[n]&&(cr[n]=!0,console.warn(o(n," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(i,n,l):!0}};jA.spelling=function(e){return(t,r)=>(console.warn(`${r} is likely a misspelling of ${e}`),!0)};function No(A,e,t){if(typeof A!="object")throw new h("options must be an object",h.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),o=r.length;for(;o-- >0;){let i=r[o],n=e[i];if(n){let l=A[i],p=l===void 0||n(l,i,A);if(p!==!0)throw new h("option "+i+" must be "+p,h.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new h("Unknown option "+i,h.ERR_BAD_OPTION)}}var fA={assertOptions:No,validators:jA};var M=fA.validators,oA=class{constructor(e){this.defaults=e,this.interceptors={request:new Ce,response:new Ce}}async request(e,t){try{return await this._request(e,t)}catch(r){if(r instanceof Error){let o={};Error.captureStackTrace?Error.captureStackTrace(o):o=new Error;let i=o.stack?o.stack.replace(/^.+\n/,""):"";try{r.stack?i&&!String(r.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+i):r.stack=i}catch{}}throw r}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=P(this.defaults,t);let{transitional:r,paramsSerializer:o,headers:i}=t;r!==void 0&&fA.assertOptions(r,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),o!=null&&(E.isFunction(o)?t.paramsSerializer={serialize:o}:fA.assertOptions(o,{encode:M.function,serialize:M.function},!0)),t.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?t.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:t.allowAbsoluteUrls=!0),fA.assertOptions(t,{baseUrl:M.spelling("baseURL"),withXsrfToken:M.spelling("withXSRFToken")},!0),t.method=(t.method||this.defaults.method||"get").toLowerCase();let n=i&&E.merge(i.common,i[t.method]);i&&E.forEach(["delete","get","head","post","put","patch","common"],B=>{delete i[B]}),t.headers=S.concat(n,i);let l=[],p=!0;this.interceptors.request.forEach(function(u){typeof u.runWhen=="function"&&u.runWhen(t)===!1||(p=p&&u.synchronous,l.unshift(u.fulfilled,u.rejected))});let g=[];this.interceptors.response.forEach(function(u){g.push(u.fulfilled,u.rejected)});let a,s=0,Q;if(!p){let B=[qA.bind(this),void 0];for(B.unshift.apply(B,l),B.push.apply(B,g),Q=B.length,a=Promise.resolve(t);s<Q;)a=a.then(B[s++],B[s++]);return a}Q=l.length;let I=t;for(s=0;s<Q;){let B=l[s++],u=l[s++];try{I=B(I)}catch(m){u.call(this,m);break}}try{a=qA.call(this,I)}catch(B){return Promise.reject(B)}for(s=0,Q=g.length;s<Q;)a=a.then(g[s++],g[s++]);return a}getUri(e){e=P(this.defaults,e);let t=uA(e.baseURL,e.url,e.allowAbsoluteUrls);return lA(t,e.params,e.paramsSerializer)}};E.forEach(["delete","get","head","options"],function(e){oA.prototype[e]=function(t,r){return this.request(P(r||{},{method:e,url:t,data:(r||{}).data}))}});E.forEach(["post","put","patch"],function(e){function t(r){return function(i,n,l){return this.request(P(l||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:n}))}}oA.prototype[e]=t(),oA.prototype[e+"Form"]=t(!0)});var cA=oA;var Fe=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(i){t=i});let r=this;this.promise.then(o=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](o);r._listeners=null}),this.promise.then=o=>{let i,n=new Promise(l=>{r.subscribe(l),i=l}).then(o);return n.cancel=function(){r.unsubscribe(i)},n},e(function(i,n,l){r.reason||(r.reason=new x(i,n,l),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}toAbortSignal(){let e=new AbortController,t=r=>{e.abort(r)};return this.subscribe(t),e.signal.unsubscribe=()=>this.unsubscribe(t),e.signal}static source(){let e;return{token:new A(function(o){e=o}),cancel:e}}},dr=Fe;function Ue(A){return function(t){return A.apply(null,t)}}function Ne(A){return E.isObject(A)&&A.isAxiosError===!0}var Se={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Se).forEach(([A,e])=>{Se[e]=A});var yr=Se;function hr(A){let e=new cA(A),t=gA(cA.prototype.request,e);return E.extend(t,cA.prototype,e,{allOwnKeys:!0}),E.extend(t,e,null,{allOwnKeys:!0}),t.create=function(o){return hr(P(A,o))},t}var U=hr(tA);U.Axios=cA;U.CanceledError=x;U.CancelToken=dr;U.isCancel=pA;U.VERSION=KA;U.toFormData=j;U.AxiosError=h;U.Cancel=U.CanceledError;U.all=function(e){return Promise.all(e)};U.spread=Ue;U.isAxiosError=Ne;U.mergeConfig=P;U.AxiosHeaders=S;U.formToJSON=A=>PA(E.isHTMLForm(A)?new FormData(A):A);U.getAdapter=YA.getAdapter;U.HttpStatusCode=yr;U.default=U;var T=U;var{Axios:vg,AxiosError:Vg,CanceledError:Zg,isCancel:zg,CancelToken:Xg,VERSION:_g,all:$g,Cancel:AB,isAxiosError:eB,spread:tB,toFormData:rB,AxiosHeaders:iB,HttpStatusCode:oB,formToJSON:aB,getAdapter:nB,mergeConfig:IB}=T;async function So(A,e){let t=A,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let o=await T.get(t,{responseType:"blob",params:e}),i=URL.createObjectURL(o.data);r=new Worker(i,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var dA=So;function wr(A){let e=ae(A),t=A;return t.terminated=!1,t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[oe](),t.originalTerminate()},{workerProxy:e,worker:t}}async function bo(A,e,t){let r;if(A!=null){let i=A;return i.workerProxy!==void 0?(r=i.workerProxy,{workerProxy:r,worker:i}):wr(A)}let o=await dA(e,t);return wr(o)}var Dr=bo;var yA,Y,We,be={env:{emscripten_notify_memory_growth:function(A){We=new Uint8Array(Y.exports.memory.buffer)}}},vA=class{init(){return yA||(typeof fetch<"u"?yA=fetch("data:application/wasm;base64,"+Rr).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,be)).then(this._init):yA=WebAssembly.instantiate(Buffer.from(Rr,"base64"),be).then(this._init),yA)}_init(e){Y=e.instance,be.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let r=e.byteLength,o=Y.exports.malloc(r);We.set(e,o),t=t||Number(Y.exports.ZSTD_findDecompressedSize(o,r));let i=Y.exports.malloc(t),n=Y.exports.ZSTD_decompress(i,t,o,r),l=We.slice(i,i+n);return Y.exports.free(o),Y.exports.free(i),l}},Rr="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkECdCICaigCACEDIAIgB2ooAgAhAiAAQQA6AAsgAEIANwIAIAAgAjYCDCAAIAM6AAogAEEAOwEIIAEgADYCAEEBIQ8MAwsgASAJNgIAQQAhDwwCCyAKRQRAQWwhDwwCC0EAIQ8gC0UgDEEZSHINAUEIIAR0QQhqIQBBACEDA0AgACADTQ0CIANBQGshAwwACwALQWwhDyARIBFB/ABqIBFB+ABqIAUgBhAMIgNBiH9LDQAgESgCeCICIARLDQAgESgCfEEBaiEJIABBCGohC0GAgAIgAnRBEHUhBUEBIRBBASACdCIPQQFrIgohEgNAIAkgDkcEQAJAIBEgDkEBdCIEai8BACIMQf//A0YEQCALIBJBA3RqIA42AgQgEkEBayESQQEhDAwBCyAQQQAgBSAMwUobIRALIAQgDWogDDsBACAOQQFqIQ4MAQsLIAAgAjYCBCAAIBA2AgACQCAKIBJGBEAgDUHqAGohBkEAIRBBACEMA0AgCSAQRgRAIA9BA3YgD0EBdmpBA2oiBUEBdCEEQQAhDEEAIRIDQEEAIQ4gDyASTQ0EA0AgDkECRwRAIAsgBSAObCAMaiAKcUEDdGogBiAOIBJqai0AADYCBCAOQQFqIQ4MAQsLIBJBAmohEiAEIAxqIApxIQwMAAsABSARIBBBAXRqLgEAIQUgBiAMaiIEIBM3AABBCCEOA0AgBSAOSgRAIAQgDmogEzcAACAOQQhqIQ4MAQsLIBNCgYKEiJCgwIABfCETIBBBAWohECAFIAxqIQwMAQsACwALIA9BA3YgD0EBdmpBA2ohBUEAIRBBACEOA0AgCSAQRg0BQQAhDCARIBBBAXRqLgEAIgRBACAEQQBKGyEEA0AgBCAMRwRAIAsgDkEDdGogEDYCBANAIAUgDmogCnEiDiASSw0ACyAMQQFqIQwMAQsLIBBBAWohEAwACwALIAJBAWohBUEAIQwDQCAMIA9HBEAgDSALIAxBA3RqIgkoAgQiBEEBdGoiAiACLwEAIgZBAWo7AQAgCSAFIAZnQWBzaiICOgADIAkgBiACdCAPazsBACAJIAggBEECdCICaigCADoAAiAJIAIgB2ooAgA2AgQgDEEBaiEMDAELCyABIAA2AgAgAyEPCyARQYABaiQAIA8L7VoCO38GfiMAQeABayIEJAACQEGw7AkQBSIFRQRAQUAhBwwBCyAFQgA3AvTqASAFQQA2AsTrASAFQQA2ArTrASAFQgA3ApzrASAFQQA2ArjpASAFQQA2AqzsCSAFQgA3AtTrASAFQgA3AqzrASAFQgA3A4jrASAFQgA3AuTqASAFQgA3AuTrASAFQYGAgMAANgK86wEgBUIANwKk6wEgBUH86gFqQQA2AgAgBUGQ6wFqQgA3AwAgBRAYIAVBrNUBaiEUIAVB+OsBaiEcIAVBsOoBaiEiIAVBoDBqISogBUGYIGohKyAFQajQAGohHiAFQRBqISwgBUEIaiEoIAVBBGohLSAFQcDpAWohKSAFQYjrAWogBEGUAWohLyAEQYwBaiEwIARBhAFqITEgBEHcAGohMiAEQdQAaiEzIARBzABqITQgACEdAkACQAJAAkACQANAQQFBBSAFKALk6gEbIQYCQANAIAMgBkkNASACKAAAQXBxQdDUtMIBRgRAQbh/IQcgA0EISQ0IIAIoAAQiDkF3SwRAQXIhBwwJCyADIA5BCGoiCUkNCCAOQYB/SwRAIAkhBwwJCyADIAlrIQMgAiAJaiECDAELCyAFQgA3AqzpASAFQgA3A+jpASAFQQA2ApjrASAFQgA3A4DqASAFQgM3A/jpASAFQbTpAWpCADcCACAFQfDpAWpCADcDACAFQajQAGoiCUGMgIDgADYCACAFQazQAWpB4BIpAgA3AgAgBUG00AFqQegSKAIANgIAIAUgBUEQajYCACAFIAVBoDBqNgIEIAUgBUGYIGo2AgggBSAJNgIMIAVBAUEFIAUoAuTqARs2ArzpAQJAIAFFDQAgBSgCrOkBIgkgHUYNACAFIAk2ArjpASAFIB02AqzpASAFKAKw6QEhDiAFIB02ArDpASAFIB0gDiAJa2o2ArTpAQtBuH8hCSADQQVBCSAFKALk6gEiBhtJDQUgAkEBQQUgBhsgBhAaIg5BiH9LBEAgDiEJDAULIAMgDkEDakkNBSApIAIgDiAGEBkiBkGIf0sEQCAGIQkMBQsgBg0FAkACQCAFKAKo6wFBAUcNACAFKAKk6wEiCUUNACAFKAKU6wFFDQAgCSgCBEEBayIHIAUoAtzpASIKrUKHla+vmLbem55/fkLJz9my8eW66ieFQheJQs/W077Sx6vZQn5C+fPd8Zn2masWfCI/QiGIID+FQs/W077Sx6vZQn4iP0IdiCA/hUL5893xmfaZqxZ+Ij9CIIggP4WncSEGIAkoAgAhFQNAQQAhCAJAIBUgBkECdGooAgAiCUUNACAJKAIIQQhJDQAgCSgCBCISKAAAQbfIwuF+Rw0AIBIoAAQhCAsgCCAKRwRAIAYgB3FBAWohBiAIDQELCyAJRQ0AIAUQGCAFQX82AqDrASAFIAk2ApTrASAFIAUoAtzpASIINgKY6wEMAQsgBSgC3OkBIQgLAkAgCEUNACAFKAKY6wEgCEYNAEFgIQkMBgsCQCAFKALg6QEEQCAFIAUoAujqASIJRTYC7OoBIAkNASAFQvnq0NDnyaHk4QA3A6jqASAFQgA3A6DqASAFQs/W077Sx6vZQjcDmOoBIAVC1uuC7ur9ifXgADcDkOoBIAVCADcDiOoBICJBAEEoEAMaDAELIAVBADYC7OoBCyABIB1qISUgBSAFKQPo6QEgDq18NwPo6QEgAyAOayEDIAIgDmohAiAdIQ4DQCACIAMgBEEsahAdIhVBiH9LBEAgFSEJDAYLIANBA2siNSAVSQ0EIAJBA2ohG0FsIQkCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAEKAIsDgMCAQAVCyAVQf//B0sNEyAVQQNJDRIgBSkDyOkBIT8CQAJAIBstAAAiCUEDcSIaQQFrDgMGAQAHCyAFKAKA6gENAEFiIQkMFQsgFUEFSQ0SIBsoAAAhAwJ/AkACQAJAIAlBAnZBA3EiCUECaw4CAQIACyAJQQBHIQcgA0EEdkH/B3EhC0EDIQYgA0EOdkH/B3EMAgtBBCEGIANBBHZB//8AcSELQQEhByADQRJ2DAELIANBBHZB//8PcSILQYCACEsNE0EBIQdBBSEGIAItAAdBCnQgA0EWdnILIgggBmoiCSAVSw0SAkAgC0GBBkkNACAFKAKc6wFFDQBBACEDA0AgA0GDgAFLDQEgA0FAayEDDAALAAsgBiAbaiEPIBpBA0cNBiAFKAIMIgItAAFBCHQhAyAHDQcgA0UNCCAEQfAAaiAPIAgQDSIDQYh/Sw0JIAJBBGohBiALIBxqIhJBA2shCkEAIAIvAQJrQR9xIQcgHCEDA0AgBEHwAGoQD0UgAyAKSXEEQCADIAYgBCgCcCIIIAQoAnQiD3QgB3ZBAnRqIgIvAQA7AAAgAyACLQADaiIDIAYgCCAPIAItAAJqIgh0IAd2QQJ0aiICLwEAOwAAIAQgCCACLQACajYCdCADIAItAANqIQMMAQUgEkECayEIA0AgBEHwAGoQDyEPIAQoAnAhCiAEKAJ0IQIgAyAISyAPckUEQCADIAYgCiACdCAHdkECdGoiCi8BADsAACAEIAIgCi0AAmo2AnQgAyAKLQADaiEDDAELCwNAIAMgCE0EQCADIAYgCiACdCAHdkECdGoiDy8BADsAACADIA8tAANqIQMgAiAPLQACaiECDAELCwJAIAMgEk8NACADIAYgCiACdCAHdkECdGoiAy0AADoAACADLQADQQFGBEAgAiADLQACaiECDAELIAJBH0sNAEEgIAIgAy0AAmoiAiACQSBPGyECC0FsQWwgCyAEKAJ4IAQoAnxHGyACQSBHGyEDDAsLAAsACyAEKAI0IgIgJSAOa0sNCiAORQRAQQAhCSACDQIMDgsgDiAbLQAAIAIQAxogAiEJDAwLIBUgJSAOa0sNCSAODQFBACEJIBVFDQwLQbZ/IQkMEQsgDiAbIBUQAhogFSEJDAoLIBwgGwJ/AkACQAJAIAlBAnZBA3FBAWsOAwEAAgALIAlBA3YhA0EBDAILIBsvAABBBHYhA0ECDAELIBVBBEkNDiACLwADIAItAAVBEHRyIgJBj4CAAUsNDiACQQR2IQNBAwsiAmotAAAgA0EgahADIQkgBSADNgKA6wEgBSAJNgLw6gEgAkEBaiEJDAULIBUCfwJAAkACQCAJQQJ2QQNxQQFrDgMBAAIACyAJQQN2IQNBAQwCCyAbLwAAQQR2IQNBAgwBCyACLwADIAItAAVBEHRyQQR2IQNBAwsiAiADaiIJQSBqSQRAIAkgFUsNDSAcIAIgG2ogAxACIQIgBSADNgKA6wEgBSACNgLw6gEgAiADaiICQgA3ABggAkIANwAQIAJCADcACCACQgA3AAAMBQsgBSADNgKA6wEgBSACIBtqNgLw6gEMBAsgB0UEQCAeIA8gCCAUEBQiAkGIf0sgAiAIT3INDCAcIAsgAiAPaiAIIAJrIB4QFSEDDAMLIAtFIAhFcg0LIAtBCHYiAyAIIAtJBH8gCEEEdCALbgVBDwtBGGwiAkGMCGooAgBsIAJBiAhqKAIAaiIGQQN2IAZqIAJBgAhqKAIAIAJBhAhqKAIAIANsakkEQCMAQRBrIhAkACAeKAIAIQMgFEHwBGpBAEHsABADIQZBVCECAkAgA0H/AXEiDEEMSw0AAkAgFEHcCWogBiAQQQhqIBBBDGogDyAIIBRB3AtqIhcQCyISQYh/Sw0AIBAoAgwiBiAMSw0BIBRBqAVqIQ0gFEGkBWohNiAeQQRqIREgA0GAgIB4cSE3IAZBAWoiEyECIAYhAwNAIAIiB0EBayECIAMiCkEBayEDIBQgCkECdGooAvAERQ0AC0EBIAcgB0EBTRshFkEAIQdBASECA0AgAiAWRwRAIBQgAkECdCIDaigC8AQhGCADIA1qIAc2AgAgAkEBaiECIAcgGGohBwwBCwsgDSAHNgIAQQAhAiAQKAIIIQMDQCACIANHBEAgDSACIBRqQdwJai0AACIYQQJ0aiIZIBkoAgAiGUEBajYCACAUIBlBAXRqIhkgGDoA3QUgGSACOgDcBSACQQFqIQIMAQsLQQAhAyANQQA2AgAgDCAGQX9zaiEGQQEhAgNAIAIgFkcEQCAUIAJBAnRqIg0gAzYCACANKALwBCACIAZqdCADaiEDIAJBAWohAgwBCwsgDCATIAprIgZrQQFqIQogBiEDA0AgAyAKSQRAIBQgA0E0bGohDUEBIQIDQCACIBZHBEAgDSACQQJ0IhhqIBQgGGooAgAgA3Y2AgAgAkEBaiECDAELCyADQQFqIQMMAQsLIBcgFEE0EAIhOCAUQZAMaiE5IBMgDGshOiAUQdwFaiEXQQAhCgNAAkACQCAHIApHBEBBASAMIBMgFyAKQQF0aiICLQABIg1rIgNrIhh0IRkgAi0AACEWIDggDUECdGoiHygCACECIAYgGE0EQCA2QQEgAyA6aiINIA1BAUwbIiBBAnQiJGooAgAhDSA5IBQgA0E0bGpBNBACISEgDUEBdCEmIBEgAkECdGohIyAgQQFNDQIgA0EQdEGAgPwHcSAWckGAgIAIciEgICEgJGooAgAhJEEAIQIDQCACICRGDQMgIyACQQJ0aiAgNgEAIAJBAWohAgwACwALIAIgAiAZaiINIAIgDUsbIQ0gA0EQdEGAgPwHcSAWckGAgIAIciEDA0AgAiANRg0DIBEgAkECdGogAzYBACACQQFqIQIMAAsACyAeIAxBEHQgN3IgDHJBgAJyNgIADAMLIAcgDWshJCAXICZqISZBACENA0AgDSAkRg0BQQEgGCATICYgDUEBdGoiJy0AASICayI7a3QiPCAhIAJBAnRqIiAoAgAiAmohPSADIDtqQRB0QYCA/AdxICctAABBCHRyIBZyQYCAgBByIScDQCAjIAJBAnRqICc2AQAgAkEBaiICID1JDQALICAgICgCACA8ajYCACANQQFqIQ0MAAsACyAfIB8oAgAgGWo2AgAgCkEBaiEKDAALAAsgEiECCyAQQRBqJAAgAkGIf0sgAiAIT3INDCAcIAsgAiAPaiAIIAJrIB4QFiEDDAMLIB4gDyAIIBQQFCICQYh/SyACIAhPcg0LIBwgCyACIA9qIAggAmsgHhAXIQMMAgsgAwRAIBwgCyAPIAggAhAWIQMMAgsgHCALIA8gCCACEBchAwwBCyAcIAsgDyAIIAIQFSEDCyADQYh/Sw0IIAUgCzYCgOsBIAUgHDYC8OoBIAVBATYCgOoBIBpBAkYEQCAFIB42AgwLIAsgHGoiAkIANwAAIAJCADcAGCACQgA3ABAgAkIANwAIIAlBiH9LDQoLIAkgFUYNCCAVIAlrIQYgBSgCnOsBIQoCQCAJIBtqIgMtAAAiD0UEQEEBIQJBACEPQbh/IQkgBkEBRg0BDAsLAn8gA0EBaiAPwCICQQBODQAaIAJBf0YEQCAGQQNIDQsgAy8AAUGA/gFqIQ8gA0EDagwBCyAGQQJIDQogAy0AASAPQQh0ckGAgAJrIQ8gA0ECagshEkG4fyEJIBJBAWoiAiAVIBtqIgdLDQogLCAFIBItAAAiEkEGdkEjQQkgAiAHIAJrQcAQQdARQfASIAUoAoTqASAKIA8gFBAhIglBiH9LDQggKyAoIBJBBHZBA3FBH0EIIAIgCWoiAiAHIAJrQYALQYAMQYAXIAUoAoTqASAFKAKc6wEgDyAUECEiCEGIf0sNCEFsIQkgKiAtIBJBAnZBA3FBNEEJIAIgCGoiAiAHIAJrQYANQeAOQZAZIAUoAoTqASAFKAKc6wEgDyAUECEiB0GIf0sNCiACIAdqIANrIgIhCSACQYh/Sw0KCyAOIA9BAExyDQELQbp/IQkMCAsgJSAOayEJIAYgAmshBiACIANqIQcCQAJAAkAgCkUEQCAPQQlIIAUpA8jpAUKBgIAIVHINAiAoKAIAIgJBCGohEiACKAIEIQpBACEDQQAhAgNAIAMgCnZFBEAgAiASIANBA3RqLQACQRZLaiECIANBAWohAwwBCwsgBUEANgKc6wEgAkEIIAprdEEUTw0BDAMLIAVBADYCnOsBCyAEIAUoAvDqASIDNgLcASAJIA5qIRYgAyAFKAKA6wFqIRcCQCAPRQRAIA4hBwwBCyAFKAK46QEhGiAFKAK06QEhGCAFKAKw6QEhEiAFQQE2AoTqAUEAIQMDQCADQQNHBEAgBCADQQJ0IgJqIAIgBWpBrNABaigCADYCZCADQQFqIQMMAQsLQWwhCSAEQThqIgIgByAGEA1BiH9LDQNBCCAPIA9BCE4bIR8gNCACIAUoAgAQHiAzIAIgBSgCCBAeIDIgAiAFKAIEEB4gDiASayEZQQAhCANAIARBOGoQD0EDRiAIIB9OckUEQCAEKAJQIAQoAkxBA3RqKQIAIkCnIgdBEHYiEUH/AXEhCyAEKAJgIAQoAlxBA3RqKQIAIkGnIgxBEHYiIUH/AXEhECAEKAJYIAQoAlRBA3RqKQIAIkJCIIinIQYgQUIgiCBAQiCIpyEDAkAgQkIQiKciCkH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCPCIKayINIAIgAiANSxsiEyAKajYCPCAGIAQoAjggCnRBACATa3YgAiATayITdGohCiAEQThqEA8aIAIgDU0NASAEIAQoAjwiAiATajYCPCAEKAI4IAJ0QQAgE2t2IApqIQoMAQsgBCACIAQoAjwiDWo2AjwgBCgCOCANdEEAIAprdiAGaiEKIARBOGoQDxoLIAQpAmQhRCAEIAo2AmQgBCBENwJoDAELAkAgAkUEQCADBEAgBCgCZCEKDAMLIAQoAmghCgwBCyAEIAQoAjwiAkEBajYCPAJ/IAYgA0VqIAQoAjggAnRBH3ZqIgJBA0YEQCAEKAJkQQFrDAELIAJBAnQgBGooAmQLIgZFIAZqIQogAkEBRwRAIAQgBCgCaDYCbAsLIAQgBCgCZDYCaCAEIAo2AmQLpyECIEFCgID8B4NQRQRAIAQgBCgCPCIGIBBqNgI8IAQoAjggBnRBACAha3YgAmohAgsgCyAQakEUTwRAIARBOGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCPCIGIAtqNgI8IAQoAjggBnRBACARa3YgA2ohAwsgBEE4ahAPGiAEIAQoAjgiBkEAIAdBGHYiCyAEKAI8aiIQa3YgC0ECdEGgHWooAgBxIAdB//8DcWo2AkwgBCAQIAxBGHYiB2oiCzYCPCAEIAdBAnRBoB1qKAIAIAZBACALa3ZxIAxB//8DcWo2AlwgBEE4ahAPGiAEIEKnIgZBGHYiByAEKAI8aiILNgI8IAQgB0ECdEGgHWooAgAgBCgCOEEAIAtrdnEgBkH//wNxajYCVCAEQfAAaiAIQQxsaiIGIAo2AgggBiACNgIEIAYgAzYCACAIQQFqIQggAyAZaiACaiEZDAELCyAIIB9IDQMgFkEgayEhIA4hBwNAIARBOGoQD0EDRiAIIA9OckUEQCAEKAJQIAQoAkxBA3RqKQIAIkCnIgZBEHYiI0H/AXEhCiAEKAJgIAQoAlxBA3RqKQIAIkGnIg1BEHYiIEH/AXEhEyAEKAJYIAQoAlRBA3RqKQIAIkJCIIinIQMgQUIgiCBAQiCIpyELAkAgQkIQiKciDEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCPCIMayIRIAIgAiARSxsiECAMajYCPCADIAQoAjggDHRBACAQa3YgAiAQayIMdGohECAEQThqEA8aIAIgEU0NASAEIAQoAjwiAiAMajYCPCAEKAI4IAJ0QQAgDGt2IBBqIRAMAQsgBCACIAQoAjwiEGo2AjwgBCgCOCAQdEEAIAxrdiADaiEQIARBOGoQDxoLIAQpAmQhRCAEIBA2AmQgBCBENwJoDAELAkAgAkUEQCALBEAgBCgCZCEQDAMLIAQoAmghEAwBCyAEIAQoAjwiAkEBajYCPAJ/IAMgC0VqIAQoAjggAnRBH3ZqIgJBA0YEQCAEKAJkQQFrDAELIAJBAnQgBGooAmQLIgNFIANqIRAgAkEBRwRAIAQgBCgCaDYCbAsLIAQgBCgCZDYCaCAEIBA2AmQLpyEMIEFCgID8B4NQRQRAIAQgBCgCPCICIBNqNgI8IAQoAjggAnRBACAga3YgDGohDAsgCiATakEUTwRAIARBOGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCPCICIApqNgI8IAQoAjggAnRBACAja3YgC2ohCwsgBEE4ahAPGiAEIAQoAjgiAkEAIAZBGHYiAyAEKAI8aiIKa3YgA0ECdEGgHWooAgBxIAZB//8DcWo2AkwgBCAKIA1BGHYiA2oiBjYCPCAEIANBAnRBoB1qKAIAIAJBACAGa3ZxIA1B//8DcWo2AlwgBEE4ahAPGiAEIEKnIgJBGHYiAyAEKAI8aiIGNgI8IAQgA0ECdEGgHWooAgAgBCgCOEEAIAZrdnEgAkH//wNxajYCVAJAAkACQCAEKALcASIDIARB8ABqIAhBB3FBDGxqIhMoAgAiEWoiIyAXSw0AIAcgEygCBCINIBFqIgpqICFLDQAgCkEgaiAWIAdrTQ0BCyAEIBMoAgg2AhggBCATKQIANwMQIAcgFiAEQRBqIARB3AFqIBcgEiAYIBoQHyEKDAELIAcgEWohAiATKAIIIQYgByADKQAANwAAIAcgAykACDcACAJAIBFBEUkNACAHIAMpABA3ABAgByADKQAYNwAYIBFBEGtBEUgNACADQRBqIQMgB0EgaiERA0AgESADKQAQNwAAIBEgAykAGDcACCARIAMpACA3ABAgESADKQAoNwAYIANBIGohAyARQSBqIhEgAkkNAAsLIAIgBmshAyAEICM2AtwBIAIgEmsgBkkEQCAGIAIgGGtLDQcgGiAaIAMgEmsiA2oiESANak8EQCACIBEgDRAKGgwCCyADIA1qIQ0gAiARQQAgA2sQCiADayECIBIhAwsgBkEQTwRAIAIgAykAADcAACACIAMpAAg3AAggDUERSA0BIAIgDWohBiACQRBqIQIDQCACIAMpABA3AAAgAiADKQAYNwAIIAIgAykAIDcAECACIAMpACg3ABggA0EgaiEDIAJBIGoiAiAGSQ0ACwwBCwJAIAZBB00EQCACIAMtAAA6AAAgAiADLQABOgABIAIgAy0AAjoAAiACIAMtAAM6AAMgAiADIAZBAnQiBkHAHmooAgBqIgMoAAA2AAQgAyAGQeAeaigCAGshAwwBCyACIAMpAAA3AAALIA1BCUkNACACIA1qIREgAkEIaiIGIANBCGoiA2tBD0wEQANAIAYgAykAADcAACADQQhqIQMgBkEIaiIGIBFJDQAMAgsACyAGIAMpAAA3AAAgBiADKQAINwAIIA1BGUgNACACQRhqIQIDQCACIAMpABA3AAAgAiADKQAYNwAIIAIgAykAIDcAECACIAMpACg3ABggA0EgaiEDIAJBIGoiAiARSQ0ACwsgCkGIf0sEQCAKIQkMBgUgEyAQNgIIIBMgDDYCBCATIAs2AgAgCEEBaiEIIAcgCmohByALIBlqIAxqIRkMAgsACwsgCCAPSA0DIAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var kr=new vA,Fr=!1;async function Wo(A,e,t){let r="unknown";typeof A!="string"?r=A.href:A.startsWith("http")?r=A:r=typeof e<"u"?`${e}/${A}`:A,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5)),r.endsWith(".wasm.zst")&&(r=r.substring(0,r.length-9));let o=`${r}.wasm`,i=await T.get(`${o}.zst`,{responseType:"arraybuffer",params:t});Fr||(await kr.init(),Fr=!0);let l=kr.decode(new Uint8Array(i.data)).buffer;return(await import(`${r}.js`)).default({wasmBinary:l})}var Ur=Wo;var Nr=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var Wr=typeof globalThis.SharedArrayBuffer=="function",Sr=new TextEncoder,br=new TextDecoder("utf-8");function Go(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),i=A.fs_stat(e).size,n=null;Wr?n=new SharedArrayBuffer(i):n=new ArrayBuffer(i);let l=new Uint8Array(n);return A.fs_read(r,l,0,i,0),A.fs_close(r),l}function Gr(A,e,t){let r=null;Wr?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let o=new Uint8Array(r),i=new Uint8Array(A.HEAPU8.buffer,e,t);return o.set(i),o}function N(A,e,t,r){let o=0;return e!==null&&(o=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),o)),o}function v(A,e,t){let r=JSON.stringify(e),o=A.lengthBytesUTF8(r)+1,i=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,o]);A.stringToUTF8(r,i,o)}function b(A,e,t,r){let o=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),i=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),n=Gr(A,o,i);return O(r,n.buffer)}function hA(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.UTF8ToString(t);return JSON.parse(r)}function Oo(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(g,a){switch(g.type){case C.TextStream:{let s=Sr.encode(g.data.data),Q=N(A,s,a,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${Q}`};v(A,I,a);break}case C.JsonCompatible:{let s=Sr.encode(JSON.stringify(g.data)),Q=N(A,s,a,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${Q}`};v(A,I,a);break}case C.BinaryStream:{let s=g.data.data,Q=N(A,s,a,0),I={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${Q}`};v(A,I,a);break}case C.TextFile:{A.fs_writeFile(g.data.path,g.data.data);break}case C.BinaryFile:{A.fs_writeFile(g.data.path,g.data.data);break}case C.Image:{let s=g.data,Q=N(A,s.data,a,0),I=N(A,s.direction,a,1),B=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],u={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${I}`,size:s.size,data:`data:application/vnd.itk.address,0:${Q}`,metadata:B};v(A,u,a);break}case C.Mesh:{let s=g.data,Q=N(A,s.points,a,0),I=N(A,s.cells,a,1),B=N(A,s.pointData,a,2),u=N(A,s.cellData,a,3),m={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${Q}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${I}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${u}`};v(A,m,a);break}case C.PointSet:{let s=g.data,Q=N(A,s.points,a,0),I=N(A,s.pointData,a,1),B={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${Q}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${I}`};v(A,B,a);break}case C.TransformList:{let s=g.data,Q=[];s.forEach((I,B)=>{let m=`data:application/vnd.itk.address,0:${N(A,I.fixedParameters,a,B*2)}`,R=`data:application/vnd.itk.address,0:${N(A,I.parameters,a,B*2+1)}`,F={transformType:I.transformType,numberOfFixedParameters:I.numberOfFixedParameters,numberOfParameters:I.numberOfParameters,name:I.name,inputSpaceName:I.inputSpaceName,outputSpaceName:I.outputSpaceName,parameters:R,fixedParameters:m};Q.push(F)}),v(A,Q,a);break}case C.PolyData:{let s=g.data,Q=N(A,s.points,a,0),I=N(A,s.vertices,a,1),B=N(A,s.lines,a,2),u=N(A,s.polygons,a,3),m=N(A,s.triangleStrips,a,4),D=N(A,s.pointData,a,5),R=N(A,s.pointData,a,6),F={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${Q}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${I}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${B}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${u}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${m}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${D}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${R}`};v(A,F,a);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let o=A.stackSave(),i=0;try{i=A.callMain(e.slice())}catch(g){throw typeof g=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(g)):console.error("Build module in Debug mode for exception message information.")),g}finally{A.stackRestore(o)}let n=A.getModuleStdout(),l=A.getModuleStderr(),p=[];return t!=null&&t.length>0&&i===0&&t.forEach(function(g,a){let s=null;switch(g.type){case C.TextStream:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),B=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),u=new Uint8Array(A.HEAPU8.buffer,I,B);s={data:br.decode(u)};break}case C.JsonCompatible:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),B=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),u=new Uint8Array(A.HEAPU8.buffer,I,B);s=JSON.parse(br.decode(u));break}case C.BinaryStream:{let I=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),B=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);s={data:Gr(A,I,B)};break}case C.TextFile:{s={path:g.data.path,data:A.fs_readFile(g.data.path,{encoding:"utf8"})};break}case C.BinaryFile:{s={path:g.data.path,data:Go(A,g.data.path)};break}case C.Image:{let I=hA(A,a);I.data=b(A,a,0,I.imageType.componentType),I.direction=b(A,a,1,W.Float64),I.metadata=new Map(I.metadata),s=I;break}case C.Mesh:{let I=hA(A,a);I.numberOfPoints>0?I.points=b(A,a,0,I.meshType.pointComponentType):I.points=O(I.meshType.pointComponentType,new ArrayBuffer(0)),I.numberOfCells>0?I.cells=b(A,a,1,I.meshType.cellComponentType):I.cells=O(I.meshType.cellComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=b(A,a,2,I.meshType.pointPixelComponentType):I.pointData=O(I.meshType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=b(A,a,3,I.meshType.cellPixelComponentType):I.cellData=O(I.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=I;break}case C.PointSet:{let I=hA(A,a);I.numberOfPoints>0?I.points=b(A,a,0,I.pointSetType.pointComponentType):I.points=O(I.pointSetType.pointComponentType,new ArrayBuffer(0)),I.numberOfPointPixels>0?I.pointData=b(A,a,1,I.pointSetType.pointPixelComponentType):I.pointData=O(I.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=I;break}case C.TransformList:{let I=hA(A,a);I.forEach((B,u)=>{B.numberOfFixedParameters>0&&(I[u].fixedParameters=b(A,a,u*2,B.transformType.parametersValueType)),B.numberOfFixedParameters>0&&(I[u].parameters=b(A,a,u*2+1,B.transformType.parametersValueType))}),s=I;break}case C.PolyData:{let I=hA(A,a);I.numberOfPoints>0?I.points=b(A,a,0,W.Float32):I.points=new Float32Array,I.verticesBufferSize>0?I.vertices=b(A,a,1,w.UInt32):I.vertices=new Uint32Array,I.linesBufferSize>0?I.lines=b(A,a,2,w.UInt32):I.lines=new Uint32Array,I.polygonsBufferSize>0?I.polygons=b(A,a,3,w.UInt32):I.polygons=new Uint32Array,I.triangleStripsBufferSize>0?I.triangleStrips=b(A,a,4,w.UInt32):I.triangleStrips=new Uint32Array,I.numberOfPointPixels>0?I.pointData=b(A,a,5,I.polyDataType.pointPixelComponentType):I.pointData=O(I.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),I.numberOfCellPixels>0?I.cellData=b(A,a,6,I.polyDataType.cellPixelComponentType):I.cellData=O(I.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=I;break}default:throw Error("Unsupported output InterfaceType")}let Q={type:g.type,data:s};p.push(Q)}),{returnValue:i,stdout:n,stderr:l,outputs:p}}var Or=Oo;var Lo=typeof globalThis.SharedArrayBuffer<"u";function Jo(A,e){if(A==null)return[];let t=[];for(let r=0;r<A.length;r++){let o=Po(A[r],e);o!==null&&t.push(o)}return t}function Po(A,e){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),Lo&&t instanceof SharedArrayBuffer?null:e?t:t.slice(0)}var Lr=Jo;function xo(A){return[A.data,A.direction]}var Jr=xo;function Mo(A){return[A.points,A.pointData,A.cells,A.cellData]}var Pr=Mo;function To(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var xr=To;var Ho;function VA(){return Ho}var Yo;function Mr(){return Yo}var qo;function ZA(){return qo}var Ge=new Map;function Ko(){let A=ZA();return typeof A>"u"&&(A=null),A}function Tr(){let A=VA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function zA(){let A=Mr();return typeof A>"u"&&(A={}),A}async function jo(A,e,t){let r=A,o=A;if(typeof A!="string"&&(r=new URL(A.href),o=r.href),Ge.has(o))return Ge.get(o);{let i=await Ur(A,e?.toString()??Tr(),t??zA());return Ge.set(o,i),i}}async function vo(A,e,t,r,o){if(!await Nr()){let m="WebAssembly SIMD support is required -- please update your browser.";throw alert(m),new Error(m)}let i=o?.webWorker??null;if(i===!1){let m=await jo(A.toString(),o?.pipelineBaseUrl,o?.pipelineQueryParams??zA());return Or(m,e,t,r)}let n=i,l=o?.pipelineWorkerUrl??Ko(),p=typeof l!="string"&&typeof l?.href<"u"?l.href:l,{workerProxy:g,worker:a}=await Dr(n,p,o?.pipelineQueryParams??zA());n=a;let s=[];r!=null&&r.length>0&&r.forEach(function(m){if(m.type===C.BinaryStream){let D=m.data.data;s.push(D)}else if(m.type===C.BinaryFile){let D=m.data.data;s.push(D)}else if(m.type===C.Image){let D=m.data;D.data!==null&&s.push(...Jr(D))}else if(m.type===C.Mesh){let D=m.data;s.push(...Pr(D))}else if(m.type===C.PolyData){let D=m.data;s.push(...xr(D))}});let Q=o?.pipelineBaseUrl??Tr(),I=typeof Q!="string"&&typeof Q?.href<"u"?Q.href:Q,B=r!=null?ne(r,Lr(s,o?.noCopy)):null,u=await g.runPipeline(A.toString(),I,e,t,B,o?.pipelineQueryParams??zA());return{returnValue:u.returnValue,stdout:u.stdout,stderr:u.stderr,outputs:u.outputs,webWorker:n}}var c=vo;var Vo=null;function Hr(){return Vo}var Zo="1.6.0",Yr=Zo;var Oe,zo=`https://cdn.jsdelivr.net/npm/@itk-wasm/image-io@${Yr}/dist/pipelines`;function eC(A){Oe=A}function d(){if(typeof Oe<"u")return Oe;let A=VA();return typeof A<"u"?A:zo}var Le,Xo=null;function qr(A){Le=A}function f(){if(typeof Le<"u")return Le;let A=ZA();return typeof A<"u"?A:Xo}var aA=null;async function Kr(){let A=f(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;aA=await dA(e)}function IC(A){aA=A}async function y(){if(aA!==null)return aA.terminated&&await Kr(),aA;let A=Hr();return A!==null?A:(await Kr(),aA)}async function _o(A){let t=(await T.get(`${A}/index.json`,{responseType:"json"})).data,r=await T.get(`${A}/data/data.raw`,{responseType:"arraybuffer"});t.data=O(t.imageType.componentType,r.data);let o=await T.get(`${A}/data/direction.raw`,{responseType:"arraybuffer"});return t.direction=O(W.Float64,o.data),t}var $o=_o;var Aa=new Map([["image/jpeg","jpeg"],["image/png","png"],["image/tiff","tiff"],["image/x-ms-bmp","bmp"],["image/x-bmp","bmp"],["image/bmp","bmp"],["application/dicom","gdcm"]]),nA=Aa;async function ea(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="png-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Je=ea;async function ta(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="png-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var Pe=ta;async function ra(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="meta-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var xe=ra;async function ia(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="meta-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var Me=ia;async function oa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="tiff-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Te=oa;async function aa(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="tiff-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var He=aa;async function na(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="nifti-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Ye=na;async function Ia(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="nifti-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var qe=Ia;async function sa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="jpeg-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Ke=sa;async function ga(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="jpeg-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var je=ga;async function Ba(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="nrrd-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var ve=Ba;async function Ca(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="nrrd-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var Ve=Ca;async function la(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="vtk-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Ze=la;async function Qa(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="vtk-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var ze=Qa;async function Ea(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="bmp-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Xe=Ea;async function pa(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="bmp-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var _e=pa;async function ma(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="hdf5-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var $e=ma;async function ua(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="hdf5-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var At=ua;async function fa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="minc-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var et=fa;async function ca(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="minc-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var tt=ca;async function da(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="mrc-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var rt=da;async function ya(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="mrc-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var it=ya;async function ha(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="lsm-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var ot=ha;async function wa(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="lsm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var at=wa;async function Da(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="mgh-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var nt=Da;async function Ra(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="mgh-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var It=Ra;async function ka(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="bio-rad-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var st=ka;async function Fa(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="bio-rad-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var gt=Fa;async function Ua(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="gipl-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Bt=Ua;async function Na(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="gipl-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var Ct=Na;async function Sa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="ge-adw-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var lt=Sa;async function ba(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="ge-adw-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var Qt=ba;async function Wa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="ge4-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Et=Wa;async function Ga(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="ge4-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var pt=Ga;async function Oa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="ge5-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var mt=Oa;async function La(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="ge5-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var ut=La;async function Ja(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="gdcm-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var ft=Ja;async function Pa(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="gdcm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var ct=Pa;async function xa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="scanco-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var dt=xa;async function Ma(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="scanco-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var yt=Ma;async function Ta(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="fdf-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var ht=Ta;async function Ha(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="wasm-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var wt=Ha;async function Ya(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="wasm-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var Dt=Ya;async function qa(A,e={}){let t=[{type:C.JsonCompatible},{type:C.Image}],r=A;if(A instanceof File){let m=await A.arrayBuffer();r={path:A.name,data:new Uint8Array(m)}}let o=[{type:C.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),e.informationOnly&&e.informationOnly&&i.push("--information-only");let g="wasm-zstd-read-image",a=e?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,t,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:e?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldRead:B[0]?.data,image:B[1]?.data}}var Rt=qa;async function Ka(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="wasm-zstd-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var kt=Ka;var ja=new Map([["png",[Je,Pe]],["meta",[xe,Me]],["tiff",[Te,He]],["nifti",[Ye,qe]],["jpeg",[Ke,je]],["nrrd",[ve,Ve]],["vtk",[Ze,ze]],["bmp",[Xe,_e]],["hdf5",[$e,At]],["mnc",[et,tt]],["mrc",[rt,it]],["lsm",[ot,at]],["mgh",[nt,It]],["bioRad",[st,gt]],["gipl",[Bt,Ct]],["geAdw",[lt,Qt]],["ge4",[Et,pt]],["ge5",[mt,ut]],["gdcm",[ft,ct]],["scanco",[dt,yt]],["fdf",[ht,null]],["wasm",[wt,Dt]],["wasmZstd",[Rt,kt]]]),IA=ja;async function va(A,e={}){let t=A.type??"",r=A.name??A.path??"fileName",o=sA(r).toLowerCase(),i=e?.webWorker,n=A;if(A instanceof Blob){let I=await A.arrayBuffer();n={path:A.name,data:new Uint8Array(I)}}let l=null;if(t&&nA.has(t))l=nA.get(t);else if(Z.has(o))l=Z.get(o);else for(let I of IA.values())if(I[0]!==null){let{webWorker:B,couldRead:u,image:m}=await I[0]({path:n.path,data:n.data.slice()},{webWorker:i,informationOnly:e?.informationOnly,noCopy:e?.noCopy});if(i=B,u)return typeof e<"u"&&(m=K(m,e)),{webWorker:i,image:m}}if(!l)throw Error("Could not find IO for: "+r);let g=IA.get(l)[0],{webWorker:a,couldRead:s,image:Q}=await g(n,{webWorker:i,informationOnly:e?.informationOnly,noCopy:e?.noCopy});if(i=a,!s)throw Error("Could not read: "+r);return typeof e<"u"&&(Q=K(Q,e)),{webWorker:i,image:Q}}var Ft=va;var Va=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:6,jr=new te(Va,Ft);async function Za(A,e={}){let t=1,r=0,o=!1;typeof e=="object"&&(typeof e.zSpacing<"u"&&(t=e.zSpacing),typeof e.zOrigin<"u"&&(r=e.zOrigin),typeof e.sortedSeries<"u"&&(o=e.sortedSeries));let i=Array.from(A,async function(s){if(s instanceof File){let Q=await s.arrayBuffer();return{path:s.name,data:new Uint8Array(Q)}}return s}),n=await Promise.all(i);o||n.sort((s,Q)=>s.path<Q.path?-1:s.path>Q.path?1:0);let l=[];for(let s=0;s<n.length;s++)l.push([n[s],{}]);let g=(await jr.runTasks(l).promise).map(s=>{let Q=s.image;return Q.imageType.dimension=3,Q.size.push(1),Q.spacing.push(t),Q.origin.push(r),Q.direction=new Float64Array(9),Q.direction.fill(0),Q.direction[0]=1,Q.direction[4]=1,Q.direction[8]=1,Q}),a=Ae(g);return typeof e=="object"&&(typeof e.componentType<"u"||typeof e.pixelType<"u")&&(a=K(a,e)),{image:a,webWorkerPool:jr}}var za=Za;async function Xa(A,e,t={}){let r=A;(typeof t.componentType<"u"||typeof t.pixelType<"u")&&(r=K(A,t));let o=t.mimeType,i=sA(e).toLowerCase(),n=t.webWorker,l=null;if(typeof o<"u"&&nA.has(o))l=nA.get(o);else if(Z.has(i))l=Z.get(i);else for(let B of IA.values())if(B[1]!==null){let{webWorker:u,couldWrite:m,serializedImage:D}=await B[1]($A(r),e,t);if(n=u,m)return{webWorker:n,serializedImage:D}}if(!l)throw Error("Could not find IO for: "+e);let g=IA.get(l)[1],{webWorker:a,couldWrite:s,serializedImage:Q}=await g(r,e,t);if(n=a,!s)throw Error("Could not write: "+e);return{webWorker:n,serializedImage:Q}}var _a=Xa;async function $a(A,e,t={}){let r=[{type:C.JsonCompatible},{type:C.BinaryFile,data:{path:e,data:new Uint8Array}}],o=[{type:C.Image,data:A}],i=[];i.push("0"),i.push("0");let p=e;i.push(p),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only"),t.useCompression&&t.useCompression&&i.push("--use-compression");let g="fdf-write-image",a=t?.webWorker;a===void 0&&(a=await y());let{webWorker:s,returnValue:Q,stderr:I,outputs:B}=await c(g,i,r,o,{pipelineBaseUrl:d(),pipelineWorkerUrl:f(),webWorker:a,noCopy:t?.noCopy});if(Q!==0&&I!=="")throw new Error(I);return{webWorker:s,couldWrite:B[0]?.data,serializedImage:B[1]?.data}}var An=$a;var vr='data:text/javascript;charset=utf-8,var De=Object.defineProperty;var de=(A,t)=>{for(var e in t)De(A,e,{get:t[e],enumerable:!0})};var Et=Symbol("Comlink.proxy"),he=Symbol("Comlink.endpoint"),ye=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),QA=Symbol("Comlink.thrown"),ct=A=>typeof A=="object"&&A!==null||typeof A=="function",me={canHandle:A=>ct(A)&&A[Et],serialize(A){let{port1:t,port2:e}=new MessageChannel;return lA(A,t),[e,[e]]},deserialize(A){return A.start(),Fe(A)}},we={canHandle:A=>ct(A)&&QA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},ft=new Map([["proxy",me],["throw",we]]);function pe(A,t){for(let e of A)if(t===e||e==="*"||e instanceof RegExp&&e.test(t))return!0;return!1}function lA(A,t=globalThis,e=["*"]){t.addEventListener("message",function I(r){if(!r||!r.data)return;if(!pe(e,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:g,type:o,path:C}=Object.assign({path:[]},r.data),E=(r.data.argumentList||[]).map(O),a;try{let s=C.slice(0,-1).reduce((f,B)=>f[B],A),n=C.reduce((f,B)=>f[B],A);switch(o){case"GET":a=n;break;case"SET":s[C.slice(-1)[0]]=O(r.data.value),a=!0;break;case"APPLY":a=n.apply(s,E);break;case"CONSTRUCT":{let f=new n(...E);a=Ge(f)}break;case"ENDPOINT":{let{port1:f,port2:B}=new MessageChannel;lA(A,B),a=MA(f,[f])}break;case"RELEASE":a=void 0;break;default:return}}catch(s){a={value:s,[QA]:0}}Promise.resolve(a).catch(s=>({value:s,[QA]:0})).then(s=>{let[n,f]=fA(s);t.postMessage(Object.assign(Object.assign({},n),{id:g}),f),o==="RELEASE"&&(t.removeEventListener("message",I),lt(t),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(s=>{let[n,f]=fA({value:new TypeError("Unserializable return value"),[QA]:0});t.postMessage(Object.assign(Object.assign({},n),{id:g}),f)})}),t.start&&t.start()}function Se(A){return A.constructor.name==="MessagePort"}function lt(A){Se(A)&&A.close()}function Fe(A,t){return qA(A,[],t)}function aA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ut(A){return P(A,{type:"RELEASE"}).then(()=>{lt(A)})}var EA=new WeakMap,cA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(EA.get(A)||0)-1;EA.set(A,t),t===0&&ut(A)});function Re(A,t){let e=(EA.get(t)||0)+1;EA.set(t,e),cA&&cA.register(A,t,A)}function Ne(A){cA&&cA.unregister(A)}function qA(A,t=[],e=function(){}){let I=!1,r=new Proxy(e,{get(g,o){if(aA(I),o===ye)return()=>{Ne(r),ut(A),I=!0};if(o==="then"){if(t.length===0)return{then:()=>r};let C=P(A,{type:"GET",path:t.map(E=>E.toString())}).then(O);return C.then.bind(C)}return qA(A,[...t,o])},set(g,o,C){aA(I);let[E,a]=fA(C);return P(A,{type:"SET",path:[...t,o].map(s=>s.toString()),value:E},a).then(O)},apply(g,o,C){aA(I);let E=t[t.length-1];if(E===he)return P(A,{type:"ENDPOINT"}).then(O);if(E==="bind")return qA(A,t.slice(0,-1));let[a,s]=Qt(C);return P(A,{type:"APPLY",path:t.map(n=>n.toString()),argumentList:a},s).then(O)},construct(g,o){aA(I);let[C,E]=Qt(o);return P(A,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:C},E).then(O)}});return Re(r,A),r}function Ue(A){return Array.prototype.concat.apply([],A)}function Qt(A){let t=A.map(fA);return[t.map(e=>e[0]),Ue(t.map(e=>e[1]))]}var Dt=new WeakMap;function MA(A,t){return Dt.set(A,t),A}function Ge(A){return Object.assign(A,{[Et]:!0})}function fA(A){for(let[t,e]of ft)if(e.canHandle(A)){let[I,r]=e.serialize(A);return[{type:"HANDLER",name:t,value:I},r]}return[{type:"RAW",value:A},Dt.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return ft.get(A.name).deserialize(A.value);case"RAW":return A.value}}function P(A,t,e){return new Promise(I=>{let r=ke();A.addEventListener("message",function g(o){!o.data||!o.data.id||o.data.id!==r||(A.removeEventListener("message",g),I(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},t),e)})}function ke(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function v(A,t){return function(){return A.apply(t,arguments)}}var{toString:Le}=Object.prototype,{getPrototypeOf:TA}=Object,DA=(A=>t=>{let e=Le.call(t);return A[e]||(A[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),t=>DA(t)===A),dA=A=>t=>typeof t===A,{isArray:W}=Array,$=dA("undefined");function be(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&U(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var yt=G("ArrayBuffer");function Je(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&yt(A.buffer),t}var He=dA("string"),U=dA("function"),mt=dA("number"),hA=A=>A!==null&&typeof A=="object",Ye=A=>A===!0||A===!1,uA=A=>{if(DA(A)!=="object")return!1;let t=TA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},qe=G("Date"),Me=G("File"),Ke=G("Blob"),Te=G("FileList"),Oe=A=>hA(A)&&U(A.pipe),xe=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||U(A.append)&&((t=DA(A))==="formdata"||t==="object"&&U(A.toString)&&A.toString()==="[object FormData]"))},Pe=G("URLSearchParams"),[We,je,Ze,Ve]=["ReadableStream","Request","Response","Headers"].map(G),Xe=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function AA(A,t,{allOwnKeys:e=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),W(A))for(I=0,r=A.length;I<r;I++)t.call(null,A[I],I,A);else{let g=e?Object.getOwnPropertyNames(A):Object.keys(A),o=g.length,C;for(I=0;I<o;I++)C=g[I],t.call(null,A[C],C,A)}}function wt(A,t){t=t.toLowerCase();let e=Object.keys(A),I=e.length,r;for(;I-- >0;)if(r=e[I],t===r.toLowerCase())return r;return null}var x=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,pt=A=>!$(A)&&A!==x;function KA(){let{caseless:A}=pt(this)&&this||{},t={},e=(I,r)=>{let g=A&&wt(t,r)||r;uA(t[g])&&uA(I)?t[g]=KA(t[g],I):uA(I)?t[g]=KA({},I):W(I)?t[g]=I.slice():t[g]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&AA(arguments[I],e);return t}var _e=(A,t,e,{allOwnKeys:I}={})=>(AA(t,(r,g)=>{e&&U(r)?A[g]=v(r,e):A[g]=r},{allOwnKeys:I}),A),ze=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),ve=(A,t,e,I)=>{A.prototype=Object.create(t.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),e&&Object.assign(A.prototype,e)},$e=(A,t,e,I)=>{let r,g,o,C={};if(t=t||{},A==null)return t;do{for(r=Object.getOwnPropertyNames(A),g=r.length;g-- >0;)o=r[g],(!I||I(o,A,t))&&!C[o]&&(t[o]=A[o],C[o]=!0);A=e!==!1&&TA(A)}while(A&&(!e||e(A,t))&&A!==Object.prototype);return t},AI=(A,t,e)=>{A=String(A),(e===void 0||e>A.length)&&(e=A.length),e-=t.length;let I=A.indexOf(t,e);return I!==-1&&I===e},tI=A=>{if(!A)return null;if(W(A))return A;let t=A.length;if(!mt(t))return null;let e=new Array(t);for(;t-- >0;)e[t]=A[t];return e},eI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&TA(Uint8Array)),II=(A,t)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let g=r.value;t.call(A,g[0],g[1])}},rI=(A,t)=>{let e,I=[];for(;(e=A.exec(t))!==null;)I.push(e);return I},gI=G("HTMLFormElement"),oI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(e,I,r){return I.toUpperCase()+r}),ht=(({hasOwnProperty:A})=>(t,e)=>A.call(t,e))(Object.prototype),iI=G("RegExp"),St=(A,t)=>{let e=Object.getOwnPropertyDescriptors(A),I={};AA(e,(r,g)=>{let o;(o=t(r,g,A))!==!1&&(I[g]=o||r)}),Object.defineProperties(A,I)},sI=A=>{St(A,(t,e)=>{if(U(A)&&["arguments","caller","callee"].indexOf(e)!==-1)return!1;let I=A[e];if(U(I)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+e+"\'")})}})},nI=(A,t)=>{let e={},I=r=>{r.forEach(g=>{e[g]=!0})};return W(A)?I(A):I(String(A).split(t)),e},CI=()=>{},BI=(A,t)=>A!=null&&Number.isFinite(A=+A)?A:t;function aI(A){return!!(A&&U(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var QI=A=>{let t=new Array(10),e=(I,r)=>{if(hA(I)){if(t.indexOf(I)>=0)return;if(!("toJSON"in I)){t[r]=I;let g=W(I)?[]:{};return AA(I,(o,C)=>{let E=e(o,r+1);!$(E)&&(g[C]=E)}),t[r]=void 0,g}}return I};return e(A,0)},EI=G("AsyncFunction"),cI=A=>A&&(hA(A)||U(A))&&U(A.then)&&U(A.catch),Ft=((A,t)=>A?setImmediate:t?((e,I)=>(x.addEventListener("message",({source:r,data:g})=>{r===x&&g===e&&I.length&&I.shift()()},!1),r=>{I.push(r),x.postMessage(e,"*")}))(`axios@${Math.random()}`,[]):e=>setTimeout(e))(typeof setImmediate=="function",U(x.postMessage)),fI=typeof queueMicrotask<"u"?queueMicrotask.bind(x):typeof process<"u"&&process.nextTick||Ft,i={isArray:W,isArrayBuffer:yt,isBuffer:be,isFormData:xe,isArrayBufferView:Je,isString:He,isNumber:mt,isBoolean:Ye,isObject:hA,isPlainObject:uA,isReadableStream:We,isRequest:je,isResponse:Ze,isHeaders:Ve,isUndefined:$,isDate:qe,isFile:Me,isBlob:Ke,isRegExp:iI,isFunction:U,isStream:Oe,isURLSearchParams:Pe,isTypedArray:eI,isFileList:Te,forEach:AA,merge:KA,extend:_e,trim:Xe,stripBOM:ze,inherits:ve,toFlatObject:$e,kindOf:DA,kindOfTest:G,endsWith:AI,toArray:tI,forEachEntry:II,matchAll:rI,isHTMLForm:gI,hasOwnProperty:ht,hasOwnProp:ht,reduceDescriptors:St,freezeMethods:sI,toObjectSet:nI,toCamelCase:oI,noop:CI,toFiniteNumber:BI,findKey:wt,global:x,isContextDefined:pt,isSpecCompliantForm:aI,toJSONObject:QI,isAsyncFn:EI,isThenable:cI,setImmediate:Ft,asap:fI};function j(A,t,e,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),I&&(this.request=I),r&&(this.response=r,this.status=r.status?r.status:null)}i.inherits(j,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:i.toJSONObject(this.config),code:this.code,status:this.status}}});var Rt=j.prototype,Nt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Nt[A]={value:A}});Object.defineProperties(j,Nt);Object.defineProperty(Rt,"isAxiosError",{value:!0});j.from=(A,t,e,I,r,g)=>{let o=Object.create(Rt);return i.toFlatObject(A,o,function(E){return E!==Error.prototype},C=>C!=="isAxiosError"),j.call(o,A.message,t,e,I,r),o.cause=A,o.name=A.name,g&&Object.assign(o,g),o};var u=j;var yA=null;function OA(A){return i.isPlainObject(A)||i.isArray(A)}function Gt(A){return i.endsWith(A,"[]")?A.slice(0,-2):A}function Ut(A,t,e){return A?A.concat(t).map(function(r,g){return r=Gt(r),!e&&g?"["+r+"]":r}).join(e?".":""):t}function lI(A){return i.isArray(A)&&!A.some(OA)}var uI=i.toFlatObject(i,{},null,function(t){return/^is[A-Z]/.test(t)});function DI(A,t,e){if(!i.isObject(A))throw new TypeError("target must be an object");t=t||new(yA||FormData),e=i.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(l,c){return!i.isUndefined(c[l])});let I=e.metaTokens,r=e.visitor||s,g=e.dots,o=e.indexes,E=(e.Blob||typeof Blob<"u"&&Blob)&&i.isSpecCompliantForm(t);if(!i.isFunction(r))throw new TypeError("visitor must be a function");function a(Q){if(Q===null)return"";if(i.isDate(Q))return Q.toISOString();if(!E&&i.isBlob(Q))throw new u("Blob is not supported. Use a Buffer instead.");return i.isArrayBuffer(Q)||i.isTypedArray(Q)?E&&typeof Blob=="function"?new Blob([Q]):Buffer.from(Q):Q}function s(Q,l,c){let d=Q;if(Q&&!c&&typeof Q=="object"){if(i.endsWith(l,"{}"))l=I?l:l.slice(0,-2),Q=JSON.stringify(Q);else if(i.isArray(Q)&&lI(Q)||(i.isFileList(Q)||i.endsWith(l,"[]"))&&(d=i.toArray(Q)))return l=Gt(l),d.forEach(function(m,H){!(i.isUndefined(m)||m===null)&&t.append(o===!0?Ut([l],H,g):o===null?l:l+"[]",a(m))}),!1}return OA(Q)?!0:(t.append(Ut(c,l,g),a(Q)),!1)}let n=[],f=Object.assign(uI,{defaultVisitor:s,convertValue:a,isVisitable:OA});function B(Q,l){if(!i.isUndefined(Q)){if(n.indexOf(Q)!==-1)throw Error("Circular reference detected in "+l.join("."));n.push(Q),i.forEach(Q,function(d,h){(!(i.isUndefined(d)||d===null)&&r.call(t,d,i.isString(h)?h.trim():h,l,f))===!0&&B(d,l?l.concat(h):[h])}),n.pop()}}if(!i.isObject(A))throw new TypeError("data must be an object");return B(A),t}var M=DI;function kt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return t[I]})}function Lt(A,t){this._pairs=[],A&&M(A,this,t)}var bt=Lt.prototype;bt.append=function(t,e){this._pairs.push([t,e])};bt.toString=function(t){let e=t?function(I){return t.call(this,I,kt)}:kt;return this._pairs.map(function(r){return e(r[0])+"="+e(r[1])},"").join("&")};var mA=Lt;function dI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function tA(A,t,e){if(!t)return A;let I=e&&e.encode||dI;i.isFunction(e)&&(e={serialize:e});let r=e&&e.serialize,g;if(r?g=r(t,e):g=i.isURLSearchParams(t)?t.toString():new mA(t,e).toString(I),g){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+g}return A}var xA=class{constructor(){this.handlers=[]}use(t,e,I){return this.handlers.push({fulfilled:t,rejected:e,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){i.forEach(this.handlers,function(I){I!==null&&t(I)})}},PA=xA;var wA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Jt=typeof URLSearchParams<"u"?URLSearchParams:mA;var Ht=typeof FormData<"u"?FormData:null;var Yt=typeof Blob<"u"?Blob:null;var qt={isBrowser:!0,classes:{URLSearchParams:Jt,FormData:Ht,Blob:Yt},protocols:["http","https","file","blob","url","data"]};var ZA={};de(ZA,{hasBrowserEnv:()=>jA,hasStandardBrowserEnv:()=>hI,hasStandardBrowserWebWorkerEnv:()=>yI,navigator:()=>WA,origin:()=>mI});var jA=typeof window<"u"&&typeof document<"u",WA=typeof navigator=="object"&&navigator||void 0,hI=jA&&(!WA||["ReactNative","NativeScript","NS"].indexOf(WA.product)<0),yI=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",mI=jA&&window.location.href||"http://localhost";var y={...ZA,...qt};function VA(A,t){return M(A,new y.classes.URLSearchParams,Object.assign({visitor:function(e,I,r,g){return y.isNode&&i.isBuffer(e)?(this.append(I,e.toString("base64")),!1):g.defaultVisitor.apply(this,arguments)}},t))}function wI(A){return i.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function pI(A){let t={},e=Object.keys(A),I,r=e.length,g;for(I=0;I<r;I++)g=e[I],t[g]=A[g];return t}function SI(A){function t(e,I,r,g){let o=e[g++];if(o==="__proto__")return!0;let C=Number.isFinite(+o),E=g>=e.length;return o=!o&&i.isArray(r)?r.length:o,E?(i.hasOwnProp(r,o)?r[o]=[r[o],I]:r[o]=I,!C):((!r[o]||!i.isObject(r[o]))&&(r[o]=[]),t(e,I,r[o],g)&&i.isArray(r[o])&&(r[o]=pI(r[o])),!C)}if(i.isFormData(A)&&i.isFunction(A.entries)){let e={};return i.forEachEntry(A,(I,r)=>{t(wI(I),r,e,0)}),e}return null}var pA=SI;function FI(A,t,e){if(i.isString(A))try{return(t||JSON.parse)(A),i.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(e||JSON.stringify)(A)}var XA={transitional:wA,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){let I=e.getContentType()||"",r=I.indexOf("application/json")>-1,g=i.isObject(t);if(g&&i.isHTMLForm(t)&&(t=new FormData(t)),i.isFormData(t))return r?JSON.stringify(pA(t)):t;if(i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)||i.isReadableStream(t))return t;if(i.isArrayBufferView(t))return t.buffer;if(i.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let C;if(g){if(I.indexOf("application/x-www-form-urlencoded")>-1)return VA(t,this.formSerializer).toString();if((C=i.isFileList(t))||I.indexOf("multipart/form-data")>-1){let E=this.env&&this.env.FormData;return M(C?{"files[]":t}:t,E&&new E,this.formSerializer)}}return g||r?(e.setContentType("application/json",!1),FI(t)):t}],transformResponse:[function(t){let e=this.transitional||XA.transitional,I=e&&e.forcedJSONParsing,r=this.responseType==="json";if(i.isResponse(t)||i.isReadableStream(t))return t;if(t&&i.isString(t)&&(I&&!this.responseType||r)){let o=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(C){if(o)throw C.name==="SyntaxError"?u.from(C,u.ERR_BAD_RESPONSE,this,null,this.response):C}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:y.classes.FormData,Blob:y.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};i.forEach(["delete","get","head","post","put","patch"],A=>{XA.headers[A]={}});var Z=XA;var RI=i.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Mt=A=>{let t={},e,I,r;return A&&A.split(`%0A`).forEach(function(o){r=o.indexOf(":"),e=o.substring(0,r).trim().toLowerCase(),I=o.substring(r+1).trim(),!(!e||t[e]&&RI[e])&&(e==="set-cookie"?t[e]?t[e].push(I):t[e]=[I]:t[e]=t[e]?t[e]+", "+I:I)}),t};var Kt=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function SA(A){return A===!1||A==null?A:i.isArray(A)?A.map(SA):String(A)}function NI(A){let t=Object.create(null),e=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=e.exec(A);)t[I[1]]=I[2];return t}var UI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function _A(A,t,e,I,r){if(i.isFunction(I))return I.call(this,t,e);if(r&&(t=e),!!i.isString(t)){if(i.isString(I))return t.indexOf(I)!==-1;if(i.isRegExp(I))return I.test(t)}}function GI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,e,I)=>e.toUpperCase()+I)}function kI(A,t){let e=i.toCamelCase(" "+t);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+e,{value:function(r,g,o){return this[I].call(this,t,r,g,o)},configurable:!0})})}var V=class{constructor(t){t&&this.set(t)}set(t,e,I){let r=this;function g(C,E,a){let s=eA(E);if(!s)throw new Error("header name must be a non-empty string");let n=i.findKey(r,s);(!n||r[n]===void 0||a===!0||a===void 0&&r[n]!==!1)&&(r[n||E]=SA(C))}let o=(C,E)=>i.forEach(C,(a,s)=>g(a,s,E));if(i.isPlainObject(t)||t instanceof this.constructor)o(t,e);else if(i.isString(t)&&(t=t.trim())&&!UI(t))o(Mt(t),e);else if(i.isHeaders(t))for(let[C,E]of t.entries())g(E,C,I);else t!=null&&g(e,t,I);return this}get(t,e){if(t=eA(t),t){let I=i.findKey(this,t);if(I){let r=this[I];if(!e)return r;if(e===!0)return NI(r);if(i.isFunction(e))return e.call(this,r,I);if(i.isRegExp(e))return e.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=eA(t),t){let I=i.findKey(this,t);return!!(I&&this[I]!==void 0&&(!e||_A(this,this[I],I,e)))}return!1}delete(t,e){let I=this,r=!1;function g(o){if(o=eA(o),o){let C=i.findKey(I,o);C&&(!e||_A(I,I[C],C,e))&&(delete I[C],r=!0)}}return i.isArray(t)?t.forEach(g):g(t),r}clear(t){let e=Object.keys(this),I=e.length,r=!1;for(;I--;){let g=e[I];(!t||_A(this,this[g],g,t,!0))&&(delete this[g],r=!0)}return r}normalize(t){let e=this,I={};return i.forEach(this,(r,g)=>{let o=i.findKey(I,g);if(o){e[o]=SA(r),delete e[g];return}let C=t?GI(g):String(g).trim();C!==g&&delete e[g],e[C]=SA(r),I[C]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let e=Object.create(null);return i.forEach(this,(I,r)=>{I!=null&&I!==!1&&(e[r]=t&&i.isArray(I)?I.join(", "):I)}),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,e])=>t+": "+e).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){let I=new this(t);return e.forEach(r=>I.set(r)),I}static accessor(t){let I=(this[Kt]=this[Kt]={accessors:{}}).accessors,r=this.prototype;function g(o){let C=eA(o);I[C]||(kI(r,o),I[C]=!0)}return i.isArray(t)?t.forEach(g):g(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);i.reduceDescriptors(V.prototype,({value:A},t)=>{let e=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(I){this[e]=I}}});i.freezeMethods(V);var S=V;function IA(A,t){let e=this||Z,I=t||e,r=S.from(I.headers),g=I.data;return i.forEach(A,function(C){g=C.call(e,g,r.normalize(),t?t.status:void 0)}),r.normalize(),g}function rA(A){return!!(A&&A.__CANCEL__)}function Tt(A,t,e){u.call(this,A??"canceled",u.ERR_CANCELED,t,e),this.name="CanceledError"}i.inherits(Tt,u,{__CANCEL__:!0});var L=Tt;function gA(A,t,e){let I=e.config.validateStatus;!e.status||!I||I(e.status)?A(e):t(new u("Request failed with status code "+e.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}function zA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function LI(A,t){A=A||10;let e=new Array(A),I=new Array(A),r=0,g=0,o;return t=t!==void 0?t:1e3,function(E){let a=Date.now(),s=I[g];o||(o=a),e[r]=E,I[r]=a;let n=g,f=0;for(;n!==r;)f+=e[n++],n=n%A;if(r=(r+1)%A,r===g&&(g=(g+1)%A),a-o<t)return;let B=s&&a-s;return B?Math.round(f*1e3/B):void 0}}var Ot=LI;function bI(A,t){let e=0,I=1e3/t,r,g,o=(a,s=Date.now())=>{e=s,r=null,g&&(clearTimeout(g),g=null),A.apply(null,a)};return[(...a)=>{let s=Date.now(),n=s-e;n>=I?o(a,s):(r=a,g||(g=setTimeout(()=>{g=null,o(r)},I-n)))},()=>r&&o(r)]}var xt=bI;var X=(A,t,e=3)=>{let I=0,r=Ot(50,250);return xt(g=>{let o=g.loaded,C=g.lengthComputable?g.total:void 0,E=o-I,a=r(E),s=o<=C;I=o;let n={loaded:o,total:C,progress:C?o/C:void 0,bytes:E,rate:a||void 0,estimated:a&&C&&s?(C-o)/a:void 0,event:g,lengthComputable:C!=null,[t?"download":"upload"]:!0};A(n)},e)},vA=(A,t)=>{let e=A!=null;return[I=>t[0]({lengthComputable:e,total:A,loaded:I}),t[1]]},$A=A=>(...t)=>i.asap(()=>A(...t));var Pt=y.hasStandardBrowserEnv?((A,t)=>e=>(e=new URL(e,y.origin),A.protocol===e.protocol&&A.host===e.host&&(t||A.port===e.port)))(new URL(y.origin),y.navigator&&/(msie|trident)/i.test(y.navigator.userAgent)):()=>!0;var Wt=y.hasStandardBrowserEnv?{write(A,t,e,I,r,g){let o=[A+"="+encodeURIComponent(t)];i.isNumber(e)&&o.push("expires="+new Date(e).toGMTString()),i.isString(I)&&o.push("path="+I),i.isString(r)&&o.push("domain="+r),g===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function At(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function tt(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function oA(A,t,e){let I=!At(t);return A&&I||e==!1?tt(A,t):t}var jt=A=>A instanceof S?{...A}:A;function k(A,t){t=t||{};let e={};function I(a,s,n,f){return i.isPlainObject(a)&&i.isPlainObject(s)?i.merge.call({caseless:f},a,s):i.isPlainObject(s)?i.merge({},s):i.isArray(s)?s.slice():s}function r(a,s,n,f){if(i.isUndefined(s)){if(!i.isUndefined(a))return I(void 0,a,n,f)}else return I(a,s,n,f)}function g(a,s){if(!i.isUndefined(s))return I(void 0,s)}function o(a,s){if(i.isUndefined(s)){if(!i.isUndefined(a))return I(void 0,a)}else return I(void 0,s)}function C(a,s,n){if(n in t)return I(a,s);if(n in A)return I(void 0,a)}let E={url:g,method:g,data:g,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:C,headers:(a,s,n)=>r(jt(a),jt(s),n,!0)};return i.forEach(Object.keys(Object.assign({},A,t)),function(s){let n=E[s]||r,f=n(A[s],t[s],s);i.isUndefined(f)&&n!==C||(e[s]=f)}),e}var FA=A=>{let t=k({},A),{data:e,withXSRFToken:I,xsrfHeaderName:r,xsrfCookieName:g,headers:o,auth:C}=t;t.headers=o=S.from(o),t.url=tA(oA(t.baseURL,t.url),A.params,A.paramsSerializer),C&&o.set("Authorization","Basic "+btoa((C.username||"")+":"+(C.password?unescape(encodeURIComponent(C.password)):"")));let E;if(i.isFormData(e)){if(y.hasStandardBrowserEnv||y.hasStandardBrowserWebWorkerEnv)o.setContentType(void 0);else if((E=o.getContentType())!==!1){let[a,...s]=E?E.split(";").map(n=>n.trim()).filter(Boolean):[];o.setContentType([a||"multipart/form-data",...s].join("; "))}}if(y.hasStandardBrowserEnv&&(I&&i.isFunction(I)&&(I=I(t)),I||I!==!1&&Pt(t.url))){let a=r&&g&&Wt.read(g);a&&o.set(r,a)}return t};var JI=typeof XMLHttpRequest<"u",Zt=JI&&function(A){return new Promise(function(e,I){let r=FA(A),g=r.data,o=S.from(r.headers).normalize(),{responseType:C,onUploadProgress:E,onDownloadProgress:a}=r,s,n,f,B,Q;function l(){B&&B(),Q&&Q(),r.cancelToken&&r.cancelToken.unsubscribe(s),r.signal&&r.signal.removeEventListener("abort",s)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function d(){if(!c)return;let m=S.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),R={data:!C||C==="text"||C==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:m,config:A,request:c};gA(function(T){e(T),l()},function(T){I(T),l()},R),c=null}"onloadend"in c?c.onloadend=d:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(d)},c.onabort=function(){c&&(I(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){I(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let H=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",R=r.transitional||wA;r.timeoutErrorMessage&&(H=r.timeoutErrorMessage),I(new u(H,R.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},g===void 0&&o.setContentType(null),"setRequestHeader"in c&&i.forEach(o.toJSON(),function(H,R){c.setRequestHeader(R,H)}),i.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),C&&C!=="json"&&(c.responseType=r.responseType),a&&([f,Q]=X(a,!0),c.addEventListener("progress",f)),E&&c.upload&&([n,B]=X(E),c.upload.addEventListener("progress",n),c.upload.addEventListener("loadend",B)),(r.cancelToken||r.signal)&&(s=m=>{c&&(I(!m||m.type?new L(null,A,c):m),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(s),r.signal&&(r.signal.aborted?s():r.signal.addEventListener("abort",s)));let h=zA(r.url);if(h&&y.protocols.indexOf(h)===-1){I(new u("Unsupported protocol "+h+":",u.ERR_BAD_REQUEST,A));return}c.send(g||null)})};var HI=(A,t)=>{let{length:e}=A=A?A.filter(Boolean):[];if(t||e){let I=new AbortController,r,g=function(a){if(!r){r=!0,C();let s=a instanceof Error?a:this.reason;I.abort(s instanceof u?s:new L(s instanceof Error?s.message:s))}},o=t&&setTimeout(()=>{o=null,g(new u(`timeout ${t} of ms exceeded`,u.ETIMEDOUT))},t),C=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(a=>{a.unsubscribe?a.unsubscribe(g):a.removeEventListener("abort",g)}),A=null)};A.forEach(a=>a.addEventListener("abort",g));let{signal:E}=I;return E.unsubscribe=()=>i.asap(C),E}},Vt=HI;var YI=function*(A,t){let e=A.byteLength;if(!t||e<t){yield A;return}let I=0,r;for(;I<e;)r=I+t,yield A.slice(I,r),I=r},qI=async function*(A,t){for await(let e of MI(A))yield*YI(e,t)},MI=async function*(A){if(A[Symbol.asyncIterator]){yield*A;return}let t=A.getReader();try{for(;;){let{done:e,value:I}=await t.read();if(e)break;yield I}}finally{await t.cancel()}},et=(A,t,e,I)=>{let r=qI(A,t),g=0,o,C=E=>{o||(o=!0,I&&I(E))};return new ReadableStream({async pull(E){try{let{done:a,value:s}=await r.next();if(a){C(),E.close();return}let n=s.byteLength;if(e){let f=g+=n;e(f)}E.enqueue(new Uint8Array(s))}catch(a){throw C(a),a}},cancel(E){return C(E),r.return()}},{highWaterMark:2})};var NA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",_t=NA&&typeof ReadableStream=="function",KI=NA&&(typeof TextEncoder=="function"?(A=>t=>A.encode(t))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),zt=(A,...t)=>{try{return!!A(...t)}catch{return!1}},TI=_t&&zt(()=>{let A=!1,t=new Request(y.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!t}),Xt=64*1024,It=_t&&zt(()=>i.isReadableStream(new Response("").body)),RA={stream:It&&(A=>A.body)};NA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!RA[t]&&(RA[t]=i.isFunction(A[t])?e=>e[t]():(e,I)=>{throw new u(`Response type \'${t}\' is not supported`,u.ERR_NOT_SUPPORT,I)})})})(new Response);var OI=async A=>{if(A==null)return 0;if(i.isBlob(A))return A.size;if(i.isSpecCompliantForm(A))return(await new Request(y.origin,{method:"POST",body:A}).arrayBuffer()).byteLength;if(i.isArrayBufferView(A)||i.isArrayBuffer(A))return A.byteLength;if(i.isURLSearchParams(A)&&(A=A+""),i.isString(A))return(await KI(A)).byteLength},xI=async(A,t)=>{let e=i.toFiniteNumber(A.getContentLength());return e??OI(t)},vt=NA&&(async A=>{let{url:t,method:e,data:I,signal:r,cancelToken:g,timeout:o,onDownloadProgress:C,onUploadProgress:E,responseType:a,headers:s,withCredentials:n="same-origin",fetchOptions:f}=FA(A);a=a?(a+"").toLowerCase():"text";let B=Vt([r,g&&g.toAbortSignal()],o),Q,l=B&&B.unsubscribe&&(()=>{B.unsubscribe()}),c;try{if(E&&TI&&e!=="get"&&e!=="head"&&(c=await xI(s,I))!==0){let R=new Request(t,{method:"POST",body:I,duplex:"half"}),q;if(i.isFormData(I)&&(q=R.headers.get("content-type"))&&s.setContentType(q),R.body){let[T,BA]=vA(c,X($A(E)));I=et(R.body,Xt,T,BA)}}i.isString(n)||(n=n?"include":"omit");let d="credentials"in Request.prototype;Q=new Request(t,{...f,signal:B,method:e.toUpperCase(),headers:s.normalize().toJSON(),body:I,duplex:"half",credentials:d?n:void 0});let h=await fetch(Q),m=It&&(a==="stream"||a==="response");if(It&&(C||m&&l)){let R={};["status","statusText","headers"].forEach(at=>{R[at]=h[at]});let q=i.toFiniteNumber(h.headers.get("content-length")),[T,BA]=C&&vA(q,X($A(C),!0))||[];h=new Response(et(h.body,Xt,T,()=>{BA&&BA(),l&&l()}),R)}a=a||"text";let H=await RA[i.findKey(RA,a)||"text"](h,A);return!m&&l&&l(),await new Promise((R,q)=>{gA(R,q,{data:H,headers:S.from(h.headers),status:h.status,statusText:h.statusText,config:A,request:Q})})}catch(d){throw l&&l(),d&&d.name==="TypeError"&&/fetch/i.test(d.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,Q),{cause:d.cause||d}):u.from(d,d&&d.code,A,Q)}});var rt={http:yA,xhr:Zt,fetch:vt};i.forEach(rt,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var $t=A=>`- ${A}`,PI=A=>i.isFunction(A)||A===null||A===!1,UA={getAdapter:A=>{A=i.isArray(A)?A:[A];let{length:t}=A,e,I,r={};for(let g=0;g<t;g++){e=A[g];let o;if(I=e,!PI(e)&&(I=rt[(o=String(e)).toLowerCase()],I===void 0))throw new u(`Unknown adapter \'${o}\'`);if(I)break;r[o||"%23"+g]=I}if(!I){let g=Object.entries(r).map(([C,E])=>`adapter ${C} `+(E===!1?"is not supported by the environment":"is not available in the build")),o=t?g.length>1?`since :%0A`+g.map($t).join(`%0A`):" "+$t(g[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return I},adapters:rt};function gt(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new L(null,A)}function GA(A){return gt(A),A.headers=S.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),UA.getAdapter(A.adapter||Z.adapter)(A).then(function(I){return gt(A),I.data=IA.call(A,A.transformResponse,I),I.headers=S.from(I.headers),I},function(I){return rA(I)||(gt(A),I&&I.response&&(I.response.data=IA.call(A,A.transformResponse,I.response),I.response.headers=S.from(I.response.headers))),Promise.reject(I)})}var kA="1.8.2";var LA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{LA[A]=function(I){return typeof I===A||"a"+(t<1?"n ":" ")+A}});var Ae={};LA.transitional=function(t,e,I){function r(g,o){return"[Axios v"+kA+"] Transitional option \'"+g+"\'"+o+(I?". "+I:"")}return(g,o,C)=>{if(t===!1)throw new u(r(o," has been removed"+(e?" in "+e:"")),u.ERR_DEPRECATED);return e&&!Ae[o]&&(Ae[o]=!0,console.warn(r(o," has been deprecated since v"+e+" and will be removed in the near future"))),t?t(g,o,C):!0}};LA.spelling=function(t){return(e,I)=>(console.warn(`${I} is likely a misspelling of ${t}`),!0)};function WI(A,t,e){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let g=I[r],o=t[g];if(o){let C=A[g],E=C===void 0||o(C,g,A);if(E!==!0)throw new u("option "+g+" must be "+E,u.ERR_BAD_OPTION_VALUE);continue}if(e!==!0)throw new u("Unknown option "+g,u.ERR_BAD_OPTION)}}var iA={assertOptions:WI,validators:LA};var b=iA.validators,_=class{constructor(t){this.defaults=t,this.interceptors={request:new PA,response:new PA}}async request(t,e){try{return await this._request(t,e)}catch(I){if(I instanceof Error){let r={};Error.captureStackTrace?Error.captureStackTrace(r):r=new Error;let g=r.stack?r.stack.replace(/^.+\\n/,""):"";try{I.stack?g&&!String(I.stack).endsWith(g.replace(/^.+\\n.+\\n/,""))&&(I.stack+=`%0A`+g):I.stack=g}catch{}}throw I}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=k(this.defaults,e);let{transitional:I,paramsSerializer:r,headers:g}=e;I!==void 0&&iA.assertOptions(I,{silentJSONParsing:b.transitional(b.boolean),forcedJSONParsing:b.transitional(b.boolean),clarifyTimeoutError:b.transitional(b.boolean)},!1),r!=null&&(i.isFunction(r)?e.paramsSerializer={serialize:r}:iA.assertOptions(r,{encode:b.function,serialize:b.function},!0)),e.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?e.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:e.allowAbsoluteUrls=!0),iA.assertOptions(e,{baseUrl:b.spelling("baseURL"),withXsrfToken:b.spelling("withXSRFToken")},!0),e.method=(e.method||this.defaults.method||"get").toLowerCase();let o=g&&i.merge(g.common,g[e.method]);g&&i.forEach(["delete","get","head","post","put","patch","common"],Q=>{delete g[Q]}),e.headers=S.concat(o,g);let C=[],E=!0;this.interceptors.request.forEach(function(l){typeof l.runWhen=="function"&&l.runWhen(e)===!1||(E=E&&l.synchronous,C.unshift(l.fulfilled,l.rejected))});let a=[];this.interceptors.response.forEach(function(l){a.push(l.fulfilled,l.rejected)});let s,n=0,f;if(!E){let Q=[GA.bind(this),void 0];for(Q.unshift.apply(Q,C),Q.push.apply(Q,a),f=Q.length,s=Promise.resolve(e);n<f;)s=s.then(Q[n++],Q[n++]);return s}f=C.length;let B=e;for(n=0;n<f;){let Q=C[n++],l=C[n++];try{B=Q(B)}catch(c){l.call(this,c);break}}try{s=GA.call(this,B)}catch(Q){return Promise.reject(Q)}for(n=0,f=a.length;n<f;)s=s.then(a[n++],a[n++]);return s}getUri(t){t=k(this.defaults,t);let e=oA(t.baseURL,t.url,t.allowAbsoluteUrls);return tA(e,t.params,t.paramsSerializer)}};i.forEach(["delete","get","head","options"],function(t){_.prototype[t]=function(e,I){return this.request(k(I||{},{method:t,url:e,data:(I||{}).data}))}});i.forEach(["post","put","patch"],function(t){function e(I){return function(g,o,C){return this.request(k(C||{},{method:t,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:o}))}}_.prototype[t]=e(),_.prototype[t+"Form"]=e(!0)});var sA=_;var ot=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let e;this.promise=new Promise(function(g){e=g});let I=this;this.promise.then(r=>{if(!I._listeners)return;let g=I._listeners.length;for(;g-- >0;)I._listeners[g](r);I._listeners=null}),this.promise.then=r=>{let g,o=new Promise(C=>{I.subscribe(C),g=C}).then(r);return o.cancel=function(){I.unsubscribe(g)},o},t(function(g,o,C){I.reason||(I.reason=new L(g,o,C),e(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let e=this._listeners.indexOf(t);e!==-1&&this._listeners.splice(e,1)}toAbortSignal(){let t=new AbortController,e=I=>{t.abort(I)};return this.subscribe(e),t.signal.unsubscribe=()=>this.unsubscribe(e),t.signal}static source(){let t;return{token:new A(function(r){t=r}),cancel:t}}},te=ot;function it(A){return function(e){return A.apply(null,e)}}function st(A){return i.isObject(A)&&A.isAxiosError===!0}var nt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(nt).forEach(([A,t])=>{nt[t]=A});var ee=nt;function Ie(A){let t=new sA(A),e=v(sA.prototype.request,t);return i.extend(e,sA.prototype,t,{allOwnKeys:!0}),i.extend(e,t,null,{allOwnKeys:!0}),e.create=function(r){return Ie(k(A,r))},e}var w=Ie(Z);w.Axios=sA;w.CanceledError=L;w.CancelToken=te;w.isCancel=rA;w.VERSION=kA;w.toFormData=M;w.AxiosError=u;w.Cancel=w.CanceledError;w.all=function(t){return Promise.all(t)};w.spread=it;w.isAxiosError=st;w.mergeConfig=k;w.AxiosHeaders=S;w.formToJSON=A=>pA(i.isHTMLForm(A)?new FormData(A):A);w.getAdapter=UA.getAdapter;w.HttpStatusCode=ee;w.default=w;var bA=w;var{Axios:Bi,AxiosError:ai,CanceledError:Qi,isCancel:Ei,CancelToken:ci,VERSION:fi,all:li,Cancel:ui,isAxiosError:Di,spread:di,toFormData:hi,AxiosHeaders:yi,HttpStatusCode:mi,formToJSON:wi,getAdapter:pi,mergeConfig:Si}=bA;var nA,Y,Bt,Ct={env:{emscripten_notify_memory_growth:function(A){Bt=new Uint8Array(Y.exports.memory.buffer)}}},JA=class{init(){return nA||(typeof fetch<"u"?nA=fetch("data:application/wasm;base64,"+re).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,Ct)).then(this._init):nA=WebAssembly.instantiate(Buffer.from(re,"base64"),Ct).then(this._init),nA)}_init(t){Y=t.instance,Ct.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=t.byteLength,r=Y.exports.malloc(I);Bt.set(t,r),e=e||Number(Y.exports.ZSTD_findDecompressedSize(r,I));let g=Y.exports.malloc(e),o=Y.exports.ZSTD_decompress(g,e,r,I),C=Bt.slice(g,g+o);return Y.exports.free(r),Y.exports.free(g),C}},re="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var ge=new JA,oe=!1;async function jI(A,t,e){let I=null;typeof A!="string"?I=A.href:A.startsWith("http")?I=A:I=`${t}/${A}`,I.endsWith(".js")&&(I=I.substring(0,I.length-3)),I.endsWith(".wasm")&&(I=I.substring(0,I.length-5)),I.endsWith(".wasm.zst")&&(I=I.substring(0,I.length-9));let r=`${I}.wasm`,g=await bA.get(`${r}.zst`,{responseType:"arraybuffer",params:e});oe||(await ge.init(),oe=!0);let C=ge.decode(new Uint8Array(g.data)).buffer;return(await import(`${I}.js`)).default({wasmBinary:C})}var ie=jI;var HA=new Map;async function ZI(A,t,e){let I=A,r=A,g=null;return typeof A!="string"&&(I=new URL(A.href),r=I.href),HA.has(r)?g=await HA.get(r):(HA.set(r,ie(I,t,e)),g=await HA.get(r)),g}var se=ZI;var VI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},D=VI;var XI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},N=XI;var _I={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},z=_I;function zI(A,t){let e=null;switch(A){case N.UInt8:{e=new Uint8Array(t);break}case N.Int8:{e=new Int8Array(t);break}case N.UInt16:{e=new Uint16Array(t);break}case N.Int16:{e=new Int16Array(t);break}case N.UInt32:{e=new Uint32Array(t);break}case N.Int32:{e=new Int32Array(t);break}case N.UInt64:{typeof globalThis.BigUint64Array=="function"?e=new BigUint64Array(t):e=new Uint8Array(t);break}case N.Int64:{typeof globalThis.BigInt64Array=="function"?e=new BigInt64Array(t):e=new Uint8Array(t);break}case z.Float32:{e=new Float32Array(t);break}case z.Float64:{e=new Float64Array(t);break}case"null":{e=null;break}case null:{e=null;break}default:throw new Error("Type is not supported as a TypedArray")}return e}var J=zI;var Be=typeof globalThis.SharedArrayBuffer=="function",ne=new TextEncoder,Ce=new TextDecoder("utf-8");function vI(A,t){let e={flags:"r",encoding:"binary"},I=A.fs_open(t,e.flags),g=A.fs_stat(t).size,o=null;Be?o=new SharedArrayBuffer(g):o=new ArrayBuffer(g);let C=new Uint8Array(o);return A.fs_read(I,C,0,g,0),A.fs_close(I),C}function ae(A,t,e){let I=null;Be?I=new SharedArrayBuffer(e):I=new ArrayBuffer(e);let r=new Uint8Array(I),g=new Uint8Array(A.HEAPU8.buffer,t,e);return r.set(g),r}function p(A,t,e,I){let r=0;return t!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,e,I,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),r)),r}function K(A,t,e){let I=JSON.stringify(t),r=A.lengthBytesUTF8(I)+1,g=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,e,r]);A.stringToUTF8(I,g,r)}function F(A,t,e,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,e]),g=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,e]),o=ae(A,r,g);return J(I,o.buffer)}function CA(A,t){let e=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),I=A.UTF8ToString(e);return JSON.parse(I)}function $I(A,t,e,I){I!=null&&I.length>0&&I.forEach(function(a,s){switch(a.type){case D.TextStream:{let n=ne.encode(a.data.data),f=p(A,n,s,0),B={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};K(A,B,s);break}case D.JsonCompatible:{let n=ne.encode(JSON.stringify(a.data)),f=p(A,n,s,0),B={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};K(A,B,s);break}case D.BinaryStream:{let n=a.data.data,f=p(A,n,s,0),B={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};K(A,B,s);break}case D.TextFile:{A.fs_writeFile(a.data.path,a.data.data);break}case D.BinaryFile:{A.fs_writeFile(a.data.path,a.data.data);break}case D.Image:{let n=a.data,f=p(A,n.data,s,0),B=p(A,n.direction,s,1),Q=typeof n.metadata?.entries<"u"?Array.from(n.metadata.entries()):[],l={imageType:n.imageType,name:n.name,origin:n.origin,spacing:n.spacing,direction:`data:application/vnd.itk.address,0:${B}`,size:n.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:Q};K(A,l,s);break}case D.Mesh:{let n=a.data,f=p(A,n.points,s,0),B=p(A,n.cells,s,1),Q=p(A,n.pointData,s,2),l=p(A,n.cellData,s,3),c={meshType:n.meshType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:n.numberOfCells,cells:`data:application/vnd.itk.address,0:${B}`,cellBufferSize:n.cellBufferSize,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${Q}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${l}`};K(A,c,s);break}case D.PointSet:{let n=a.data,f=p(A,n.points,s,0),B=p(A,n.pointData,s,1),Q={pointSetType:n.pointSetType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`};K(A,Q,s);break}case D.TransformList:{let n=a.data,f=[];n.forEach((B,Q)=>{let c=`data:application/vnd.itk.address,0:${p(A,B.fixedParameters,s,Q*2)}`,h=`data:application/vnd.itk.address,0:${p(A,B.parameters,s,Q*2+1)}`,m={transformType:B.transformType,numberOfFixedParameters:B.numberOfFixedParameters,numberOfParameters:B.numberOfParameters,name:B.name,inputSpaceName:B.inputSpaceName,outputSpaceName:B.outputSpaceName,parameters:h,fixedParameters:c};f.push(m)}),K(A,f,s);break}case D.PolyData:{let n=a.data,f=p(A,n.points,s,0),B=p(A,n.vertices,s,1),Q=p(A,n.lines,s,2),l=p(A,n.polygons,s,3),c=p(A,n.triangleStrips,s,4),d=p(A,n.pointData,s,5),h=p(A,n.pointData,s,6),m={polyDataType:n.polyDataType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:n.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${B}`,linesBufferSize:n.linesBufferSize,lines:`data:application/vnd.itk.address,0:${Q}`,polygonsBufferSize:n.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${l}`,triangleStripsBufferSize:n.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${d}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${h}`};K(A,m,s);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),g=0;try{g=A.callMain(t.slice())}catch(a){throw typeof a=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(a)):console.error("Build module in Debug mode for exception message information.")),a}finally{A.stackRestore(r)}let o=A.getModuleStdout(),C=A.getModuleStderr(),E=[];return e!=null&&e.length>0&&g===0&&e.forEach(function(a,s){let n=null;switch(a.type){case D.TextStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),l=new Uint8Array(A.HEAPU8.buffer,B,Q);n={data:Ce.decode(l)};break}case D.JsonCompatible:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),l=new Uint8Array(A.HEAPU8.buffer,B,Q);n=JSON.parse(Ce.decode(l));break}case D.BinaryStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]);n={data:ae(A,B,Q)};break}case D.TextFile:{n={path:a.data.path,data:A.fs_readFile(a.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{n={path:a.data.path,data:vI(A,a.data.path)};break}case D.Image:{let B=CA(A,s);B.data=F(A,s,0,B.imageType.componentType),B.direction=F(A,s,1,z.Float64),B.metadata=new Map(B.metadata),n=B;break}case D.Mesh:{let B=CA(A,s);B.numberOfPoints>0?B.points=F(A,s,0,B.meshType.pointComponentType):B.points=J(B.meshType.pointComponentType,new ArrayBuffer(0)),B.numberOfCells>0?B.cells=F(A,s,1,B.meshType.cellComponentType):B.cells=J(B.meshType.cellComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,s,2,B.meshType.pointPixelComponentType):B.pointData=J(B.meshType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,s,3,B.meshType.cellPixelComponentType):B.cellData=J(B.meshType.cellPixelComponentType,new ArrayBuffer(0)),n=B;break}case D.PointSet:{let B=CA(A,s);B.numberOfPoints>0?B.points=F(A,s,0,B.pointSetType.pointComponentType):B.points=J(B.pointSetType.pointComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,s,1,B.pointSetType.pointPixelComponentType):B.pointData=J(B.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),n=B;break}case D.TransformList:{let B=CA(A,s);B.forEach((Q,l)=>{Q.numberOfFixedParameters>0&&(B[l].fixedParameters=F(A,s,l*2,Q.transformType.parametersValueType)),Q.numberOfFixedParameters>0&&(B[l].parameters=F(A,s,l*2+1,Q.transformType.parametersValueType))}),n=B;break}case D.PolyData:{let B=CA(A,s);B.numberOfPoints>0?B.points=F(A,s,0,z.Float32):B.points=new Float32Array,B.verticesBufferSize>0?B.vertices=F(A,s,1,N.UInt32):B.vertices=new Uint32Array,B.linesBufferSize>0?B.lines=F(A,s,2,N.UInt32):B.lines=new Uint32Array,B.polygonsBufferSize>0?B.polygons=F(A,s,3,N.UInt32):B.polygons=new Uint32Array,B.triangleStripsBufferSize>0?B.triangleStrips=F(A,s,4,N.UInt32):B.triangleStrips=new Uint32Array,B.numberOfPointPixels>0?B.pointData=F(A,s,5,B.polyDataType.pointPixelComponentType):B.pointData=J(B.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,s,6,B.polyDataType.cellPixelComponentType):B.cellData=J(B.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),n=B;break}default:throw Error("Unsupported output InterfaceType")}let f={type:a.type,data:n};E.push(f)}),{returnValue:g,stdout:o,stderr:C,outputs:E}}var Qe=$I;var Ar=typeof globalThis.SharedArrayBuffer<"u";function tr(A,t){if(A==null)return[];let e=[];for(let I=0;I<A.length;I++){let r=er(A[I],t);r!==null&&e.push(r)}return e}function er(A,t){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Ar&&e instanceof SharedArrayBuffer?null:t?e:e.slice(0)}var Ee=tr;function Ir(A){return[A.data,A.direction]}var ce=Ir;function rr(A){return[A.points,A.pointData,A.cells,A.cellData]}var fe=rr;function gr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var le=gr;async function or(A,t,e,I){let r=Qe(A,t,e,I),g=[];return r.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let C=o.data;g.push(C)}else if(o.type===D.Image){let C=o.data;g.push(...ce(C))}else if(o.type===D.Mesh){let C=o.data;g.push(...fe(C))}else if(o.type===D.PolyData){let C=o.data;g.push(...le(C))}}),MA(r,Ee(g,!0))}var ue=or;var ir={runPipeline:async function(A,t,e,I,r,g){let o=await se(A,t,g);return await ue(o,e,I,r)}};lA(ir);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';qr(vr);export{st as bioRadReadImage,gt as bioRadWriteImage,Xe as bmpReadImage,_e as bmpWriteImage,Z as extensionToImageIo,ht as fdfReadImage,An as fdfWriteImage,ft as gdcmReadImage,ct as gdcmWriteImage,Et as ge4ReadImage,pt as ge4WriteImage,mt as ge5ReadImage,ut as ge5WriteImage,lt as geAdwReadImage,Qt as geAdwWriteImage,y as getDefaultWebWorker,f as getPipelineWorkerUrl,d as getPipelinesBaseUrl,Bt as giplReadImage,Ct as giplWriteImage,$e as hdf5ReadImage,At as hdf5WriteImage,Ke as jpegReadImage,je as jpegWriteImage,ot as lsmReadImage,at as lsmWriteImage,xe as metaReadImage,Me as metaWriteImage,nt as mghReadImage,It as mghWriteImage,et as mincReadImage,tt as mincWriteImage,rt as mrcReadImage,it as mrcWriteImage,Ye as niftiReadImage,qe as niftiWriteImage,ve as nrrdReadImage,Ve as nrrdWriteImage,Je as pngReadImage,Pe as pngWriteImage,Ft as readImage,za as readImageFileSeries,$o as readImageHttp,dt as scancoReadImage,yt as scancoWriteImage,IC as setDefaultWebWorker,qr as setPipelineWorkerUrl,eC as setPipelinesBaseUrl,Te as tiffReadImage,He as tiffWriteImage,Ze as vtkReadImage,ze as vtkWriteImage,wt as wasmReadImage,Dt as wasmWriteImage,Rt as wasmZstdReadImage,kt as wasmZstdWriteImage,_a as writeImage};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
