# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Xt=Object.defineProperty;var zt=(A,e)=>{for(var I in e)Xt(A,I,{get:e[I],enumerable:!0})};var _t="5.4.0",WA=_t;var $t={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},d=$t;var AI={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},R=AI;function eI(A,e){let I=null;switch(A){case d.UInt8:{I=new Uint8Array(e);break}case d.Int8:{I=new Int8Array(e);break}case d.UInt16:{I=new Uint16Array(e);break}case d.Int16:{I=new Int16Array(e);break}case d.UInt32:{I=new Uint32Array(e);break}case d.Int32:{I=new Int32Array(e);break}case d.UInt64:{typeof globalThis.BigUint64Array=="function"?I=new BigUint64Array(e):I=new Uint8Array(e);break}case d.Int64:{typeof globalThis.BigInt64Array=="function"?I=new BigInt64Array(e):I=new Uint8Array(e);break}case R.Float32:{I=new Float32Array(e);break}case R.Float64:{I=new Float64Array(e);break}case"null":{I=null;break}case null:{I=null;break}default:throw new Error("Type is not supported as a TypedArray")}return I}var J=eI;var tI={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},k=tI;var jA=class{dimension;componentType;pixelType;components;constructor(e=2,I=d.UInt8,t=k.Scalar,r=1){this.dimension=e,this.componentType=I,this.pixelType=t,this.components=r}},Ge=jA;function II(A,e,I,t,r){A[t+I*e]=r}var be=II;var vA=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(e=new Ge){this.imageType=e;let I=e.dimension;this.origin=new Array(I),this.origin.fill(0),this.spacing=new Array(I),this.spacing.fill(1),this.direction=new Float64Array(I*I),this.direction.fill(0);for(let t=0;t<I;t++)be(this.direction,I,t,t,1);this.size=new Array(I),this.size.fill(0),this.metadata=new Map,this.data=null}},Le=vA;function rI(A,e){let I={...A.imageType};if(typeof e<"u"&&typeof e.pixelType<"u"&&(I.pixelType=e.pixelType,e.pixelType===k.Scalar&&I.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType&&(I.componentType=e.componentType);let t=new Le(I);if(t.name=A.name,t.origin=Array.from(A.origin),t.spacing=Array.from(A.spacing),t.direction=A.direction.slice(),t.size=Array.from(A.size),t.metadata=new Map(JSON.parse(JSON.stringify(Array.from(A.metadata)))),A.data!==null)if(typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType)switch(A.imageType.componentType){case d.UInt8:case d.Int8:case d.UInt16:case d.Int16:case d.UInt32:case d.Int32:case R.Float32:case R.Float64:switch(t.imageType.componentType){case d.UInt8:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Uint8Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Uint8Array(A.data);break;case d.Int8:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Int8Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Int8Array(A.data);break;case d.UInt16:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Uint16Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Uint16Array(A.data);break;case d.Int16:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Int16Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Int16Array(A.data);break;case d.UInt32:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Uint32Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Uint32Array(A.data);break;case d.Int32:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Int32Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Int32Array(A.data);break;case R.Float32:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Float32Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Float32Array(A.data);break;case R.Float64:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array){t.data=new Float64Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r])}else t.data=new Float64Array(A.data);break;case d.UInt64:t.data=new BigUint64Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=BigInt.asIntN(64,BigInt(A.data[r]));break;case d.Int64:t.data=new BigInt64Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=BigInt.asUintN(64,BigInt(A.data[r]));break}break;case d.UInt64:case d.Int64:switch(t.imageType.componentType){case d.UInt8:t.data=new Uint8Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case d.Int8:t.data=new Int8Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case d.UInt16:t.data=new Uint16Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case d.Int16:t.data=new Int16Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case d.UInt32:t.data=new Uint32Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case d.Int32:t.data=new Int32Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case R.Float32:t.data=new Float32Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case R.Float64:t.data=new Float64Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=Number(A.data[r]);break;case d.UInt64:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array)t.data=new BigUint64Array(A.data);else{t.data=new BigUint64Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=BigInt.asUintN(64,BigInt(A.data[r]))}break;case d.Int64:if(A.data instanceof BigInt64Array||A.data instanceof BigUint64Array)t.data=new BigInt64Array(A.data);else{t.data=new BigInt64Array(A.data.length);for(let r=0;r<t.data.length;r++)t.data[r]=BigInt.asIntN(64,BigInt(A.data[r]))}break}break}else{let r=A.data.constructor;t.data=new r(A.data.length),t.data!=null&&t.data.set(A.data,0)}return t}var uA=rI;var gI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},y=gI;var Me=Symbol("Comlink.proxy"),iI=Symbol("Comlink.endpoint"),XA=Symbol("Comlink.releaseProxy"),ZA=Symbol("Comlink.finalizer"),yA=Symbol("Comlink.thrown"),Ye=A=>typeof A=="object"&&A!==null||typeof A=="function",oI={canHandle:A=>Ye(A)&&A[Me],serialize(A){let{port1:e,port2:I}=new MessageChannel;return qe(A,e),[I,[I]]},deserialize(A){return A.start(),zA(A)}},aI={canHandle:A=>Ye(A)&&yA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},He=new Map([["proxy",oI],["throw",aI]]);function nI(A,e){for(let I of A)if(e===I||I==="*"||I instanceof RegExp&&I.test(e))return!0;return!1}function qe(A,e=globalThis,I=["*"]){e.addEventListener("message",function t(r){if(!r||!r.data)return;if(!nI(I,r.origin)){console.warn(`Invalid origin '${r.origin}' for comlink proxy`);return}let{id:g,type:i,path:B}=Object.assign({path:[]},r.data),Q=(r.data.argumentList||[]).map(P),C;try{let a=B.slice(0,-1).reduce((l,s)=>l[s],A),n=B.reduce((l,s)=>l[s],A);switch(i){case"GET":C=n;break;case"SET":a[B.slice(-1)[0]]=P(r.data.value),C=!0;break;case"APPLY":C=n.apply(a,Q);break;case"CONSTRUCT":{let l=new n(...Q);C=EI(l)}break;case"ENDPOINT":{let{port1:l,port2:s}=new MessageChannel;qe(A,s),C=_A(l,[l])}break;case"RELEASE":C=void 0;break;default:return}}catch(a){C={value:a,[yA]:0}}Promise.resolve(C).catch(a=>({value:a,[yA]:0})).then(a=>{let[n,l]=pA(a);e.postMessage(Object.assign(Object.assign({},n),{id:g}),l),i==="RELEASE"&&(e.removeEventListener("message",t),Te(e),ZA in A&&typeof A[ZA]=="function"&&A[ZA]())}).catch(a=>{let[n,l]=pA({value:new TypeError("Unserializable return value"),[yA]:0});e.postMessage(Object.assign(Object.assign({},n),{id:g}),l)})}),e.start&&e.start()}function sI(A){return A.constructor.name==="MessagePort"}function Te(A){sI(A)&&A.close()}function zA(A,e){return VA(A,[],e)}function dA(A){if(A)throw new Error("Proxy has been released and is not useable")}function xe(A){return j(A,{type:"RELEASE"}).then(()=>{Te(A)})}var hA=new WeakMap,DA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(hA.get(A)||0)-1;hA.set(A,e),e===0&&xe(A)});function BI(A,e){let I=(hA.get(e)||0)+1;hA.set(e,I),DA&&DA.register(A,e,A)}function CI(A){DA&&DA.unregister(A)}function VA(A,e=[],I=function(){}){let t=!1,r=new Proxy(I,{get(g,i){if(dA(t),i===XA)return()=>{CI(r),xe(A),t=!0};if(i==="then"){if(e.length===0)return{then:()=>r};let B=j(A,{type:"GET",path:e.map(Q=>Q.toString())}).then(P);return B.then.bind(B)}return VA(A,[...e,i])},set(g,i,B){dA(t);let[Q,C]=pA(B);return j(A,{type:"SET",path:[...e,i].map(a=>a.toString()),value:Q},C).then(P)},apply(g,i,B){dA(t);let Q=e[e.length-1];if(Q===iI)return j(A,{type:"ENDPOINT"}).then(P);if(Q==="bind")return VA(A,e.slice(0,-1));let[C,a]=Je(B);return j(A,{type:"APPLY",path:e.map(n=>n.toString()),argumentList:C},a).then(P)},construct(g,i){dA(t);let[B,Q]=Je(i);return j(A,{type:"CONSTRUCT",path:e.map(C=>C.toString()),argumentList:B},Q).then(P)}});return BI(r,A),r}function QI(A){return Array.prototype.concat.apply([],A)}function Je(A){let e=A.map(pA);return[e.map(I=>I[0]),QI(e.map(I=>I[1]))]}var Ke=new WeakMap;function _A(A,e){return Ke.set(A,e),A}function EI(A){return Object.assign(A,{[Me]:!0})}function pA(A){for(let[e,I]of He)if(I.canHandle(A)){let[t,r]=I.serialize(A);return[{type:"HANDLER",name:e,value:t},r]}return[{type:"RAW",value:A},Ke.get(A)||[]]}function P(A){switch(A.type){case"HANDLER":return He.get(A.name).deserialize(A.value);case"RAW":return A.value}}function j(A,e,I){return new Promise(t=>{let r=cI();A.addEventListener("message",function g(i){!i.data||!i.data.id||i.data.id!==r||(A.removeEventListener("message",g),t(i.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},e),I)})}function cI(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function tA(A,e){return function(){return A.apply(e,arguments)}}var{toString:lI}=Object.prototype,{getPrototypeOf:Ae}=Object,mA=(A=>e=>{let I=lI.call(e);return A[I]||(A[I]=I.slice(8,-1).toLowerCase())})(Object.create(null)),b=A=>(A=A.toLowerCase(),e=>mA(e)===A),SA=A=>e=>typeof e===A,{isArray:v}=Array,IA=SA("undefined");function fI(A){return A!==null&&!IA(A)&&A.constructor!==null&&!IA(A.constructor)&&G(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var We=b("ArrayBuffer");function uI(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&We(A.buffer),e}var dI=SA("string"),G=SA("function"),je=SA("number"),FA=A=>A!==null&&typeof A=="object",yI=A=>A===!0||A===!1,wA=A=>{if(mA(A)!=="object")return!1;let e=Ae(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},hI=b("Date"),DI=b("File"),pI=b("Blob"),wI=b("FileList"),mI=A=>FA(A)&&G(A.pipe),SI=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||G(A.append)&&((e=mA(A))==="formdata"||e==="object"&&G(A.toString)&&A.toString()==="[object FormData]"))},FI=b("URLSearchParams"),[RI,UI,NI,kI]=["ReadableStream","Request","Response","Headers"].map(b),GI=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function rA(A,e,{allOwnKeys:I=!1}={}){if(A===null||typeof A>"u")return;let t,r;if(typeof A!="object"&&(A=[A]),v(A))for(t=0,r=A.length;t<r;t++)e.call(null,A[t],t,A);else{let g=I?Object.getOwnPropertyNames(A):Object.keys(A),i=g.length,B;for(t=0;t<i;t++)B=g[t],e.call(null,A[B],B,A)}}function ve(A,e){e=e.toLowerCase();let I=Object.keys(A),t=I.length,r;for(;t-- >0;)if(r=I[t],e===r.toLowerCase())return r;return null}var W=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Ze=A=>!IA(A)&&A!==W;function $A(){let{caseless:A}=Ze(this)&&this||{},e={},I=(t,r)=>{let g=A&&ve(e,r)||r;wA(e[g])&&wA(t)?e[g]=$A(e[g],t):wA(t)?e[g]=$A({},t):v(t)?e[g]=t.slice():e[g]=t};for(let t=0,r=arguments.length;t<r;t++)arguments[t]&&rA(arguments[t],I);return e}var bI=(A,e,I,{allOwnKeys:t}={})=>(rA(e,(r,g)=>{I&&G(r)?A[g]=tA(r,I):A[g]=r},{allOwnKeys:t}),A),LI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),JI=(A,e,I,t)=>{A.prototype=Object.create(e.prototype,t),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),I&&Object.assign(A.prototype,I)},MI=(A,e,I,t)=>{let r,g,i,B={};if(e=e||{},A==null)return e;do{for(r=Object.getOwnPropertyNames(A),g=r.length;g-- >0;)i=r[g],(!t||t(i,A,e))&&!B[i]&&(e[i]=A[i],B[i]=!0);A=I!==!1&&Ae(A)}while(A&&(!I||I(A,e))&&A!==Object.prototype);return e},YI=(A,e,I)=>{A=String(A),(I===void 0||I>A.length)&&(I=A.length),I-=e.length;let t=A.indexOf(e,I);return t!==-1&&t===I},HI=A=>{if(!A)return null;if(v(A))return A;let e=A.length;if(!je(e))return null;let I=new Array(e);for(;e-- >0;)I[e]=A[e];return I},qI=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&Ae(Uint8Array)),TI=(A,e)=>{let t=(A&&A[Symbol.iterator]).call(A),r;for(;(r=t.next())&&!r.done;){let g=r.value;e.call(A,g[0],g[1])}},xI=(A,e)=>{let I,t=[];for(;(I=A.exec(e))!==null;)t.push(I);return t},KI=b("HTMLFormElement"),OI=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(I,t,r){return t.toUpperCase()+r}),Pe=(({hasOwnProperty:A})=>(e,I)=>A.call(e,I))(Object.prototype),PI=b("RegExp"),Ve=(A,e)=>{let I=Object.getOwnPropertyDescriptors(A),t={};rA(I,(r,g)=>{let i;(i=e(r,g,A))!==!1&&(t[g]=i||r)}),Object.defineProperties(A,t)},WI=A=>{Ve(A,(e,I)=>{if(G(A)&&["arguments","caller","callee"].indexOf(I)!==-1)return!1;let t=A[I];if(G(t)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+I+"'")})}})},jI=(A,e)=>{let I={},t=r=>{r.forEach(g=>{I[g]=!0})};return v(A)?t(A):t(String(A).split(e)),I},vI=()=>{},ZI=(A,e)=>A!=null&&Number.isFinite(A=+A)?A:e;function VI(A){return!!(A&&G(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var XI=A=>{let e=new Array(10),I=(t,r)=>{if(FA(t)){if(e.indexOf(t)>=0)return;if(!("toJSON"in t)){e[r]=t;let g=v(t)?[]:{};return rA(t,(i,B)=>{let Q=I(i,r+1);!IA(Q)&&(g[B]=Q)}),e[r]=void 0,g}}return t};return I(A,0)},zI=b("AsyncFunction"),_I=A=>A&&(FA(A)||G(A))&&G(A.then)&&G(A.catch),Xe=((A,e)=>A?setImmediate:e?((I,t)=>(W.addEventListener("message",({source:r,data:g})=>{r===W&&g===I&&t.length&&t.shift()()},!1),r=>{t.push(r),W.postMessage(I,"*")}))(`axios@${Math.random()}`,[]):I=>setTimeout(I))(typeof setImmediate=="function",G(W.postMessage)),$I=typeof queueMicrotask<"u"?queueMicrotask.bind(W):typeof process<"u"&&process.nextTick||Xe,o={isArray:v,isArrayBuffer:We,isBuffer:fI,isFormData:SI,isArrayBufferView:uI,isString:dI,isNumber:je,isBoolean:yI,isObject:FA,isPlainObject:wA,isReadableStream:RI,isRequest:UI,isResponse:NI,isHeaders:kI,isUndefined:IA,isDate:hI,isFile:DI,isBlob:pI,isRegExp:PI,isFunction:G,isStream:mI,isURLSearchParams:FI,isTypedArray:qI,isFileList:wI,forEach:rA,merge:$A,extend:bI,trim:GI,stripBOM:LI,inherits:JI,toFlatObject:MI,kindOf:mA,kindOfTest:b,endsWith:YI,toArray:HI,forEachEntry:TI,matchAll:xI,isHTMLForm:KI,hasOwnProperty:Pe,hasOwnProp:Pe,reduceDescriptors:Ve,freezeMethods:WI,toObjectSet:jI,toCamelCase:OI,noop:vI,toFiniteNumber:ZI,findKey:ve,global:W,isContextDefined:Ze,isSpecCompliantForm:VI,toJSONObject:XI,isAsyncFn:zI,isThenable:_I,setImmediate:Xe,asap:$I};function Z(A,e,I,t,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),I&&(this.config=I),t&&(this.request=t),r&&(this.response=r,this.status=r.status?r.status:null)}o.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:o.toJSONObject(this.config),code:this.code,status:this.status}}});var ze=Z.prototype,_e={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{_e[A]={value:A}});Object.defineProperties(Z,_e);Object.defineProperty(ze,"isAxiosError",{value:!0});Z.from=(A,e,I,t,r,g)=>{let i=Object.create(ze);return o.toFlatObject(A,i,function(Q){return Q!==Error.prototype},B=>B!=="isAxiosError"),Z.call(i,A.message,e,I,t,r),i.cause=A,i.name=A.name,g&&Object.assign(i,g),i};var u=Z;var RA=null;function ee(A){return o.isPlainObject(A)||o.isArray(A)}function At(A){return o.endsWith(A,"[]")?A.slice(0,-2):A}function $e(A,e,I){return A?A.concat(e).map(function(r,g){return r=At(r),!I&&g?"["+r+"]":r}).join(I?".":""):e}function Ar(A){return o.isArray(A)&&!A.some(ee)}var er=o.toFlatObject(o,{},null,function(e){return/^is[A-Z]/.test(e)});function tr(A,e,I){if(!o.isObject(A))throw new TypeError("target must be an object");e=e||new(RA||FormData),I=o.toFlatObject(I,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,c){return!o.isUndefined(c[f])});let t=I.metaTokens,r=I.visitor||a,g=I.dots,i=I.indexes,Q=(I.Blob||typeof Blob<"u"&&Blob)&&o.isSpecCompliantForm(e);if(!o.isFunction(r))throw new TypeError("visitor must be a function");function C(E){if(E===null)return"";if(o.isDate(E))return E.toISOString();if(!Q&&o.isBlob(E))throw new u("Blob is not supported. Use a Buffer instead.");return o.isArrayBuffer(E)||o.isTypedArray(E)?Q&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function a(E,f,c){let h=E;if(E&&!c&&typeof E=="object"){if(o.endsWith(f,"{}"))f=t?f:f.slice(0,-2),E=JSON.stringify(E);else if(o.isArray(E)&&Ar(E)||(o.isFileList(E)||o.endsWith(f,"[]"))&&(h=o.toArray(E)))return f=At(f),h.forEach(function(w,H){!(o.isUndefined(w)||w===null)&&e.append(i===!0?$e([f],H,g):i===null?f:f+"[]",C(w))}),!1}return ee(E)?!0:(e.append($e(c,f,g),C(E)),!1)}let n=[],l=Object.assign(er,{defaultVisitor:a,convertValue:C,isVisitable:ee});function s(E,f){if(!o.isUndefined(E)){if(n.indexOf(E)!==-1)throw Error("Circular reference detected in "+f.join("."));n.push(E),o.forEach(E,function(h,D){(!(o.isUndefined(h)||h===null)&&r.call(e,h,o.isString(D)?D.trim():D,f,l))===!0&&s(h,f?f.concat(D):[D])}),n.pop()}}if(!o.isObject(A))throw new TypeError("data must be an object");return s(A),e}var x=tr;function et(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(t){return e[t]})}function tt(A,e){this._pairs=[],A&&x(A,this,e)}var It=tt.prototype;It.append=function(e,I){this._pairs.push([e,I])};It.toString=function(e){let I=e?function(t){return e.call(this,t,et)}:et;return this._pairs.map(function(r){return I(r[0])+"="+I(r[1])},"").join("&")};var UA=tt;function Ir(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function gA(A,e,I){if(!e)return A;let t=I&&I.encode||Ir;o.isFunction(I)&&(I={serialize:I});let r=I&&I.serialize,g;if(r?g=r(e,I):g=o.isURLSearchParams(e)?e.toString():new UA(e,I).toString(t),g){let i=A.indexOf("#");i!==-1&&(A=A.slice(0,i)),A+=(A.indexOf("?")===-1?"?":"&")+g}return A}var te=class{constructor(){this.handlers=[]}use(e,I,t){return this.handlers.push({fulfilled:e,rejected:I,synchronous:t?t.synchronous:!1,runWhen:t?t.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){o.forEach(this.handlers,function(t){t!==null&&e(t)})}},Ie=te;var NA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var rt=typeof URLSearchParams<"u"?URLSearchParams:UA;var gt=typeof FormData<"u"?FormData:null;var it=typeof Blob<"u"?Blob:null;var ot={isBrowser:!0,classes:{URLSearchParams:rt,FormData:gt,Blob:it},protocols:["http","https","file","blob","url","data"]};var ie={};zt(ie,{hasBrowserEnv:()=>ge,hasStandardBrowserEnv:()=>rr,hasStandardBrowserWebWorkerEnv:()=>gr,navigator:()=>re,origin:()=>ir});var ge=typeof window<"u"&&typeof document<"u",re=typeof navigator=="object"&&navigator||void 0,rr=ge&&(!re||["ReactNative","NativeScript","NS"].indexOf(re.product)<0),gr=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",ir=ge&&window.location.href||"http://localhost";var p={...ie,...ot};function oe(A,e){return x(A,new p.classes.URLSearchParams,Object.assign({visitor:function(I,t,r,g){return p.isNode&&o.isBuffer(I)?(this.append(t,I.toString("base64")),!1):g.defaultVisitor.apply(this,arguments)}},e))}function or(A){return o.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function ar(A){let e={},I=Object.keys(A),t,r=I.length,g;for(t=0;t<r;t++)g=I[t],e[g]=A[g];return e}function nr(A){function e(I,t,r,g){let i=I[g++];if(i==="__proto__")return!0;let B=Number.isFinite(+i),Q=g>=I.length;return i=!i&&o.isArray(r)?r.length:i,Q?(o.hasOwnProp(r,i)?r[i]=[r[i],t]:r[i]=t,!B):((!r[i]||!o.isObject(r[i]))&&(r[i]=[]),e(I,t,r[i],g)&&o.isArray(r[i])&&(r[i]=ar(r[i])),!B)}if(o.isFormData(A)&&o.isFunction(A.entries)){let I={};return o.forEachEntry(A,(t,r)=>{e(or(t),r,I,0)}),I}return null}var kA=nr;function sr(A,e,I){if(o.isString(A))try{return(e||JSON.parse)(A),o.trim(A)}catch(t){if(t.name!=="SyntaxError")throw t}return(I||JSON.stringify)(A)}var ae={transitional:NA,adapter:["xhr","http","fetch"],transformRequest:[function(e,I){let t=I.getContentType()||"",r=t.indexOf("application/json")>-1,g=o.isObject(e);if(g&&o.isHTMLForm(e)&&(e=new FormData(e)),o.isFormData(e))return r?JSON.stringify(kA(e)):e;if(o.isArrayBuffer(e)||o.isBuffer(e)||o.isStream(e)||o.isFile(e)||o.isBlob(e)||o.isReadableStream(e))return e;if(o.isArrayBufferView(e))return e.buffer;if(o.isURLSearchParams(e))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let B;if(g){if(t.indexOf("application/x-www-form-urlencoded")>-1)return oe(e,this.formSerializer).toString();if((B=o.isFileList(e))||t.indexOf("multipart/form-data")>-1){let Q=this.env&&this.env.FormData;return x(B?{"files[]":e}:e,Q&&new Q,this.formSerializer)}}return g||r?(I.setContentType("application/json",!1),sr(e)):e}],transformResponse:[function(e){let I=this.transitional||ae.transitional,t=I&&I.forcedJSONParsing,r=this.responseType==="json";if(o.isResponse(e)||o.isReadableStream(e))return e;if(e&&o.isString(e)&&(t&&!this.responseType||r)){let i=!(I&&I.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(B){if(i)throw B.name==="SyntaxError"?u.from(B,u.ERR_BAD_RESPONSE,this,null,this.response):B}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:p.classes.FormData,Blob:p.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};o.forEach(["delete","get","head","post","put","patch"],A=>{ae.headers[A]={}});var V=ae;var Br=o.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),at=A=>{let e={},I,t,r;return A&&A.split(`
`).forEach(function(i){r=i.indexOf(":"),I=i.substring(0,r).trim().toLowerCase(),t=i.substring(r+1).trim(),!(!I||e[I]&&Br[I])&&(I==="set-cookie"?e[I]?e[I].push(t):e[I]=[t]:e[I]=e[I]?e[I]+", "+t:t)}),e};var nt=Symbol("internals");function iA(A){return A&&String(A).trim().toLowerCase()}function GA(A){return A===!1||A==null?A:o.isArray(A)?A.map(GA):String(A)}function Cr(A){let e=Object.create(null),I=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,t;for(;t=I.exec(A);)e[t[1]]=t[2];return e}var Qr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function ne(A,e,I,t,r){if(o.isFunction(t))return t.call(this,e,I);if(r&&(e=I),!!o.isString(e)){if(o.isString(t))return e.indexOf(t)!==-1;if(o.isRegExp(t))return t.test(e)}}function Er(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,I,t)=>I.toUpperCase()+t)}function cr(A,e){let I=o.toCamelCase(" "+e);["get","set","has"].forEach(t=>{Object.defineProperty(A,t+I,{value:function(r,g,i){return this[t].call(this,e,r,g,i)},configurable:!0})})}var X=class{constructor(e){e&&this.set(e)}set(e,I,t){let r=this;function g(B,Q,C){let a=iA(Q);if(!a)throw new Error("header name must be a non-empty string");let n=o.findKey(r,a);(!n||r[n]===void 0||C===!0||C===void 0&&r[n]!==!1)&&(r[n||Q]=GA(B))}let i=(B,Q)=>o.forEach(B,(C,a)=>g(C,a,Q));if(o.isPlainObject(e)||e instanceof this.constructor)i(e,I);else if(o.isString(e)&&(e=e.trim())&&!Qr(e))i(at(e),I);else if(o.isHeaders(e))for(let[B,Q]of e.entries())g(Q,B,t);else e!=null&&g(I,e,t);return this}get(e,I){if(e=iA(e),e){let t=o.findKey(this,e);if(t){let r=this[t];if(!I)return r;if(I===!0)return Cr(r);if(o.isFunction(I))return I.call(this,r,t);if(o.isRegExp(I))return I.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,I){if(e=iA(e),e){let t=o.findKey(this,e);return!!(t&&this[t]!==void 0&&(!I||ne(this,this[t],t,I)))}return!1}delete(e,I){let t=this,r=!1;function g(i){if(i=iA(i),i){let B=o.findKey(t,i);B&&(!I||ne(t,t[B],B,I))&&(delete t[B],r=!0)}}return o.isArray(e)?e.forEach(g):g(e),r}clear(e){let I=Object.keys(this),t=I.length,r=!1;for(;t--;){let g=I[t];(!e||ne(this,this[g],g,e,!0))&&(delete this[g],r=!0)}return r}normalize(e){let I=this,t={};return o.forEach(this,(r,g)=>{let i=o.findKey(t,g);if(i){I[i]=GA(r),delete I[g];return}let B=e?Er(g):String(g).trim();B!==g&&delete I[g],I[B]=GA(r),t[B]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let I=Object.create(null);return o.forEach(this,(t,r)=>{t!=null&&t!==!1&&(I[r]=e&&o.isArray(t)?t.join(", "):t)}),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,I])=>e+": "+I).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...I){let t=new this(e);return I.forEach(r=>t.set(r)),t}static accessor(e){let t=(this[nt]=this[nt]={accessors:{}}).accessors,r=this.prototype;function g(i){let B=iA(i);t[B]||(cr(r,i),t[B]=!0)}return o.isArray(e)?e.forEach(g):g(e),this}};X.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);o.reduceDescriptors(X.prototype,({value:A},e)=>{let I=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(t){this[I]=t}}});o.freezeMethods(X);var F=X;function oA(A,e){let I=this||V,t=e||I,r=F.from(t.headers),g=t.data;return o.forEach(A,function(B){g=B.call(I,g,r.normalize(),e?e.status:void 0)}),r.normalize(),g}function aA(A){return!!(A&&A.__CANCEL__)}function st(A,e,I){u.call(this,A??"canceled",u.ERR_CANCELED,e,I),this.name="CanceledError"}o.inherits(st,u,{__CANCEL__:!0});var M=st;function nA(A,e,I){let t=I.config.validateStatus;!I.status||!t||t(I.status)?A(I):e(new u("Request failed with status code "+I.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(I.status/100)-4],I.config,I.request,I))}function se(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function lr(A,e){A=A||10;let I=new Array(A),t=new Array(A),r=0,g=0,i;return e=e!==void 0?e:1e3,function(Q){let C=Date.now(),a=t[g];i||(i=C),I[r]=Q,t[r]=C;let n=g,l=0;for(;n!==r;)l+=I[n++],n=n%A;if(r=(r+1)%A,r===g&&(g=(g+1)%A),C-i<e)return;let s=a&&C-a;return s?Math.round(l*1e3/s):void 0}}var Bt=lr;function fr(A,e){let I=0,t=1e3/e,r,g,i=(C,a=Date.now())=>{I=a,r=null,g&&(clearTimeout(g),g=null),A.apply(null,C)};return[(...C)=>{let a=Date.now(),n=a-I;n>=t?i(C,a):(r=C,g||(g=setTimeout(()=>{g=null,i(r)},t-n)))},()=>r&&i(r)]}var Ct=fr;var z=(A,e,I=3)=>{let t=0,r=Bt(50,250);return Ct(g=>{let i=g.loaded,B=g.lengthComputable?g.total:void 0,Q=i-t,C=r(Q),a=i<=B;t=i;let n={loaded:i,total:B,progress:B?i/B:void 0,bytes:Q,rate:C||void 0,estimated:C&&B&&a?(B-i)/C:void 0,event:g,lengthComputable:B!=null,[e?"download":"upload"]:!0};A(n)},I)},Be=(A,e)=>{let I=A!=null;return[t=>e[0]({lengthComputable:I,total:A,loaded:t}),e[1]]},Ce=A=>(...e)=>o.asap(()=>A(...e));var Qt=p.hasStandardBrowserEnv?((A,e)=>I=>(I=new URL(I,p.origin),A.protocol===I.protocol&&A.host===I.host&&(e||A.port===I.port)))(new URL(p.origin),p.navigator&&/(msie|trident)/i.test(p.navigator.userAgent)):()=>!0;var Et=p.hasStandardBrowserEnv?{write(A,e,I,t,r,g){let i=[A+"="+encodeURIComponent(e)];o.isNumber(I)&&i.push("expires="+new Date(I).toGMTString()),o.isString(t)&&i.push("path="+t),o.isString(r)&&i.push("domain="+r),g===!0&&i.push("secure"),document.cookie=i.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function Qe(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function Ee(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function sA(A,e,I){let t=!Qe(e);return A&&(t||I==!1)?Ee(A,e):e}var ct=A=>A instanceof F?{...A}:A;function L(A,e){e=e||{};let I={};function t(C,a,n,l){return o.isPlainObject(C)&&o.isPlainObject(a)?o.merge.call({caseless:l},C,a):o.isPlainObject(a)?o.merge({},a):o.isArray(a)?a.slice():a}function r(C,a,n,l){if(o.isUndefined(a)){if(!o.isUndefined(C))return t(void 0,C,n,l)}else return t(C,a,n,l)}function g(C,a){if(!o.isUndefined(a))return t(void 0,a)}function i(C,a){if(o.isUndefined(a)){if(!o.isUndefined(C))return t(void 0,C)}else return t(void 0,a)}function B(C,a,n){if(n in e)return t(C,a);if(n in A)return t(void 0,C)}let Q={url:g,method:g,data:g,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:B,headers:(C,a,n)=>r(ct(C),ct(a),n,!0)};return o.forEach(Object.keys(Object.assign({},A,e)),function(a){let n=Q[a]||r,l=n(A[a],e[a],a);o.isUndefined(l)&&n!==B||(I[a]=l)}),I}var bA=A=>{let e=L({},A),{data:I,withXSRFToken:t,xsrfHeaderName:r,xsrfCookieName:g,headers:i,auth:B}=e;e.headers=i=F.from(i),e.url=gA(sA(e.baseURL,e.url,e.allowAbsoluteUrls),A.params,A.paramsSerializer),B&&i.set("Authorization","Basic "+btoa((B.username||"")+":"+(B.password?unescape(encodeURIComponent(B.password)):"")));let Q;if(o.isFormData(I)){if(p.hasStandardBrowserEnv||p.hasStandardBrowserWebWorkerEnv)i.setContentType(void 0);else if((Q=i.getContentType())!==!1){let[C,...a]=Q?Q.split(";").map(n=>n.trim()).filter(Boolean):[];i.setContentType([C||"multipart/form-data",...a].join("; "))}}if(p.hasStandardBrowserEnv&&(t&&o.isFunction(t)&&(t=t(e)),t||t!==!1&&Qt(e.url))){let C=r&&g&&Et.read(g);C&&i.set(r,C)}return e};var ur=typeof XMLHttpRequest<"u",lt=ur&&function(A){return new Promise(function(I,t){let r=bA(A),g=r.data,i=F.from(r.headers).normalize(),{responseType:B,onUploadProgress:Q,onDownloadProgress:C}=r,a,n,l,s,E;function f(){s&&s(),E&&E(),r.cancelToken&&r.cancelToken.unsubscribe(a),r.signal&&r.signal.removeEventListener("abort",a)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function h(){if(!c)return;let w=F.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),N={data:!B||B==="text"||B==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:w,config:A,request:c};nA(function(O){I(O),f()},function(O){t(O),f()},N),c=null}"onloadend"in c?c.onloadend=h:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(h)},c.onabort=function(){c&&(t(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){t(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let H=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",N=r.transitional||NA;r.timeoutErrorMessage&&(H=r.timeoutErrorMessage),t(new u(H,N.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},g===void 0&&i.setContentType(null),"setRequestHeader"in c&&o.forEach(i.toJSON(),function(H,N){c.setRequestHeader(N,H)}),o.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),B&&B!=="json"&&(c.responseType=r.responseType),C&&([l,E]=z(C,!0),c.addEventListener("progress",l)),Q&&c.upload&&([n,s]=z(Q),c.upload.addEventListener("progress",n),c.upload.addEventListener("loadend",s)),(r.cancelToken||r.signal)&&(a=w=>{c&&(t(!w||w.type?new M(null,A,c):w),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(a),r.signal&&(r.signal.aborted?a():r.signal.addEventListener("abort",a)));let D=se(r.url);if(D&&p.protocols.indexOf(D)===-1){t(new u("Unsupported protocol "+D+":",u.ERR_BAD_REQUEST,A));return}c.send(g||null)})};var dr=(A,e)=>{let{length:I}=A=A?A.filter(Boolean):[];if(e||I){let t=new AbortController,r,g=function(C){if(!r){r=!0,B();let a=C instanceof Error?C:this.reason;t.abort(a instanceof u?a:new M(a instanceof Error?a.message:a))}},i=e&&setTimeout(()=>{i=null,g(new u(`timeout ${e} of ms exceeded`,u.ETIMEDOUT))},e),B=()=>{A&&(i&&clearTimeout(i),i=null,A.forEach(C=>{C.unsubscribe?C.unsubscribe(g):C.removeEventListener("abort",g)}),A=null)};A.forEach(C=>C.addEventListener("abort",g));let{signal:Q}=t;return Q.unsubscribe=()=>o.asap(B),Q}},ft=dr;var yr=function*(A,e){let I=A.byteLength;if(!e||I<e){yield A;return}let t=0,r;for(;t<I;)r=t+e,yield A.slice(t,r),t=r},hr=async function*(A,e){for await(let I of Dr(A))yield*yr(I,e)},Dr=async function*(A){if(A[Symbol.asyncIterator]){yield*A;return}let e=A.getReader();try{for(;;){let{done:I,value:t}=await e.read();if(I)break;yield t}}finally{await e.cancel()}},ce=(A,e,I,t)=>{let r=hr(A,e),g=0,i,B=Q=>{i||(i=!0,t&&t(Q))};return new ReadableStream({async pull(Q){try{let{done:C,value:a}=await r.next();if(C){B(),Q.close();return}let n=a.byteLength;if(I){let l=g+=n;I(l)}Q.enqueue(new Uint8Array(a))}catch(C){throw B(C),C}},cancel(Q){return B(Q),r.return()}},{highWaterMark:2})};var JA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",dt=JA&&typeof ReadableStream=="function",pr=JA&&(typeof TextEncoder=="function"?(A=>e=>A.encode(e))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),yt=(A,...e)=>{try{return!!A(...e)}catch{return!1}},wr=dt&&yt(()=>{let A=!1,e=new Request(p.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!e}),ut=64*1024,le=dt&&yt(()=>o.isReadableStream(new Response("").body)),LA={stream:le&&(A=>A.body)};JA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(e=>{!LA[e]&&(LA[e]=o.isFunction(A[e])?I=>I[e]():(I,t)=>{throw new u(`Response type '${e}' is not supported`,u.ERR_NOT_SUPPORT,t)})})})(new Response);var mr=async A=>{if(A==null)return 0;if(o.isBlob(A))return A.size;if(o.isSpecCompliantForm(A))return(await new Request(p.origin,{method:"POST",body:A}).arrayBuffer()).byteLength;if(o.isArrayBufferView(A)||o.isArrayBuffer(A))return A.byteLength;if(o.isURLSearchParams(A)&&(A=A+""),o.isString(A))return(await pr(A)).byteLength},Sr=async(A,e)=>{let I=o.toFiniteNumber(A.getContentLength());return I??mr(e)},ht=JA&&(async A=>{let{url:e,method:I,data:t,signal:r,cancelToken:g,timeout:i,onDownloadProgress:B,onUploadProgress:Q,responseType:C,headers:a,withCredentials:n="same-origin",fetchOptions:l}=bA(A);C=C?(C+"").toLowerCase():"text";let s=ft([r,g&&g.toAbortSignal()],i),E,f=s&&s.unsubscribe&&(()=>{s.unsubscribe()}),c;try{if(Q&&wr&&I!=="get"&&I!=="head"&&(c=await Sr(a,t))!==0){let N=new Request(e,{method:"POST",body:t,duplex:"half"}),T;if(o.isFormData(t)&&(T=N.headers.get("content-type"))&&a.setContentType(T),N.body){let[O,fA]=Be(c,z(Ce(Q)));t=ce(N.body,ut,O,fA)}}o.isString(n)||(n=n?"include":"omit");let h="credentials"in Request.prototype;E=new Request(e,{...l,signal:s,method:I.toUpperCase(),headers:a.normalize().toJSON(),body:t,duplex:"half",credentials:h?n:void 0});let D=await fetch(E),w=le&&(C==="stream"||C==="response");if(le&&(B||w&&f)){let N={};["status","statusText","headers"].forEach(ke=>{N[ke]=D[ke]});let T=o.toFiniteNumber(D.headers.get("content-length")),[O,fA]=B&&Be(T,z(Ce(B),!0))||[];D=new Response(ce(D.body,ut,O,()=>{fA&&fA(),f&&f()}),N)}C=C||"text";let H=await LA[o.findKey(LA,C)||"text"](D,A);return!w&&f&&f(),await new Promise((N,T)=>{nA(N,T,{data:H,headers:F.from(D.headers),status:D.status,statusText:D.statusText,config:A,request:E})})}catch(h){throw f&&f(),h&&h.name==="TypeError"&&/fetch/i.test(h.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,E),{cause:h.cause||h}):u.from(h,h&&h.code,A,E)}});var fe={http:RA,xhr:lt,fetch:ht};o.forEach(fe,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Dt=A=>`- ${A}`,Fr=A=>o.isFunction(A)||A===null||A===!1,MA={getAdapter:A=>{A=o.isArray(A)?A:[A];let{length:e}=A,I,t,r={};for(let g=0;g<e;g++){I=A[g];let i;if(t=I,!Fr(I)&&(t=fe[(i=String(I)).toLowerCase()],t===void 0))throw new u(`Unknown adapter '${i}'`);if(t)break;r[i||"#"+g]=t}if(!t){let g=Object.entries(r).map(([B,Q])=>`adapter ${B} `+(Q===!1?"is not supported by the environment":"is not available in the build")),i=e?g.length>1?`since :
`+g.map(Dt).join(`
`):" "+Dt(g[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return t},adapters:fe};function ue(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new M(null,A)}function YA(A){return ue(A),A.headers=F.from(A.headers),A.data=oA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),MA.getAdapter(A.adapter||V.adapter)(A).then(function(t){return ue(A),t.data=oA.call(A,A.transformResponse,t),t.headers=F.from(t.headers),t},function(t){return aA(t)||(ue(A),t&&t.response&&(t.response.data=oA.call(A,A.transformResponse,t.response),t.response.headers=F.from(t.response.headers))),Promise.reject(t)})}var HA="1.8.4";var qA={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{qA[A]=function(t){return typeof t===A||"a"+(e<1?"n ":" ")+A}});var pt={};qA.transitional=function(e,I,t){function r(g,i){return"[Axios v"+HA+"] Transitional option '"+g+"'"+i+(t?". "+t:"")}return(g,i,B)=>{if(e===!1)throw new u(r(i," has been removed"+(I?" in "+I:"")),u.ERR_DEPRECATED);return I&&!pt[i]&&(pt[i]=!0,console.warn(r(i," has been deprecated since v"+I+" and will be removed in the near future"))),e?e(g,i,B):!0}};qA.spelling=function(e){return(I,t)=>(console.warn(`${t} is likely a misspelling of ${e}`),!0)};function Rr(A,e,I){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let t=Object.keys(A),r=t.length;for(;r-- >0;){let g=t[r],i=e[g];if(i){let B=A[g],Q=B===void 0||i(B,g,A);if(Q!==!0)throw new u("option "+g+" must be "+Q,u.ERR_BAD_OPTION_VALUE);continue}if(I!==!0)throw new u("Unknown option "+g,u.ERR_BAD_OPTION)}}var BA={assertOptions:Rr,validators:qA};var Y=BA.validators,_=class{constructor(e){this.defaults=e,this.interceptors={request:new Ie,response:new Ie}}async request(e,I){try{return await this._request(e,I)}catch(t){if(t instanceof Error){let r={};Error.captureStackTrace?Error.captureStackTrace(r):r=new Error;let g=r.stack?r.stack.replace(/^.+\n/,""):"";try{t.stack?g&&!String(t.stack).endsWith(g.replace(/^.+\n.+\n/,""))&&(t.stack+=`
`+g):t.stack=g}catch{}}throw t}}_request(e,I){typeof e=="string"?(I=I||{},I.url=e):I=e||{},I=L(this.defaults,I);let{transitional:t,paramsSerializer:r,headers:g}=I;t!==void 0&&BA.assertOptions(t,{silentJSONParsing:Y.transitional(Y.boolean),forcedJSONParsing:Y.transitional(Y.boolean),clarifyTimeoutError:Y.transitional(Y.boolean)},!1),r!=null&&(o.isFunction(r)?I.paramsSerializer={serialize:r}:BA.assertOptions(r,{encode:Y.function,serialize:Y.function},!0)),I.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?I.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:I.allowAbsoluteUrls=!0),BA.assertOptions(I,{baseUrl:Y.spelling("baseURL"),withXsrfToken:Y.spelling("withXSRFToken")},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase();let i=g&&o.merge(g.common,g[I.method]);g&&o.forEach(["delete","get","head","post","put","patch","common"],E=>{delete g[E]}),I.headers=F.concat(i,g);let B=[],Q=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(I)===!1||(Q=Q&&f.synchronous,B.unshift(f.fulfilled,f.rejected))});let C=[];this.interceptors.response.forEach(function(f){C.push(f.fulfilled,f.rejected)});let a,n=0,l;if(!Q){let E=[YA.bind(this),void 0];for(E.unshift.apply(E,B),E.push.apply(E,C),l=E.length,a=Promise.resolve(I);n<l;)a=a.then(E[n++],E[n++]);return a}l=B.length;let s=I;for(n=0;n<l;){let E=B[n++],f=B[n++];try{s=E(s)}catch(c){f.call(this,c);break}}try{a=YA.call(this,s)}catch(E){return Promise.reject(E)}for(n=0,l=C.length;n<l;)a=a.then(C[n++],C[n++]);return a}getUri(e){e=L(this.defaults,e);let I=sA(e.baseURL,e.url,e.allowAbsoluteUrls);return gA(I,e.params,e.paramsSerializer)}};o.forEach(["delete","get","head","options"],function(e){_.prototype[e]=function(I,t){return this.request(L(t||{},{method:e,url:I,data:(t||{}).data}))}});o.forEach(["post","put","patch"],function(e){function I(t){return function(g,i,B){return this.request(L(B||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:g,data:i}))}}_.prototype[e]=I(),_.prototype[e+"Form"]=I(!0)});var CA=_;var de=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let I;this.promise=new Promise(function(g){I=g});let t=this;this.promise.then(r=>{if(!t._listeners)return;let g=t._listeners.length;for(;g-- >0;)t._listeners[g](r);t._listeners=null}),this.promise.then=r=>{let g,i=new Promise(B=>{t.subscribe(B),g=B}).then(r);return i.cancel=function(){t.unsubscribe(g)},i},e(function(g,i,B){t.reason||(t.reason=new M(g,i,B),I(t.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let I=this._listeners.indexOf(e);I!==-1&&this._listeners.splice(I,1)}toAbortSignal(){let e=new AbortController,I=t=>{e.abort(t)};return this.subscribe(I),e.signal.unsubscribe=()=>this.unsubscribe(I),e.signal}static source(){let e;return{token:new A(function(r){e=r}),cancel:e}}},wt=de;function ye(A){return function(I){return A.apply(null,I)}}function he(A){return o.isObject(A)&&A.isAxiosError===!0}var De={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(De).forEach(([A,e])=>{De[e]=A});var mt=De;function St(A){let e=new CA(A),I=tA(CA.prototype.request,e);return o.extend(I,CA.prototype,e,{allOwnKeys:!0}),o.extend(I,e,null,{allOwnKeys:!0}),I.create=function(r){return St(L(A,r))},I}var m=St(V);m.Axios=CA;m.CanceledError=M;m.CancelToken=wt;m.isCancel=aA;m.VERSION=HA;m.toFormData=x;m.AxiosError=u;m.Cancel=m.CanceledError;m.all=function(e){return Promise.all(e)};m.spread=ye;m.isAxiosError=he;m.mergeConfig=L;m.AxiosHeaders=F;m.formToJSON=A=>kA(o.isHTMLForm(A)?new FormData(A):A);m.getAdapter=MA.getAdapter;m.HttpStatusCode=mt;m.default=m;var $=m;var{Axios:Ja,AxiosError:Ma,CanceledError:Ya,isCancel:Ha,CancelToken:qa,VERSION:Ta,all:xa,Cancel:Ka,isAxiosError:Oa,spread:Pa,toFormData:Wa,AxiosHeaders:ja,HttpStatusCode:va,formToJSON:Za,getAdapter:Va,mergeConfig:Xa}=$;async function Ur(A,e){let I=A,t=null;if(I==null)t=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(I.startsWith("http")){let r=await $.get(I,{responseType:"blob",params:e}),g=URL.createObjectURL(r.data);t=new Worker(g,{type:"module"})}else t=new Worker(I,{type:"module"});return t}var QA=Ur;function Ft(A){let e=zA(A),I=A;return I.terminated=!1,I.workerProxy=e,I.originalTerminate=I.terminate,I.terminate=()=>{I.terminated=!0,I.workerProxy[XA](),I.originalTerminate()},{workerProxy:e,worker:I}}async function Nr(A,e,I){let t;if(A!=null){let g=A;return g.workerProxy!==void 0?(t=g.workerProxy,{workerProxy:t,worker:g}):Ft(A)}let r=await QA(e,I);return Ft(r)}var Rt=Nr;var EA,q,we,pe={env:{emscripten_notify_memory_growth:function(A){we=new Uint8Array(q.exports.memory.buffer)}}},TA=class{init(){return EA||(typeof fetch<"u"?EA=fetch("data:application/wasm;base64,"+Ut).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,pe)).then(this._init):EA=WebAssembly.instantiate(Buffer.from(Ut,"base64"),pe).then(this._init),EA)}_init(e){q=e.instance,pe.env.emscripten_notify_memory_growth(0)}decode(e,I=0){if(!q)throw new Error("ZSTDDecoder: Await .init() before decoding.");let t=e.byteLength,r=q.exports.malloc(t);we.set(e,r),I=I||Number(q.exports.ZSTD_findDecompressedSize(r,t));let g=q.exports.malloc(I),i=q.exports.ZSTD_decompress(g,I,r,t),B=we.slice(g,g+i);return q.exports.free(r),q.exports.free(g),B}},Ut="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var Nt=new TA,kt=!1;async function kr(A,e,I){let t="unknown";typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=typeof e<"u"?`${e}/${A}`:A,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5)),t.endsWith(".wasm.zst")&&(t=t.substring(0,t.length-9));let r=`${t}.wasm`,g=await $.get(`${r}.zst`,{responseType:"arraybuffer",params:I});kt||(await Nt.init(),kt=!0);let B=Nt.decode(new Uint8Array(g.data)).buffer;return(await import(`${t}.js`)).default({wasmBinary:B})}var Gt=kr;var bt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var Mt=typeof globalThis.SharedArrayBuffer=="function",Lt=new TextEncoder,Jt=new TextDecoder("utf-8");function Gr(A,e){let I={flags:"r",encoding:"binary"},t=A.fs_open(e,I.flags),g=A.fs_stat(e).size,i=null;Mt?i=new SharedArrayBuffer(g):i=new ArrayBuffer(g);let B=new Uint8Array(i);return A.fs_read(t,B,0,g,0),A.fs_close(t),B}function Yt(A,e,I){let t=null;Mt?t=new SharedArrayBuffer(I):t=new ArrayBuffer(I);let r=new Uint8Array(t),g=new Uint8Array(A.HEAPU8.buffer,e,I);return r.set(g),r}function S(A,e,I,t){let r=0;return e!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,I,t,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),r)),r}function K(A,e,I){let t=JSON.stringify(e),r=A.lengthBytesUTF8(t)+1,g=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,I,r]);A.stringToUTF8(t,g,r)}function U(A,e,I,t){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,I]),g=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,I]),i=Yt(A,r,g);return J(t,i.buffer)}function cA(A,e){let I=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),t=A.UTF8ToString(I);return JSON.parse(t)}function br(A,e,I,t){t!=null&&t.length>0&&t.forEach(function(C,a){switch(C.type){case y.TextStream:{let n=Lt.encode(C.data.data),l=S(A,n,a,0),s={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${l}`};K(A,s,a);break}case y.JsonCompatible:{let n=Lt.encode(JSON.stringify(C.data)),l=S(A,n,a,0),s={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${l}`};K(A,s,a);break}case y.BinaryStream:{let n=C.data.data,l=S(A,n,a,0),s={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${l}`};K(A,s,a);break}case y.TextFile:{A.fs_writeFile(C.data.path,C.data.data);break}case y.BinaryFile:{A.fs_writeFile(C.data.path,C.data.data);break}case y.Image:{let n=C.data,l=S(A,n.data,a,0),s=S(A,n.direction,a,1),E=typeof n.metadata?.entries<"u"?Array.from(n.metadata.entries()):[],f={imageType:n.imageType,name:n.name,origin:n.origin,spacing:n.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:n.size,data:`data:application/vnd.itk.address,0:${l}`,metadata:E};K(A,f,a);break}case y.Mesh:{let n=C.data,l=S(A,n.points,a,0),s=S(A,n.cells,a,1),E=S(A,n.pointData,a,2),f=S(A,n.cellData,a,3),c={meshType:n.meshType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${l}`,numberOfCells:n.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:n.cellBufferSize,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${f}`};K(A,c,a);break}case y.PointSet:{let n=C.data,l=S(A,n.points,a,0),s=S(A,n.pointData,a,1),E={pointSetType:n.pointSetType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${l}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};K(A,E,a);break}case y.TransformList:{let n=C.data,l=[];n.forEach((s,E)=>{let c=`data:application/vnd.itk.address,0:${S(A,s.fixedParameters,a,E*2)}`,D=`data:application/vnd.itk.address,0:${S(A,s.parameters,a,E*2+1)}`,w={transformType:s.transformType,numberOfFixedParameters:s.numberOfFixedParameters,numberOfParameters:s.numberOfParameters,name:s.name,inputSpaceName:s.inputSpaceName,outputSpaceName:s.outputSpaceName,parameters:D,fixedParameters:c};l.push(w)}),K(A,l,a);break}case y.PolyData:{let n=C.data,l=S(A,n.points,a,0),s=S(A,n.vertices,a,1),E=S(A,n.lines,a,2),f=S(A,n.polygons,a,3),c=S(A,n.triangleStrips,a,4),h=S(A,n.pointData,a,5),D=S(A,n.pointData,a,6),w={polyDataType:n.polyDataType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${l}`,verticesBufferSize:n.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:n.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:n.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${f}`,triangleStripsBufferSize:n.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${h}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${D}`};K(A,w,a);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),g=0;try{g=A.callMain(e.slice())}catch(C){throw typeof C=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(C)):console.error("Build module in Debug mode for exception message information.")),C}finally{A.stackRestore(r)}let i=A.getModuleStdout(),B=A.getModuleStderr(),Q=[];return I!=null&&I.length>0&&g===0&&I.forEach(function(C,a){let n=null;switch(C.type){case y.TextStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),f=new Uint8Array(A.HEAPU8.buffer,s,E);n={data:Jt.decode(f)};break}case y.JsonCompatible:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),f=new Uint8Array(A.HEAPU8.buffer,s,E);n=JSON.parse(Jt.decode(f));break}case y.BinaryStream:{let s=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);n={data:Yt(A,s,E)};break}case y.TextFile:{n={path:C.data.path,data:A.fs_readFile(C.data.path,{encoding:"utf8"})};break}case y.BinaryFile:{n={path:C.data.path,data:Gr(A,C.data.path)};break}case y.Image:{let s=cA(A,a);s.data=U(A,a,0,s.imageType.componentType),s.direction=U(A,a,1,R.Float64),s.metadata=new Map(s.metadata),n=s;break}case y.Mesh:{let s=cA(A,a);s.numberOfPoints>0?s.points=U(A,a,0,s.meshType.pointComponentType):s.points=J(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=U(A,a,1,s.meshType.cellComponentType):s.cells=J(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=U(A,a,2,s.meshType.pointPixelComponentType):s.pointData=J(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=U(A,a,3,s.meshType.cellPixelComponentType):s.cellData=J(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),n=s;break}case y.PointSet:{let s=cA(A,a);s.numberOfPoints>0?s.points=U(A,a,0,s.pointSetType.pointComponentType):s.points=J(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=U(A,a,1,s.pointSetType.pointPixelComponentType):s.pointData=J(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),n=s;break}case y.TransformList:{let s=cA(A,a);s.forEach((E,f)=>{E.numberOfFixedParameters>0&&(s[f].fixedParameters=U(A,a,f*2,E.transformType.parametersValueType)),E.numberOfFixedParameters>0&&(s[f].parameters=U(A,a,f*2+1,E.transformType.parametersValueType))}),n=s;break}case y.PolyData:{let s=cA(A,a);s.numberOfPoints>0?s.points=U(A,a,0,R.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=U(A,a,1,d.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=U(A,a,2,d.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=U(A,a,3,d.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=U(A,a,4,d.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=U(A,a,5,s.polyDataType.pointPixelComponentType):s.pointData=J(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=U(A,a,6,s.polyDataType.cellPixelComponentType):s.cellData=J(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),n=s;break}default:throw Error("Unsupported output InterfaceType")}let l={type:C.type,data:n};Q.push(l)}),{returnValue:g,stdout:i,stderr:B,outputs:Q}}var Ht=br;var Lr=typeof globalThis.SharedArrayBuffer<"u";function Jr(A,e){if(A==null)return[];let I=[];for(let t=0;t<A.length;t++){let r=Mr(A[t],e);r!==null&&I.push(r)}return I}function Mr(A,e){if(A==null)return null;let I=null;return A.buffer!==void 0?I=A.buffer:A.byteLength!==void 0&&(I=A),Lr&&I instanceof SharedArrayBuffer?null:e?I:I.slice(0)}var qt=Jr;function Yr(A){return[A.data,A.direction]}var Tt=Yr;function Hr(A){return[A.points,A.pointData,A.cells,A.cellData]}var xt=Hr;function qr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var Kt=qr;var Tr;function xA(){return Tr}var xr;function Ot(){return xr}var Kr;function KA(){return Kr}var me=new Map;function Or(){let A=KA();return typeof A>"u"&&(A=null),A}function Pt(){let A=xA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function OA(){let A=Ot();return typeof A>"u"&&(A={}),A}async function Pr(A,e,I){let t=A,r=A;if(typeof A!="string"&&(t=new URL(A.href),r=t.href),me.has(r))return me.get(r);{let g=await Gt(A,e?.toString()??Pt(),I??OA());return me.set(r,g),g}}async function Wr(A,e,I,t,r){if(!await bt()){let c="WebAssembly SIMD support is required -- please update your browser.";throw alert(c),new Error(c)}let g=r?.webWorker??null;if(g===!1){let c=await Pr(A.toString(),r?.pipelineBaseUrl,r?.pipelineQueryParams??OA());return Ht(c,e,I,t)}let i=g,B=r?.pipelineWorkerUrl??Or(),Q=typeof B!="string"&&typeof B?.href<"u"?B.href:B,{workerProxy:C,worker:a}=await Rt(i,Q,r?.pipelineQueryParams??OA());i=a;let n=[];t!=null&&t.length>0&&t.forEach(function(c){if(c.type===y.BinaryStream){let h=c.data.data;n.push(h)}else if(c.type===y.BinaryFile){let h=c.data.data;n.push(h)}else if(c.type===y.Image){let h=c.data;h.data!==null&&n.push(...Tt(h))}else if(c.type===y.Mesh){let h=c.data;n.push(...xt(h))}else if(c.type===y.PolyData){let h=c.data;n.push(...Kt(h))}});let l=r?.pipelineBaseUrl??Pt(),s=typeof l!="string"&&typeof l?.href<"u"?l.href:l,E=t!=null?_A(t,qt(n,r?.noCopy)):null,f=await C.runPipeline(A.toString(),s,e,I,E,r?.pipelineQueryParams??OA());return{returnValue:f.returnValue,stdout:f.stdout,stderr:f.stderr,outputs:f.outputs,webWorker:i}}var lA=Wr;var jr=null;function Wt(){return jr}var Se,vr=`https://cdn.jsdelivr.net/npm/@itk-wasm/compare-images@${WA}/dist/pipelines`;function On(A){Se=A}function PA(){if(typeof Se<"u")return Se;let A=xA();return typeof A<"u"?A:vr}var Fe,Zr=null;function jt(A){Fe=A}function AA(){if(typeof Fe<"u")return Fe;let A=KA();return typeof A<"u"?A:Zr}var eA=null;async function vt(){let A=AA(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;eA=await QA(e)}function Xn(A){eA=A}async function Zt(){if(eA!==null)return eA.terminated&&await vt(),eA;let A=Wt();return A!==null?A:(await vt(),eA)}async function Vr(A,e={baselineImages:[]}){let I=[{type:y.JsonCompatible},{type:y.Image},{type:y.Image}],t=[{type:y.Image,data:A}],r=[];if(r.push("0"),r.push("0"),r.push("1"),r.push("2"),r.push("--memory-io"),typeof e.baselineImages<"u"){if(e.baselineImages.length<1)throw new Error('"baseline-images" option must have a length > 1');r.push("--baseline-images"),await Promise.all(e.baselineImages.map(async f=>{let c=t.length.toString();t.push({type:y.Image,data:f}),r.push(c)}))}typeof e.differenceThreshold<"u"&&r.push("--difference-threshold",e.differenceThreshold.toString()),typeof e.radiusTolerance<"u"&&r.push("--radius-tolerance",e.radiusTolerance.toString()),typeof e.spatialTolerance<"u"&&r.push("--spatial-tolerance",e.spatialTolerance.toString()),typeof e.numberOfPixelsTolerance<"u"&&r.push("--number-of-pixels-tolerance",e.numberOfPixelsTolerance.toString()),typeof e.ignoreBoundaryPixels<"u"&&e.ignoreBoundaryPixels&&r.push("--ignore-boundary-pixels");let C="compare-double-images",{webWorker:a,returnValue:n,stderr:l,outputs:s}=await lA(C,r,I,t,{pipelineBaseUrl:PA(),pipelineWorkerUrl:AA(),webWorker:e?.webWorker??null});if(n!==0)throw new Error(l);return{webWorker:a,metrics:s[0].data,differenceImage:s[1].data,differenceUchar2dImage:s[2].data}}var Re=Vr;async function Xr(A,e){let I=e;if(I.imageType.componentType!==R.Float64){let t;e.imageType.pixelType!==k.Scalar&&e.imageType.pixelType!==k.VariableLengthVector&&(t=k.VariableLengthVector),I=uA(e,{componentType:R.Float64,pixelType:t})}else if(e.imageType.pixelType!==k.Scalar&&e.imageType.pixelType!==k.VariableLengthVector){let t=k.VariableLengthVector;I=uA(e,{pixelType:t})}return I.imageType.pixelType===k.VariableLengthVector&&(I=(await A(I)).magnitudeImage),I}var Ue=Xr;async function zr(A,e={}){let I=[{type:y.Image}],t=[{type:y.Image,data:A}],r=[];r.push("0"),r.push("0"),r.push("--memory-io");let B="vector-magnitude",Q=e?.webWorker;Q===void 0&&(Q=await Zt());let{webWorker:C,returnValue:a,stderr:n,outputs:l}=await lA(B,r,I,t,{pipelineBaseUrl:PA(),pipelineWorkerUrl:AA(),webWorker:Q,noCopy:e?.noCopy});if(a!==0&&n!=="")throw new Error(n);return{webWorker:C,magnitudeImage:l[0]?.data}}var Ne=zr;async function _r(A,e={baselineImages:[]}){async function I(i){let{webWorker:B,magnitudeImage:Q}=await Ne(i);return B?.terminate(),{magnitudeImage:Q}}let t=await Ue(I,A),r=await Promise.all(e.baselineImages.map(async i=>await Ue(I,i))),g={...e};return g.baselineImages=r,Re(t,g)}var $r=_r;var Vt='data:text/javascript;charset=utf-8,var De=Object.defineProperty;var de=(A,t)=>{for(var e in t)De(A,e,{get:t[e],enumerable:!0})};var Et=Symbol("Comlink.proxy"),he=Symbol("Comlink.endpoint"),ye=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),QA=Symbol("Comlink.thrown"),ct=A=>typeof A=="object"&&A!==null||typeof A=="function",me={canHandle:A=>ct(A)&&A[Et],serialize(A){let{port1:t,port2:e}=new MessageChannel;return lA(A,t),[e,[e]]},deserialize(A){return A.start(),Fe(A)}},we={canHandle:A=>ct(A)&&QA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},ft=new Map([["proxy",me],["throw",we]]);function pe(A,t){for(let e of A)if(t===e||e==="*"||e instanceof RegExp&&e.test(t))return!0;return!1}function lA(A,t=globalThis,e=["*"]){t.addEventListener("message",function I(r){if(!r||!r.data)return;if(!pe(e,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:g,type:o,path:C}=Object.assign({path:[]},r.data),E=(r.data.argumentList||[]).map(O),a;try{let s=C.slice(0,-1).reduce((f,B)=>f[B],A),n=C.reduce((f,B)=>f[B],A);switch(o){case"GET":a=n;break;case"SET":s[C.slice(-1)[0]]=O(r.data.value),a=!0;break;case"APPLY":a=n.apply(s,E);break;case"CONSTRUCT":{let f=new n(...E);a=Ge(f)}break;case"ENDPOINT":{let{port1:f,port2:B}=new MessageChannel;lA(A,B),a=MA(f,[f])}break;case"RELEASE":a=void 0;break;default:return}}catch(s){a={value:s,[QA]:0}}Promise.resolve(a).catch(s=>({value:s,[QA]:0})).then(s=>{let[n,f]=fA(s);t.postMessage(Object.assign(Object.assign({},n),{id:g}),f),o==="RELEASE"&&(t.removeEventListener("message",I),lt(t),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(s=>{let[n,f]=fA({value:new TypeError("Unserializable return value"),[QA]:0});t.postMessage(Object.assign(Object.assign({},n),{id:g}),f)})}),t.start&&t.start()}function Se(A){return A.constructor.name==="MessagePort"}function lt(A){Se(A)&&A.close()}function Fe(A,t){return qA(A,[],t)}function aA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ut(A){return P(A,{type:"RELEASE"}).then(()=>{lt(A)})}var EA=new WeakMap,cA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(EA.get(A)||0)-1;EA.set(A,t),t===0&&ut(A)});function Re(A,t){let e=(EA.get(t)||0)+1;EA.set(t,e),cA&&cA.register(A,t,A)}function Ne(A){cA&&cA.unregister(A)}function qA(A,t=[],e=function(){}){let I=!1,r=new Proxy(e,{get(g,o){if(aA(I),o===ye)return()=>{Ne(r),ut(A),I=!0};if(o==="then"){if(t.length===0)return{then:()=>r};let C=P(A,{type:"GET",path:t.map(E=>E.toString())}).then(O);return C.then.bind(C)}return qA(A,[...t,o])},set(g,o,C){aA(I);let[E,a]=fA(C);return P(A,{type:"SET",path:[...t,o].map(s=>s.toString()),value:E},a).then(O)},apply(g,o,C){aA(I);let E=t[t.length-1];if(E===he)return P(A,{type:"ENDPOINT"}).then(O);if(E==="bind")return qA(A,t.slice(0,-1));let[a,s]=Qt(C);return P(A,{type:"APPLY",path:t.map(n=>n.toString()),argumentList:a},s).then(O)},construct(g,o){aA(I);let[C,E]=Qt(o);return P(A,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:C},E).then(O)}});return Re(r,A),r}function Ue(A){return Array.prototype.concat.apply([],A)}function Qt(A){let t=A.map(fA);return[t.map(e=>e[0]),Ue(t.map(e=>e[1]))]}var Dt=new WeakMap;function MA(A,t){return Dt.set(A,t),A}function Ge(A){return Object.assign(A,{[Et]:!0})}function fA(A){for(let[t,e]of ft)if(e.canHandle(A)){let[I,r]=e.serialize(A);return[{type:"HANDLER",name:t,value:I},r]}return[{type:"RAW",value:A},Dt.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return ft.get(A.name).deserialize(A.value);case"RAW":return A.value}}function P(A,t,e){return new Promise(I=>{let r=ke();A.addEventListener("message",function g(o){!o.data||!o.data.id||o.data.id!==r||(A.removeEventListener("message",g),I(o.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},t),e)})}function ke(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function v(A,t){return function(){return A.apply(t,arguments)}}var{toString:Le}=Object.prototype,{getPrototypeOf:TA}=Object,DA=(A=>t=>{let e=Le.call(t);return A[e]||(A[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),t=>DA(t)===A),dA=A=>t=>typeof t===A,{isArray:W}=Array,$=dA("undefined");function be(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&U(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var yt=G("ArrayBuffer");function Je(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&yt(A.buffer),t}var He=dA("string"),U=dA("function"),mt=dA("number"),hA=A=>A!==null&&typeof A=="object",Ye=A=>A===!0||A===!1,uA=A=>{if(DA(A)!=="object")return!1;let t=TA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},qe=G("Date"),Me=G("File"),Ke=G("Blob"),Te=G("FileList"),Oe=A=>hA(A)&&U(A.pipe),xe=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||U(A.append)&&((t=DA(A))==="formdata"||t==="object"&&U(A.toString)&&A.toString()==="[object FormData]"))},Pe=G("URLSearchParams"),[We,je,Ze,Ve]=["ReadableStream","Request","Response","Headers"].map(G),Xe=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function AA(A,t,{allOwnKeys:e=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),W(A))for(I=0,r=A.length;I<r;I++)t.call(null,A[I],I,A);else{let g=e?Object.getOwnPropertyNames(A):Object.keys(A),o=g.length,C;for(I=0;I<o;I++)C=g[I],t.call(null,A[C],C,A)}}function wt(A,t){t=t.toLowerCase();let e=Object.keys(A),I=e.length,r;for(;I-- >0;)if(r=e[I],t===r.toLowerCase())return r;return null}var x=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,pt=A=>!$(A)&&A!==x;function KA(){let{caseless:A}=pt(this)&&this||{},t={},e=(I,r)=>{let g=A&&wt(t,r)||r;uA(t[g])&&uA(I)?t[g]=KA(t[g],I):uA(I)?t[g]=KA({},I):W(I)?t[g]=I.slice():t[g]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&AA(arguments[I],e);return t}var _e=(A,t,e,{allOwnKeys:I}={})=>(AA(t,(r,g)=>{e&&U(r)?A[g]=v(r,e):A[g]=r},{allOwnKeys:I}),A),ze=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),ve=(A,t,e,I)=>{A.prototype=Object.create(t.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),e&&Object.assign(A.prototype,e)},$e=(A,t,e,I)=>{let r,g,o,C={};if(t=t||{},A==null)return t;do{for(r=Object.getOwnPropertyNames(A),g=r.length;g-- >0;)o=r[g],(!I||I(o,A,t))&&!C[o]&&(t[o]=A[o],C[o]=!0);A=e!==!1&&TA(A)}while(A&&(!e||e(A,t))&&A!==Object.prototype);return t},AI=(A,t,e)=>{A=String(A),(e===void 0||e>A.length)&&(e=A.length),e-=t.length;let I=A.indexOf(t,e);return I!==-1&&I===e},tI=A=>{if(!A)return null;if(W(A))return A;let t=A.length;if(!mt(t))return null;let e=new Array(t);for(;t-- >0;)e[t]=A[t];return e},eI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&TA(Uint8Array)),II=(A,t)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let g=r.value;t.call(A,g[0],g[1])}},rI=(A,t)=>{let e,I=[];for(;(e=A.exec(t))!==null;)I.push(e);return I},gI=G("HTMLFormElement"),oI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(e,I,r){return I.toUpperCase()+r}),ht=(({hasOwnProperty:A})=>(t,e)=>A.call(t,e))(Object.prototype),iI=G("RegExp"),St=(A,t)=>{let e=Object.getOwnPropertyDescriptors(A),I={};AA(e,(r,g)=>{let o;(o=t(r,g,A))!==!1&&(I[g]=o||r)}),Object.defineProperties(A,I)},sI=A=>{St(A,(t,e)=>{if(U(A)&&["arguments","caller","callee"].indexOf(e)!==-1)return!1;let I=A[e];if(U(I)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+e+"\'")})}})},nI=(A,t)=>{let e={},I=r=>{r.forEach(g=>{e[g]=!0})};return W(A)?I(A):I(String(A).split(t)),e},CI=()=>{},BI=(A,t)=>A!=null&&Number.isFinite(A=+A)?A:t;function aI(A){return!!(A&&U(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var QI=A=>{let t=new Array(10),e=(I,r)=>{if(hA(I)){if(t.indexOf(I)>=0)return;if(!("toJSON"in I)){t[r]=I;let g=W(I)?[]:{};return AA(I,(o,C)=>{let E=e(o,r+1);!$(E)&&(g[C]=E)}),t[r]=void 0,g}}return I};return e(A,0)},EI=G("AsyncFunction"),cI=A=>A&&(hA(A)||U(A))&&U(A.then)&&U(A.catch),Ft=((A,t)=>A?setImmediate:t?((e,I)=>(x.addEventListener("message",({source:r,data:g})=>{r===x&&g===e&&I.length&&I.shift()()},!1),r=>{I.push(r),x.postMessage(e,"*")}))(`axios@${Math.random()}`,[]):e=>setTimeout(e))(typeof setImmediate=="function",U(x.postMessage)),fI=typeof queueMicrotask<"u"?queueMicrotask.bind(x):typeof process<"u"&&process.nextTick||Ft,i={isArray:W,isArrayBuffer:yt,isBuffer:be,isFormData:xe,isArrayBufferView:Je,isString:He,isNumber:mt,isBoolean:Ye,isObject:hA,isPlainObject:uA,isReadableStream:We,isRequest:je,isResponse:Ze,isHeaders:Ve,isUndefined:$,isDate:qe,isFile:Me,isBlob:Ke,isRegExp:iI,isFunction:U,isStream:Oe,isURLSearchParams:Pe,isTypedArray:eI,isFileList:Te,forEach:AA,merge:KA,extend:_e,trim:Xe,stripBOM:ze,inherits:ve,toFlatObject:$e,kindOf:DA,kindOfTest:G,endsWith:AI,toArray:tI,forEachEntry:II,matchAll:rI,isHTMLForm:gI,hasOwnProperty:ht,hasOwnProp:ht,reduceDescriptors:St,freezeMethods:sI,toObjectSet:nI,toCamelCase:oI,noop:CI,toFiniteNumber:BI,findKey:wt,global:x,isContextDefined:pt,isSpecCompliantForm:aI,toJSONObject:QI,isAsyncFn:EI,isThenable:cI,setImmediate:Ft,asap:fI};function j(A,t,e,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),I&&(this.request=I),r&&(this.response=r,this.status=r.status?r.status:null)}i.inherits(j,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:i.toJSONObject(this.config),code:this.code,status:this.status}}});var Rt=j.prototype,Nt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Nt[A]={value:A}});Object.defineProperties(j,Nt);Object.defineProperty(Rt,"isAxiosError",{value:!0});j.from=(A,t,e,I,r,g)=>{let o=Object.create(Rt);return i.toFlatObject(A,o,function(E){return E!==Error.prototype},C=>C!=="isAxiosError"),j.call(o,A.message,t,e,I,r),o.cause=A,o.name=A.name,g&&Object.assign(o,g),o};var u=j;var yA=null;function OA(A){return i.isPlainObject(A)||i.isArray(A)}function Gt(A){return i.endsWith(A,"[]")?A.slice(0,-2):A}function Ut(A,t,e){return A?A.concat(t).map(function(r,g){return r=Gt(r),!e&&g?"["+r+"]":r}).join(e?".":""):t}function lI(A){return i.isArray(A)&&!A.some(OA)}var uI=i.toFlatObject(i,{},null,function(t){return/^is[A-Z]/.test(t)});function DI(A,t,e){if(!i.isObject(A))throw new TypeError("target must be an object");t=t||new(yA||FormData),e=i.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(l,c){return!i.isUndefined(c[l])});let I=e.metaTokens,r=e.visitor||s,g=e.dots,o=e.indexes,E=(e.Blob||typeof Blob<"u"&&Blob)&&i.isSpecCompliantForm(t);if(!i.isFunction(r))throw new TypeError("visitor must be a function");function a(Q){if(Q===null)return"";if(i.isDate(Q))return Q.toISOString();if(!E&&i.isBlob(Q))throw new u("Blob is not supported. Use a Buffer instead.");return i.isArrayBuffer(Q)||i.isTypedArray(Q)?E&&typeof Blob=="function"?new Blob([Q]):Buffer.from(Q):Q}function s(Q,l,c){let d=Q;if(Q&&!c&&typeof Q=="object"){if(i.endsWith(l,"{}"))l=I?l:l.slice(0,-2),Q=JSON.stringify(Q);else if(i.isArray(Q)&&lI(Q)||(i.isFileList(Q)||i.endsWith(l,"[]"))&&(d=i.toArray(Q)))return l=Gt(l),d.forEach(function(m,H){!(i.isUndefined(m)||m===null)&&t.append(o===!0?Ut([l],H,g):o===null?l:l+"[]",a(m))}),!1}return OA(Q)?!0:(t.append(Ut(c,l,g),a(Q)),!1)}let n=[],f=Object.assign(uI,{defaultVisitor:s,convertValue:a,isVisitable:OA});function B(Q,l){if(!i.isUndefined(Q)){if(n.indexOf(Q)!==-1)throw Error("Circular reference detected in "+l.join("."));n.push(Q),i.forEach(Q,function(d,h){(!(i.isUndefined(d)||d===null)&&r.call(t,d,i.isString(h)?h.trim():h,l,f))===!0&&B(d,l?l.concat(h):[h])}),n.pop()}}if(!i.isObject(A))throw new TypeError("data must be an object");return B(A),t}var M=DI;function kt(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return t[I]})}function Lt(A,t){this._pairs=[],A&&M(A,this,t)}var bt=Lt.prototype;bt.append=function(t,e){this._pairs.push([t,e])};bt.toString=function(t){let e=t?function(I){return t.call(this,I,kt)}:kt;return this._pairs.map(function(r){return e(r[0])+"="+e(r[1])},"").join("&")};var mA=Lt;function dI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function tA(A,t,e){if(!t)return A;let I=e&&e.encode||dI;i.isFunction(e)&&(e={serialize:e});let r=e&&e.serialize,g;if(r?g=r(t,e):g=i.isURLSearchParams(t)?t.toString():new mA(t,e).toString(I),g){let o=A.indexOf("%23");o!==-1&&(A=A.slice(0,o)),A+=(A.indexOf("?")===-1?"?":"&")+g}return A}var xA=class{constructor(){this.handlers=[]}use(t,e,I){return this.handlers.push({fulfilled:t,rejected:e,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){i.forEach(this.handlers,function(I){I!==null&&t(I)})}},PA=xA;var wA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Jt=typeof URLSearchParams<"u"?URLSearchParams:mA;var Ht=typeof FormData<"u"?FormData:null;var Yt=typeof Blob<"u"?Blob:null;var qt={isBrowser:!0,classes:{URLSearchParams:Jt,FormData:Ht,Blob:Yt},protocols:["http","https","file","blob","url","data"]};var ZA={};de(ZA,{hasBrowserEnv:()=>jA,hasStandardBrowserEnv:()=>hI,hasStandardBrowserWebWorkerEnv:()=>yI,navigator:()=>WA,origin:()=>mI});var jA=typeof window<"u"&&typeof document<"u",WA=typeof navigator=="object"&&navigator||void 0,hI=jA&&(!WA||["ReactNative","NativeScript","NS"].indexOf(WA.product)<0),yI=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",mI=jA&&window.location.href||"http://localhost";var y={...ZA,...qt};function VA(A,t){return M(A,new y.classes.URLSearchParams,Object.assign({visitor:function(e,I,r,g){return y.isNode&&i.isBuffer(e)?(this.append(I,e.toString("base64")),!1):g.defaultVisitor.apply(this,arguments)}},t))}function wI(A){return i.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function pI(A){let t={},e=Object.keys(A),I,r=e.length,g;for(I=0;I<r;I++)g=e[I],t[g]=A[g];return t}function SI(A){function t(e,I,r,g){let o=e[g++];if(o==="__proto__")return!0;let C=Number.isFinite(+o),E=g>=e.length;return o=!o&&i.isArray(r)?r.length:o,E?(i.hasOwnProp(r,o)?r[o]=[r[o],I]:r[o]=I,!C):((!r[o]||!i.isObject(r[o]))&&(r[o]=[]),t(e,I,r[o],g)&&i.isArray(r[o])&&(r[o]=pI(r[o])),!C)}if(i.isFormData(A)&&i.isFunction(A.entries)){let e={};return i.forEachEntry(A,(I,r)=>{t(wI(I),r,e,0)}),e}return null}var pA=SI;function FI(A,t,e){if(i.isString(A))try{return(t||JSON.parse)(A),i.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(e||JSON.stringify)(A)}var XA={transitional:wA,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){let I=e.getContentType()||"",r=I.indexOf("application/json")>-1,g=i.isObject(t);if(g&&i.isHTMLForm(t)&&(t=new FormData(t)),i.isFormData(t))return r?JSON.stringify(pA(t)):t;if(i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)||i.isReadableStream(t))return t;if(i.isArrayBufferView(t))return t.buffer;if(i.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let C;if(g){if(I.indexOf("application/x-www-form-urlencoded")>-1)return VA(t,this.formSerializer).toString();if((C=i.isFileList(t))||I.indexOf("multipart/form-data")>-1){let E=this.env&&this.env.FormData;return M(C?{"files[]":t}:t,E&&new E,this.formSerializer)}}return g||r?(e.setContentType("application/json",!1),FI(t)):t}],transformResponse:[function(t){let e=this.transitional||XA.transitional,I=e&&e.forcedJSONParsing,r=this.responseType==="json";if(i.isResponse(t)||i.isReadableStream(t))return t;if(t&&i.isString(t)&&(I&&!this.responseType||r)){let o=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(C){if(o)throw C.name==="SyntaxError"?u.from(C,u.ERR_BAD_RESPONSE,this,null,this.response):C}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:y.classes.FormData,Blob:y.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};i.forEach(["delete","get","head","post","put","patch"],A=>{XA.headers[A]={}});var Z=XA;var RI=i.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Mt=A=>{let t={},e,I,r;return A&&A.split(`%0A`).forEach(function(o){r=o.indexOf(":"),e=o.substring(0,r).trim().toLowerCase(),I=o.substring(r+1).trim(),!(!e||t[e]&&RI[e])&&(e==="set-cookie"?t[e]?t[e].push(I):t[e]=[I]:t[e]=t[e]?t[e]+", "+I:I)}),t};var Kt=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function SA(A){return A===!1||A==null?A:i.isArray(A)?A.map(SA):String(A)}function NI(A){let t=Object.create(null),e=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=e.exec(A);)t[I[1]]=I[2];return t}var UI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function _A(A,t,e,I,r){if(i.isFunction(I))return I.call(this,t,e);if(r&&(t=e),!!i.isString(t)){if(i.isString(I))return t.indexOf(I)!==-1;if(i.isRegExp(I))return I.test(t)}}function GI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,e,I)=>e.toUpperCase()+I)}function kI(A,t){let e=i.toCamelCase(" "+t);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+e,{value:function(r,g,o){return this[I].call(this,t,r,g,o)},configurable:!0})})}var V=class{constructor(t){t&&this.set(t)}set(t,e,I){let r=this;function g(C,E,a){let s=eA(E);if(!s)throw new Error("header name must be a non-empty string");let n=i.findKey(r,s);(!n||r[n]===void 0||a===!0||a===void 0&&r[n]!==!1)&&(r[n||E]=SA(C))}let o=(C,E)=>i.forEach(C,(a,s)=>g(a,s,E));if(i.isPlainObject(t)||t instanceof this.constructor)o(t,e);else if(i.isString(t)&&(t=t.trim())&&!UI(t))o(Mt(t),e);else if(i.isHeaders(t))for(let[C,E]of t.entries())g(E,C,I);else t!=null&&g(e,t,I);return this}get(t,e){if(t=eA(t),t){let I=i.findKey(this,t);if(I){let r=this[I];if(!e)return r;if(e===!0)return NI(r);if(i.isFunction(e))return e.call(this,r,I);if(i.isRegExp(e))return e.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=eA(t),t){let I=i.findKey(this,t);return!!(I&&this[I]!==void 0&&(!e||_A(this,this[I],I,e)))}return!1}delete(t,e){let I=this,r=!1;function g(o){if(o=eA(o),o){let C=i.findKey(I,o);C&&(!e||_A(I,I[C],C,e))&&(delete I[C],r=!0)}}return i.isArray(t)?t.forEach(g):g(t),r}clear(t){let e=Object.keys(this),I=e.length,r=!1;for(;I--;){let g=e[I];(!t||_A(this,this[g],g,t,!0))&&(delete this[g],r=!0)}return r}normalize(t){let e=this,I={};return i.forEach(this,(r,g)=>{let o=i.findKey(I,g);if(o){e[o]=SA(r),delete e[g];return}let C=t?GI(g):String(g).trim();C!==g&&delete e[g],e[C]=SA(r),I[C]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let e=Object.create(null);return i.forEach(this,(I,r)=>{I!=null&&I!==!1&&(e[r]=t&&i.isArray(I)?I.join(", "):I)}),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,e])=>t+": "+e).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){let I=new this(t);return e.forEach(r=>I.set(r)),I}static accessor(t){let I=(this[Kt]=this[Kt]={accessors:{}}).accessors,r=this.prototype;function g(o){let C=eA(o);I[C]||(kI(r,o),I[C]=!0)}return i.isArray(t)?t.forEach(g):g(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);i.reduceDescriptors(V.prototype,({value:A},t)=>{let e=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(I){this[e]=I}}});i.freezeMethods(V);var S=V;function IA(A,t){let e=this||Z,I=t||e,r=S.from(I.headers),g=I.data;return i.forEach(A,function(C){g=C.call(e,g,r.normalize(),t?t.status:void 0)}),r.normalize(),g}function rA(A){return!!(A&&A.__CANCEL__)}function Tt(A,t,e){u.call(this,A??"canceled",u.ERR_CANCELED,t,e),this.name="CanceledError"}i.inherits(Tt,u,{__CANCEL__:!0});var L=Tt;function gA(A,t,e){let I=e.config.validateStatus;!e.status||!I||I(e.status)?A(e):t(new u("Request failed with status code "+e.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}function zA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function LI(A,t){A=A||10;let e=new Array(A),I=new Array(A),r=0,g=0,o;return t=t!==void 0?t:1e3,function(E){let a=Date.now(),s=I[g];o||(o=a),e[r]=E,I[r]=a;let n=g,f=0;for(;n!==r;)f+=e[n++],n=n%A;if(r=(r+1)%A,r===g&&(g=(g+1)%A),a-o<t)return;let B=s&&a-s;return B?Math.round(f*1e3/B):void 0}}var Ot=LI;function bI(A,t){let e=0,I=1e3/t,r,g,o=(a,s=Date.now())=>{e=s,r=null,g&&(clearTimeout(g),g=null),A.apply(null,a)};return[(...a)=>{let s=Date.now(),n=s-e;n>=I?o(a,s):(r=a,g||(g=setTimeout(()=>{g=null,o(r)},I-n)))},()=>r&&o(r)]}var xt=bI;var X=(A,t,e=3)=>{let I=0,r=Ot(50,250);return xt(g=>{let o=g.loaded,C=g.lengthComputable?g.total:void 0,E=o-I,a=r(E),s=o<=C;I=o;let n={loaded:o,total:C,progress:C?o/C:void 0,bytes:E,rate:a||void 0,estimated:a&&C&&s?(C-o)/a:void 0,event:g,lengthComputable:C!=null,[t?"download":"upload"]:!0};A(n)},e)},vA=(A,t)=>{let e=A!=null;return[I=>t[0]({lengthComputable:e,total:A,loaded:I}),t[1]]},$A=A=>(...t)=>i.asap(()=>A(...t));var Pt=y.hasStandardBrowserEnv?((A,t)=>e=>(e=new URL(e,y.origin),A.protocol===e.protocol&&A.host===e.host&&(t||A.port===e.port)))(new URL(y.origin),y.navigator&&/(msie|trident)/i.test(y.navigator.userAgent)):()=>!0;var Wt=y.hasStandardBrowserEnv?{write(A,t,e,I,r,g){let o=[A+"="+encodeURIComponent(t)];i.isNumber(e)&&o.push("expires="+new Date(e).toGMTString()),i.isString(I)&&o.push("path="+I),i.isString(r)&&o.push("domain="+r),g===!0&&o.push("secure"),document.cookie=o.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function At(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function tt(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function oA(A,t,e){let I=!At(t);return A&&(I||e==!1)?tt(A,t):t}var jt=A=>A instanceof S?{...A}:A;function k(A,t){t=t||{};let e={};function I(a,s,n,f){return i.isPlainObject(a)&&i.isPlainObject(s)?i.merge.call({caseless:f},a,s):i.isPlainObject(s)?i.merge({},s):i.isArray(s)?s.slice():s}function r(a,s,n,f){if(i.isUndefined(s)){if(!i.isUndefined(a))return I(void 0,a,n,f)}else return I(a,s,n,f)}function g(a,s){if(!i.isUndefined(s))return I(void 0,s)}function o(a,s){if(i.isUndefined(s)){if(!i.isUndefined(a))return I(void 0,a)}else return I(void 0,s)}function C(a,s,n){if(n in t)return I(a,s);if(n in A)return I(void 0,a)}let E={url:g,method:g,data:g,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,withXSRFToken:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:C,headers:(a,s,n)=>r(jt(a),jt(s),n,!0)};return i.forEach(Object.keys(Object.assign({},A,t)),function(s){let n=E[s]||r,f=n(A[s],t[s],s);i.isUndefined(f)&&n!==C||(e[s]=f)}),e}var FA=A=>{let t=k({},A),{data:e,withXSRFToken:I,xsrfHeaderName:r,xsrfCookieName:g,headers:o,auth:C}=t;t.headers=o=S.from(o),t.url=tA(oA(t.baseURL,t.url,t.allowAbsoluteUrls),A.params,A.paramsSerializer),C&&o.set("Authorization","Basic "+btoa((C.username||"")+":"+(C.password?unescape(encodeURIComponent(C.password)):"")));let E;if(i.isFormData(e)){if(y.hasStandardBrowserEnv||y.hasStandardBrowserWebWorkerEnv)o.setContentType(void 0);else if((E=o.getContentType())!==!1){let[a,...s]=E?E.split(";").map(n=>n.trim()).filter(Boolean):[];o.setContentType([a||"multipart/form-data",...s].join("; "))}}if(y.hasStandardBrowserEnv&&(I&&i.isFunction(I)&&(I=I(t)),I||I!==!1&&Pt(t.url))){let a=r&&g&&Wt.read(g);a&&o.set(r,a)}return t};var JI=typeof XMLHttpRequest<"u",Zt=JI&&function(A){return new Promise(function(e,I){let r=FA(A),g=r.data,o=S.from(r.headers).normalize(),{responseType:C,onUploadProgress:E,onDownloadProgress:a}=r,s,n,f,B,Q;function l(){B&&B(),Q&&Q(),r.cancelToken&&r.cancelToken.unsubscribe(s),r.signal&&r.signal.removeEventListener("abort",s)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function d(){if(!c)return;let m=S.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),R={data:!C||C==="text"||C==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:m,config:A,request:c};gA(function(T){e(T),l()},function(T){I(T),l()},R),c=null}"onloadend"in c?c.onloadend=d:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(d)},c.onabort=function(){c&&(I(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){I(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let H=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",R=r.transitional||wA;r.timeoutErrorMessage&&(H=r.timeoutErrorMessage),I(new u(H,R.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},g===void 0&&o.setContentType(null),"setRequestHeader"in c&&i.forEach(o.toJSON(),function(H,R){c.setRequestHeader(R,H)}),i.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),C&&C!=="json"&&(c.responseType=r.responseType),a&&([f,Q]=X(a,!0),c.addEventListener("progress",f)),E&&c.upload&&([n,B]=X(E),c.upload.addEventListener("progress",n),c.upload.addEventListener("loadend",B)),(r.cancelToken||r.signal)&&(s=m=>{c&&(I(!m||m.type?new L(null,A,c):m),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(s),r.signal&&(r.signal.aborted?s():r.signal.addEventListener("abort",s)));let h=zA(r.url);if(h&&y.protocols.indexOf(h)===-1){I(new u("Unsupported protocol "+h+":",u.ERR_BAD_REQUEST,A));return}c.send(g||null)})};var HI=(A,t)=>{let{length:e}=A=A?A.filter(Boolean):[];if(t||e){let I=new AbortController,r,g=function(a){if(!r){r=!0,C();let s=a instanceof Error?a:this.reason;I.abort(s instanceof u?s:new L(s instanceof Error?s.message:s))}},o=t&&setTimeout(()=>{o=null,g(new u(`timeout ${t} of ms exceeded`,u.ETIMEDOUT))},t),C=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(a=>{a.unsubscribe?a.unsubscribe(g):a.removeEventListener("abort",g)}),A=null)};A.forEach(a=>a.addEventListener("abort",g));let{signal:E}=I;return E.unsubscribe=()=>i.asap(C),E}},Vt=HI;var YI=function*(A,t){let e=A.byteLength;if(!t||e<t){yield A;return}let I=0,r;for(;I<e;)r=I+t,yield A.slice(I,r),I=r},qI=async function*(A,t){for await(let e of MI(A))yield*YI(e,t)},MI=async function*(A){if(A[Symbol.asyncIterator]){yield*A;return}let t=A.getReader();try{for(;;){let{done:e,value:I}=await t.read();if(e)break;yield I}}finally{await t.cancel()}},et=(A,t,e,I)=>{let r=qI(A,t),g=0,o,C=E=>{o||(o=!0,I&&I(E))};return new ReadableStream({async pull(E){try{let{done:a,value:s}=await r.next();if(a){C(),E.close();return}let n=s.byteLength;if(e){let f=g+=n;e(f)}E.enqueue(new Uint8Array(s))}catch(a){throw C(a),a}},cancel(E){return C(E),r.return()}},{highWaterMark:2})};var NA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",_t=NA&&typeof ReadableStream=="function",KI=NA&&(typeof TextEncoder=="function"?(A=>t=>A.encode(t))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),zt=(A,...t)=>{try{return!!A(...t)}catch{return!1}},TI=_t&&zt(()=>{let A=!1,t=new Request(y.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!t}),Xt=64*1024,It=_t&&zt(()=>i.isReadableStream(new Response("").body)),RA={stream:It&&(A=>A.body)};NA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!RA[t]&&(RA[t]=i.isFunction(A[t])?e=>e[t]():(e,I)=>{throw new u(`Response type \'${t}\' is not supported`,u.ERR_NOT_SUPPORT,I)})})})(new Response);var OI=async A=>{if(A==null)return 0;if(i.isBlob(A))return A.size;if(i.isSpecCompliantForm(A))return(await new Request(y.origin,{method:"POST",body:A}).arrayBuffer()).byteLength;if(i.isArrayBufferView(A)||i.isArrayBuffer(A))return A.byteLength;if(i.isURLSearchParams(A)&&(A=A+""),i.isString(A))return(await KI(A)).byteLength},xI=async(A,t)=>{let e=i.toFiniteNumber(A.getContentLength());return e??OI(t)},vt=NA&&(async A=>{let{url:t,method:e,data:I,signal:r,cancelToken:g,timeout:o,onDownloadProgress:C,onUploadProgress:E,responseType:a,headers:s,withCredentials:n="same-origin",fetchOptions:f}=FA(A);a=a?(a+"").toLowerCase():"text";let B=Vt([r,g&&g.toAbortSignal()],o),Q,l=B&&B.unsubscribe&&(()=>{B.unsubscribe()}),c;try{if(E&&TI&&e!=="get"&&e!=="head"&&(c=await xI(s,I))!==0){let R=new Request(t,{method:"POST",body:I,duplex:"half"}),q;if(i.isFormData(I)&&(q=R.headers.get("content-type"))&&s.setContentType(q),R.body){let[T,BA]=vA(c,X($A(E)));I=et(R.body,Xt,T,BA)}}i.isString(n)||(n=n?"include":"omit");let d="credentials"in Request.prototype;Q=new Request(t,{...f,signal:B,method:e.toUpperCase(),headers:s.normalize().toJSON(),body:I,duplex:"half",credentials:d?n:void 0});let h=await fetch(Q),m=It&&(a==="stream"||a==="response");if(It&&(C||m&&l)){let R={};["status","statusText","headers"].forEach(at=>{R[at]=h[at]});let q=i.toFiniteNumber(h.headers.get("content-length")),[T,BA]=C&&vA(q,X($A(C),!0))||[];h=new Response(et(h.body,Xt,T,()=>{BA&&BA(),l&&l()}),R)}a=a||"text";let H=await RA[i.findKey(RA,a)||"text"](h,A);return!m&&l&&l(),await new Promise((R,q)=>{gA(R,q,{data:H,headers:S.from(h.headers),status:h.status,statusText:h.statusText,config:A,request:Q})})}catch(d){throw l&&l(),d&&d.name==="TypeError"&&/fetch/i.test(d.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,Q),{cause:d.cause||d}):u.from(d,d&&d.code,A,Q)}});var rt={http:yA,xhr:Zt,fetch:vt};i.forEach(rt,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var $t=A=>`- ${A}`,PI=A=>i.isFunction(A)||A===null||A===!1,UA={getAdapter:A=>{A=i.isArray(A)?A:[A];let{length:t}=A,e,I,r={};for(let g=0;g<t;g++){e=A[g];let o;if(I=e,!PI(e)&&(I=rt[(o=String(e)).toLowerCase()],I===void 0))throw new u(`Unknown adapter \'${o}\'`);if(I)break;r[o||"%23"+g]=I}if(!I){let g=Object.entries(r).map(([C,E])=>`adapter ${C} `+(E===!1?"is not supported by the environment":"is not available in the build")),o=t?g.length>1?`since :%0A`+g.map($t).join(`%0A`):" "+$t(g[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+o,"ERR_NOT_SUPPORT")}return I},adapters:rt};function gt(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new L(null,A)}function GA(A){return gt(A),A.headers=S.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),UA.getAdapter(A.adapter||Z.adapter)(A).then(function(I){return gt(A),I.data=IA.call(A,A.transformResponse,I),I.headers=S.from(I.headers),I},function(I){return rA(I)||(gt(A),I&&I.response&&(I.response.data=IA.call(A,A.transformResponse,I.response),I.response.headers=S.from(I.response.headers))),Promise.reject(I)})}var kA="1.8.4";var LA={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{LA[A]=function(I){return typeof I===A||"a"+(t<1?"n ":" ")+A}});var Ae={};LA.transitional=function(t,e,I){function r(g,o){return"[Axios v"+kA+"] Transitional option \'"+g+"\'"+o+(I?". "+I:"")}return(g,o,C)=>{if(t===!1)throw new u(r(o," has been removed"+(e?" in "+e:"")),u.ERR_DEPRECATED);return e&&!Ae[o]&&(Ae[o]=!0,console.warn(r(o," has been deprecated since v"+e+" and will be removed in the near future"))),t?t(g,o,C):!0}};LA.spelling=function(t){return(e,I)=>(console.warn(`${I} is likely a misspelling of ${t}`),!0)};function WI(A,t,e){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let g=I[r],o=t[g];if(o){let C=A[g],E=C===void 0||o(C,g,A);if(E!==!0)throw new u("option "+g+" must be "+E,u.ERR_BAD_OPTION_VALUE);continue}if(e!==!0)throw new u("Unknown option "+g,u.ERR_BAD_OPTION)}}var iA={assertOptions:WI,validators:LA};var b=iA.validators,_=class{constructor(t){this.defaults=t,this.interceptors={request:new PA,response:new PA}}async request(t,e){try{return await this._request(t,e)}catch(I){if(I instanceof Error){let r={};Error.captureStackTrace?Error.captureStackTrace(r):r=new Error;let g=r.stack?r.stack.replace(/^.+\\n/,""):"";try{I.stack?g&&!String(I.stack).endsWith(g.replace(/^.+\\n.+\\n/,""))&&(I.stack+=`%0A`+g):I.stack=g}catch{}}throw I}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=k(this.defaults,e);let{transitional:I,paramsSerializer:r,headers:g}=e;I!==void 0&&iA.assertOptions(I,{silentJSONParsing:b.transitional(b.boolean),forcedJSONParsing:b.transitional(b.boolean),clarifyTimeoutError:b.transitional(b.boolean)},!1),r!=null&&(i.isFunction(r)?e.paramsSerializer={serialize:r}:iA.assertOptions(r,{encode:b.function,serialize:b.function},!0)),e.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?e.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:e.allowAbsoluteUrls=!0),iA.assertOptions(e,{baseUrl:b.spelling("baseURL"),withXsrfToken:b.spelling("withXSRFToken")},!0),e.method=(e.method||this.defaults.method||"get").toLowerCase();let o=g&&i.merge(g.common,g[e.method]);g&&i.forEach(["delete","get","head","post","put","patch","common"],Q=>{delete g[Q]}),e.headers=S.concat(o,g);let C=[],E=!0;this.interceptors.request.forEach(function(l){typeof l.runWhen=="function"&&l.runWhen(e)===!1||(E=E&&l.synchronous,C.unshift(l.fulfilled,l.rejected))});let a=[];this.interceptors.response.forEach(function(l){a.push(l.fulfilled,l.rejected)});let s,n=0,f;if(!E){let Q=[GA.bind(this),void 0];for(Q.unshift.apply(Q,C),Q.push.apply(Q,a),f=Q.length,s=Promise.resolve(e);n<f;)s=s.then(Q[n++],Q[n++]);return s}f=C.length;let B=e;for(n=0;n<f;){let Q=C[n++],l=C[n++];try{B=Q(B)}catch(c){l.call(this,c);break}}try{s=GA.call(this,B)}catch(Q){return Promise.reject(Q)}for(n=0,f=a.length;n<f;)s=s.then(a[n++],a[n++]);return s}getUri(t){t=k(this.defaults,t);let e=oA(t.baseURL,t.url,t.allowAbsoluteUrls);return tA(e,t.params,t.paramsSerializer)}};i.forEach(["delete","get","head","options"],function(t){_.prototype[t]=function(e,I){return this.request(k(I||{},{method:t,url:e,data:(I||{}).data}))}});i.forEach(["post","put","patch"],function(t){function e(I){return function(g,o,C){return this.request(k(C||{},{method:t,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:o}))}}_.prototype[t]=e(),_.prototype[t+"Form"]=e(!0)});var sA=_;var ot=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let e;this.promise=new Promise(function(g){e=g});let I=this;this.promise.then(r=>{if(!I._listeners)return;let g=I._listeners.length;for(;g-- >0;)I._listeners[g](r);I._listeners=null}),this.promise.then=r=>{let g,o=new Promise(C=>{I.subscribe(C),g=C}).then(r);return o.cancel=function(){I.unsubscribe(g)},o},t(function(g,o,C){I.reason||(I.reason=new L(g,o,C),e(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let e=this._listeners.indexOf(t);e!==-1&&this._listeners.splice(e,1)}toAbortSignal(){let t=new AbortController,e=I=>{t.abort(I)};return this.subscribe(e),t.signal.unsubscribe=()=>this.unsubscribe(e),t.signal}static source(){let t;return{token:new A(function(r){t=r}),cancel:t}}},te=ot;function it(A){return function(e){return A.apply(null,e)}}function st(A){return i.isObject(A)&&A.isAxiosError===!0}var nt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(nt).forEach(([A,t])=>{nt[t]=A});var ee=nt;function Ie(A){let t=new sA(A),e=v(sA.prototype.request,t);return i.extend(e,sA.prototype,t,{allOwnKeys:!0}),i.extend(e,t,null,{allOwnKeys:!0}),e.create=function(r){return Ie(k(A,r))},e}var w=Ie(Z);w.Axios=sA;w.CanceledError=L;w.CancelToken=te;w.isCancel=rA;w.VERSION=kA;w.toFormData=M;w.AxiosError=u;w.Cancel=w.CanceledError;w.all=function(t){return Promise.all(t)};w.spread=it;w.isAxiosError=st;w.mergeConfig=k;w.AxiosHeaders=S;w.formToJSON=A=>pA(i.isHTMLForm(A)?new FormData(A):A);w.getAdapter=UA.getAdapter;w.HttpStatusCode=ee;w.default=w;var bA=w;var{Axios:Bi,AxiosError:ai,CanceledError:Qi,isCancel:Ei,CancelToken:ci,VERSION:fi,all:li,Cancel:ui,isAxiosError:Di,spread:di,toFormData:hi,AxiosHeaders:yi,HttpStatusCode:mi,formToJSON:wi,getAdapter:pi,mergeConfig:Si}=bA;var nA,Y,Bt,Ct={env:{emscripten_notify_memory_growth:function(A){Bt=new Uint8Array(Y.exports.memory.buffer)}}},JA=class{init(){return nA||(typeof fetch<"u"?nA=fetch("data:application/wasm;base64,"+re).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,Ct)).then(this._init):nA=WebAssembly.instantiate(Buffer.from(re,"base64"),Ct).then(this._init),nA)}_init(t){Y=t.instance,Ct.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=t.byteLength,r=Y.exports.malloc(I);Bt.set(t,r),e=e||Number(Y.exports.ZSTD_findDecompressedSize(r,I));let g=Y.exports.malloc(e),o=Y.exports.ZSTD_decompress(g,e,r,I),C=Bt.slice(g,g+o);return Y.exports.free(r),Y.exports.free(g),C}},re="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkECdCICaigCACEDIAIgB2ooAgAhAiAAQQA6AAsgAEIANwIAIAAgAjYCDCAAIAM6AAogAEEAOwEIIAEgADYCAEEBIQ8MAwsgASAJNgIAQQAhDwwCCyAKRQRAQWwhDwwCC0EAIQ8gC0UgDEEZSHINAUEIIAR0QQhqIQBBACEDA0AgACADTQ0CIANBQGshAwwACwALQWwhDyARIBFB/ABqIBFB+ABqIAUgBhAMIgNBiH9LDQAgESgCeCICIARLDQAgESgCfEEBaiEJIABBCGohC0GAgAIgAnRBEHUhBUEBIRBBASACdCIPQQFrIgohEgNAIAkgDkcEQAJAIBEgDkEBdCIEai8BACIMQf//A0YEQCALIBJBA3RqIA42AgQgEkEBayESQQEhDAwBCyAQQQAgBSAMwUobIRALIAQgDWogDDsBACAOQQFqIQ4MAQsLIAAgAjYCBCAAIBA2AgACQCAKIBJGBEAgDUHqAGohBkEAIRBBACEMA0AgCSAQRgRAIA9BA3YgD0EBdmpBA2oiBUEBdCEEQQAhDEEAIRIDQEEAIQ4gDyASTQ0EA0AgDkECRwRAIAsgBSAObCAMaiAKcUEDdGogBiAOIBJqai0AADYCBCAOQQFqIQ4MAQsLIBJBAmohEiAEIAxqIApxIQwMAAsABSARIBBBAXRqLgEAIQUgBiAMaiIEIBM3AABBCCEOA0AgBSAOSgRAIAQgDmogEzcAACAOQQhqIQ4MAQsLIBNCgYKEiJCgwIABfCETIBBBAWohECAFIAxqIQwMAQsACwALIA9BA3YgD0EBdmpBA2ohBUEAIRBBACEOA0AgCSAQRg0BQQAhDCARIBBBAXRqLgEAIgRBACAEQQBKGyEEA0AgBCAMRwRAIAsgDkEDdGogEDYCBANAIAUgDmogCnEiDiASSw0ACyAMQQFqIQwMAQsLIBBBAWohEAwACwALIAJBAWohBUEAIQwDQCAMIA9HBEAgDSALIAxBA3RqIgkoAgQiBEEBdGoiAiACLwEAIgZBAWo7AQAgCSAFIAZnQWBzaiICOgADIAkgBiACdCAPazsBACAJIAggBEECdCICaigCADoAAiAJIAIgB2ooAgA2AgQgDEEBaiEMDAELCyABIAA2AgAgAyEPCyARQYABaiQAIA8L7VoCO38GfiMAQeABayIEJAACQEGw7AkQBSIFRQRAQUAhBwwBCyAFQgA3AvTqASAFQQA2AsTrASAFQQA2ArTrASAFQgA3ApzrASAFQQA2ArjpASAFQQA2AqzsCSAFQgA3AtTrASAFQgA3AqzrASAFQgA3A4jrASAFQgA3AuTqASAFQgA3AuTrASAFQYGAgMAANgK86wEgBUIANwKk6wEgBUH86gFqQQA2AgAgBUGQ6wFqQgA3AwAgBRAYIAVBrNUBaiEUIAVB+OsBaiEcIAVBsOoBaiEiIAVBoDBqISogBUGYIGohKyAFQajQAGohHiAFQRBqISwgBUEIaiEoIAVBBGohLSAFQcDpAWohKSAFQYjrAWogBEGUAWohLyAEQYwBaiEwIARBhAFqITEgBEHcAGohMiAEQdQAaiEzIARBzABqITQgACEdAkACQAJAAkACQANAQQFBBSAFKALk6gEbIQYCQANAIAMgBkkNASACKAAAQXBxQdDUtMIBRgRAQbh/IQcgA0EISQ0IIAIoAAQiDkF3SwRAQXIhBwwJCyADIA5BCGoiCUkNCCAOQYB/SwRAIAkhBwwJCyADIAlrIQMgAiAJaiECDAELCyAFQgA3AqzpASAFQgA3A+jpASAFQQA2ApjrASAFQgA3A4DqASAFQgM3A/jpASAFQbTpAWpCADcCACAFQfDpAWpCADcDACAFQajQAGoiCUGMgIDgADYCACAFQazQAWpB4BIpAgA3AgAgBUG00AFqQegSKAIANgIAIAUgBUEQajYCACAFIAVBoDBqNgIEIAUgBUGYIGo2AgggBSAJNgIMIAVBAUEFIAUoAuTqARs2ArzpAQJAIAFFDQAgBSgCrOkBIgkgHUYNACAFIAk2ArjpASAFIB02AqzpASAFKAKw6QEhDiAFIB02ArDpASAFIB0gDiAJa2o2ArTpAQtBuH8hCSADQQVBCSAFKALk6gEiBhtJDQUgAkEBQQUgBhsgBhAaIg5BiH9LBEAgDiEJDAULIAMgDkEDakkNBSApIAIgDiAGEBkiBkGIf0sEQCAGIQkMBQsgBg0FAkACQCAFKAKo6wFBAUcNACAFKAKk6wEiCUUNACAFKAKU6wFFDQAgCSgCBEEBayIHIAUoAtzpASIKrUKHla+vmLbem55/fkLJz9my8eW66ieFQheJQs/W077Sx6vZQn5C+fPd8Zn2masWfCI/QiGIID+FQs/W077Sx6vZQn4iP0IdiCA/hUL5893xmfaZqxZ+Ij9CIIggP4WncSEGIAkoAgAhFQNAQQAhCAJAIBUgBkECdGooAgAiCUUNACAJKAIIQQhJDQAgCSgCBCISKAAAQbfIwuF+Rw0AIBIoAAQhCAsgCCAKRwRAIAYgB3FBAWohBiAIDQELCyAJRQ0AIAUQGCAFQX82AqDrASAFIAk2ApTrASAFIAUoAtzpASIINgKY6wEMAQsgBSgC3OkBIQgLAkAgCEUNACAFKAKY6wEgCEYNAEFgIQkMBgsCQCAFKALg6QEEQCAFIAUoAujqASIJRTYC7OoBIAkNASAFQvnq0NDnyaHk4QA3A6jqASAFQgA3A6DqASAFQs/W077Sx6vZQjcDmOoBIAVC1uuC7ur9ifXgADcDkOoBIAVCADcDiOoBICJBAEEoEAMaDAELIAVBADYC7OoBCyABIB1qISUgBSAFKQPo6QEgDq18NwPo6QEgAyAOayEDIAIgDmohAiAdIQ4DQCACIAMgBEEsahAdIhVBiH9LBEAgFSEJDAYLIANBA2siNSAVSQ0EIAJBA2ohG0FsIQkCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAEKAIsDgMCAQAVCyAVQf//B0sNEyAVQQNJDRIgBSkDyOkBIT8CQAJAIBstAAAiCUEDcSIaQQFrDgMGAQAHCyAFKAKA6gENAEFiIQkMFQsgFUEFSQ0SIBsoAAAhAwJ/AkACQAJAIAlBAnZBA3EiCUECaw4CAQIACyAJQQBHIQcgA0EEdkH/B3EhC0EDIQYgA0EOdkH/B3EMAgtBBCEGIANBBHZB//8AcSELQQEhByADQRJ2DAELIANBBHZB//8PcSILQYCACEsNE0EBIQdBBSEGIAItAAdBCnQgA0EWdnILIgggBmoiCSAVSw0SAkAgC0GBBkkNACAFKAKc6wFFDQBBACEDA0AgA0GDgAFLDQEgA0FAayEDDAALAAsgBiAbaiEPIBpBA0cNBiAFKAIMIgItAAFBCHQhAyAHDQcgA0UNCCAEQfAAaiAPIAgQDSIDQYh/Sw0JIAJBBGohBiALIBxqIhJBA2shCkEAIAIvAQJrQR9xIQcgHCEDA0AgBEHwAGoQD0UgAyAKSXEEQCADIAYgBCgCcCIIIAQoAnQiD3QgB3ZBAnRqIgIvAQA7AAAgAyACLQADaiIDIAYgCCAPIAItAAJqIgh0IAd2QQJ0aiICLwEAOwAAIAQgCCACLQACajYCdCADIAItAANqIQMMAQUgEkECayEIA0AgBEHwAGoQDyEPIAQoAnAhCiAEKAJ0IQIgAyAISyAPckUEQCADIAYgCiACdCAHdkECdGoiCi8BADsAACAEIAIgCi0AAmo2AnQgAyAKLQADaiEDDAELCwNAIAMgCE0EQCADIAYgCiACdCAHdkECdGoiDy8BADsAACADIA8tAANqIQMgAiAPLQACaiECDAELCwJAIAMgEk8NACADIAYgCiACdCAHdkECdGoiAy0AADoAACADLQADQQFGBEAgAiADLQACaiECDAELIAJBH0sNAEEgIAIgAy0AAmoiAiACQSBPGyECC0FsQWwgCyAEKAJ4IAQoAnxHGyACQSBHGyEDDAsLAAsACyAEKAI0IgIgJSAOa0sNCiAORQRAQQAhCSACDQIMDgsgDiAbLQAAIAIQAxogAiEJDAwLIBUgJSAOa0sNCSAODQFBACEJIBVFDQwLQbZ/IQkMEQsgDiAbIBUQAhogFSEJDAoLIBwgGwJ/AkACQAJAIAlBAnZBA3FBAWsOAwEAAgALIAlBA3YhA0EBDAILIBsvAABBBHYhA0ECDAELIBVBBEkNDiACLwADIAItAAVBEHRyIgJBj4CAAUsNDiACQQR2IQNBAwsiAmotAAAgA0EgahADIQkgBSADNgKA6wEgBSAJNgLw6gEgAkEBaiEJDAULIBUCfwJAAkACQCAJQQJ2QQNxQQFrDgMBAAIACyAJQQN2IQNBAQwCCyAbLwAAQQR2IQNBAgwBCyACLwADIAItAAVBEHRyQQR2IQNBAwsiAiADaiIJQSBqSQRAIAkgFUsNDSAcIAIgG2ogAxACIQIgBSADNgKA6wEgBSACNgLw6gEgAiADaiICQgA3ABggAkIANwAQIAJCADcACCACQgA3AAAMBQsgBSADNgKA6wEgBSACIBtqNgLw6gEMBAsgB0UEQCAeIA8gCCAUEBQiAkGIf0sgAiAIT3INDCAcIAsgAiAPaiAIIAJrIB4QFSEDDAMLIAtFIAhFcg0LIAtBCHYiAyAIIAtJBH8gCEEEdCALbgVBDwtBGGwiAkGMCGooAgBsIAJBiAhqKAIAaiIGQQN2IAZqIAJBgAhqKAIAIAJBhAhqKAIAIANsakkEQCMAQRBrIhAkACAeKAIAIQMgFEHwBGpBAEHsABADIQZBVCECAkAgA0H/AXEiDEEMSw0AAkAgFEHcCWogBiAQQQhqIBBBDGogDyAIIBRB3AtqIhcQCyISQYh/Sw0AIBAoAgwiBiAMSw0BIBRBqAVqIQ0gFEGkBWohNiAeQQRqIREgA0GAgIB4cSE3IAZBAWoiEyECIAYhAwNAIAIiB0EBayECIAMiCkEBayEDIBQgCkECdGooAvAERQ0AC0EBIAcgB0EBTRshFkEAIQdBASECA0AgAiAWRwRAIBQgAkECdCIDaigC8AQhGCADIA1qIAc2AgAgAkEBaiECIAcgGGohBwwBCwsgDSAHNgIAQQAhAiAQKAIIIQMDQCACIANHBEAgDSACIBRqQdwJai0AACIYQQJ0aiIZIBkoAgAiGUEBajYCACAUIBlBAXRqIhkgGDoA3QUgGSACOgDcBSACQQFqIQIMAQsLQQAhAyANQQA2AgAgDCAGQX9zaiEGQQEhAgNAIAIgFkcEQCAUIAJBAnRqIg0gAzYCACANKALwBCACIAZqdCADaiEDIAJBAWohAgwBCwsgDCATIAprIgZrQQFqIQogBiEDA0AgAyAKSQRAIBQgA0E0bGohDUEBIQIDQCACIBZHBEAgDSACQQJ0IhhqIBQgGGooAgAgA3Y2AgAgAkEBaiECDAELCyADQQFqIQMMAQsLIBcgFEE0EAIhOCAUQZAMaiE5IBMgDGshOiAUQdwFaiEXQQAhCgNAAkACQCAHIApHBEBBASAMIBMgFyAKQQF0aiICLQABIg1rIgNrIhh0IRkgAi0AACEWIDggDUECdGoiHygCACECIAYgGE0EQCA2QQEgAyA6aiINIA1BAUwbIiBBAnQiJGooAgAhDSA5IBQgA0E0bGpBNBACISEgDUEBdCEmIBEgAkECdGohIyAgQQFNDQIgA0EQdEGAgPwHcSAWckGAgIAIciEgICEgJGooAgAhJEEAIQIDQCACICRGDQMgIyACQQJ0aiAgNgEAIAJBAWohAgwACwALIAIgAiAZaiINIAIgDUsbIQ0gA0EQdEGAgPwHcSAWckGAgIAIciEDA0AgAiANRg0DIBEgAkECdGogAzYBACACQQFqIQIMAAsACyAeIAxBEHQgN3IgDHJBgAJyNgIADAMLIAcgDWshJCAXICZqISZBACENA0AgDSAkRg0BQQEgGCATICYgDUEBdGoiJy0AASICayI7a3QiPCAhIAJBAnRqIiAoAgAiAmohPSADIDtqQRB0QYCA/AdxICctAABBCHRyIBZyQYCAgBByIScDQCAjIAJBAnRqICc2AQAgAkEBaiICID1JDQALICAgICgCACA8ajYCACANQQFqIQ0MAAsACyAfIB8oAgAgGWo2AgAgCkEBaiEKDAALAAsgEiECCyAQQRBqJAAgAkGIf0sgAiAIT3INDCAcIAsgAiAPaiAIIAJrIB4QFiEDDAMLIB4gDyAIIBQQFCICQYh/SyACIAhPcg0LIBwgCyACIA9qIAggAmsgHhAXIQMMAgsgAwRAIBwgCyAPIAggAhAWIQMMAgsgHCALIA8gCCACEBchAwwBCyAcIAsgDyAIIAIQFSEDCyADQYh/Sw0IIAUgCzYCgOsBIAUgHDYC8OoBIAVBATYCgOoBIBpBAkYEQCAFIB42AgwLIAsgHGoiAkIANwAAIAJCADcAGCACQgA3ABAgAkIANwAIIAlBiH9LDQoLIAkgFUYNCCAVIAlrIQYgBSgCnOsBIQoCQCAJIBtqIgMtAAAiD0UEQEEBIQJBACEPQbh/IQkgBkEBRg0BDAsLAn8gA0EBaiAPwCICQQBODQAaIAJBf0YEQCAGQQNIDQsgAy8AAUGA/gFqIQ8gA0EDagwBCyAGQQJIDQogAy0AASAPQQh0ckGAgAJrIQ8gA0ECagshEkG4fyEJIBJBAWoiAiAVIBtqIgdLDQogLCAFIBItAAAiEkEGdkEjQQkgAiAHIAJrQcAQQdARQfASIAUoAoTqASAKIA8gFBAhIglBiH9LDQggKyAoIBJBBHZBA3FBH0EIIAIgCWoiAiAHIAJrQYALQYAMQYAXIAUoAoTqASAFKAKc6wEgDyAUECEiCEGIf0sNCEFsIQkgKiAtIBJBAnZBA3FBNEEJIAIgCGoiAiAHIAJrQYANQeAOQZAZIAUoAoTqASAFKAKc6wEgDyAUECEiB0GIf0sNCiACIAdqIANrIgIhCSACQYh/Sw0KCyAOIA9BAExyDQELQbp/IQkMCAsgJSAOayEJIAYgAmshBiACIANqIQcCQAJAAkAgCkUEQCAPQQlIIAUpA8jpAUKBgIAIVHINAiAoKAIAIgJBCGohEiACKAIEIQpBACEDQQAhAgNAIAMgCnZFBEAgAiASIANBA3RqLQACQRZLaiECIANBAWohAwwBCwsgBUEANgKc6wEgAkEIIAprdEEUTw0BDAMLIAVBADYCnOsBCyAEIAUoAvDqASIDNgLcASAJIA5qIRYgAyAFKAKA6wFqIRcCQCAPRQRAIA4hBwwBCyAFKAK46QEhGiAFKAK06QEhGCAFKAKw6QEhEiAFQQE2AoTqAUEAIQMDQCADQQNHBEAgBCADQQJ0IgJqIAIgBWpBrNABaigCADYCZCADQQFqIQMMAQsLQWwhCSAEQThqIgIgByAGEA1BiH9LDQNBCCAPIA9BCE4bIR8gNCACIAUoAgAQHiAzIAIgBSgCCBAeIDIgAiAFKAIEEB4gDiASayEZQQAhCANAIARBOGoQD0EDRiAIIB9OckUEQCAEKAJQIAQoAkxBA3RqKQIAIkCnIgdBEHYiEUH/AXEhCyAEKAJgIAQoAlxBA3RqKQIAIkGnIgxBEHYiIUH/AXEhECAEKAJYIAQoAlRBA3RqKQIAIkJCIIinIQYgQUIgiCBAQiCIpyEDAkAgQkIQiKciCkH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCPCIKayINIAIgAiANSxsiEyAKajYCPCAGIAQoAjggCnRBACATa3YgAiATayITdGohCiAEQThqEA8aIAIgDU0NASAEIAQoAjwiAiATajYCPCAEKAI4IAJ0QQAgE2t2IApqIQoMAQsgBCACIAQoAjwiDWo2AjwgBCgCOCANdEEAIAprdiAGaiEKIARBOGoQDxoLIAQpAmQhRCAEIAo2AmQgBCBENwJoDAELAkAgAkUEQCADBEAgBCgCZCEKDAMLIAQoAmghCgwBCyAEIAQoAjwiAkEBajYCPAJ/IAYgA0VqIAQoAjggAnRBH3ZqIgJBA0YEQCAEKAJkQQFrDAELIAJBAnQgBGooAmQLIgZFIAZqIQogAkEBRwRAIAQgBCgCaDYCbAsLIAQgBCgCZDYCaCAEIAo2AmQLpyECIEFCgID8B4NQRQRAIAQgBCgCPCIGIBBqNgI8IAQoAjggBnRBACAha3YgAmohAgsgCyAQakEUTwRAIARBOGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCPCIGIAtqNgI8IAQoAjggBnRBACARa3YgA2ohAwsgBEE4ahAPGiAEIAQoAjgiBkEAIAdBGHYiCyAEKAI8aiIQa3YgC0ECdEGgHWooAgBxIAdB//8DcWo2AkwgBCAQIAxBGHYiB2oiCzYCPCAEIAdBAnRBoB1qKAIAIAZBACALa3ZxIAxB//8DcWo2AlwgBEE4ahAPGiAEIEKnIgZBGHYiByAEKAI8aiILNgI8IAQgB0ECdEGgHWooAgAgBCgCOEEAIAtrdnEgBkH//wNxajYCVCAEQfAAaiAIQQxsaiIGIAo2AgggBiACNgIEIAYgAzYCACAIQQFqIQggAyAZaiACaiEZDAELCyAIIB9IDQMgFkEgayEhIA4hBwNAIARBOGoQD0EDRiAIIA9OckUEQCAEKAJQIAQoAkxBA3RqKQIAIkCnIgZBEHYiI0H/AXEhCiAEKAJgIAQoAlxBA3RqKQIAIkGnIg1BEHYiIEH/AXEhEyAEKAJYIAQoAlRBA3RqKQIAIkJCIIinIQMgQUIgiCBAQiCIpyELAkAgQkIQiKciDEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCPCIMayIRIAIgAiARSxsiECAMajYCPCADIAQoAjggDHRBACAQa3YgAiAQayIMdGohECAEQThqEA8aIAIgEU0NASAEIAQoAjwiAiAMajYCPCAEKAI4IAJ0QQAgDGt2IBBqIRAMAQsgBCACIAQoAjwiEGo2AjwgBCgCOCAQdEEAIAxrdiADaiEQIARBOGoQDxoLIAQpAmQhRCAEIBA2AmQgBCBENwJoDAELAkAgAkUEQCALBEAgBCgCZCEQDAMLIAQoAmghEAwBCyAEIAQoAjwiAkEBajYCPAJ/IAMgC0VqIAQoAjggAnRBH3ZqIgJBA0YEQCAEKAJkQQFrDAELIAJBAnQgBGooAmQLIgNFIANqIRAgAkEBRwRAIAQgBCgCaDYCbAsLIAQgBCgCZDYCaCAEIBA2AmQLpyEMIEFCgID8B4NQRQRAIAQgBCgCPCICIBNqNgI8IAQoAjggAnRBACAga3YgDGohDAsgCiATakEUTwRAIARBOGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCPCICIApqNgI8IAQoAjggAnRBACAja3YgC2ohCwsgBEE4ahAPGiAEIAQoAjgiAkEAIAZBGHYiAyAEKAI8aiIKa3YgA0ECdEGgHWooAgBxIAZB//8DcWo2AkwgBCAKIA1BGHYiA2oiBjYCPCAEIANBAnRBoB1qKAIAIAJBACAGa3ZxIA1B//8DcWo2AlwgBEE4ahAPGiAEIEKnIgJBGHYiAyAEKAI8aiIGNgI8IAQgA0ECdEGgHWooAgAgBCgCOEEAIAZrdnEgAkH//wNxajYCVAJAAkACQCAEKALcASIDIARB8ABqIAhBB3FBDGxqIhMoAgAiEWoiIyAXSw0AIAcgEygCBCINIBFqIgpqICFLDQAgCkEgaiAWIAdrTQ0BCyAEIBMoAgg2AhggBCATKQIANwMQIAcgFiAEQRBqIARB3AFqIBcgEiAYIBoQHyEKDAELIAcgEWohAiATKAIIIQYgByADKQAANwAAIAcgAykACDcACAJAIBFBEUkNACAHIAMpABA3ABAgByADKQAYNwAYIBFBEGtBEUgNACADQRBqIQMgB0EgaiERA0AgESADKQAQNwAAIBEgAykAGDcACCARIAMpACA3ABAgESADKQAoNwAYIANBIGohAyARQSBqIhEgAkkNAAsLIAIgBmshAyAEICM2AtwBIAIgEmsgBkkEQCAGIAIgGGtLDQcgGiAaIAMgEmsiA2oiESANak8EQCACIBEgDRAKGgwCCyADIA1qIQ0gAiARQQAgA2sQCiADayECIBIhAwsgBkEQTwRAIAIgAykAADcAACACIAMpAAg3AAggDUERSA0BIAIgDWohBiACQRBqIQIDQCACIAMpABA3AAAgAiADKQAYNwAIIAIgAykAIDcAECACIAMpACg3ABggA0EgaiEDIAJBIGoiAiAGSQ0ACwwBCwJAIAZBB00EQCACIAMtAAA6AAAgAiADLQABOgABIAIgAy0AAjoAAiACIAMtAAM6AAMgAiADIAZBAnQiBkHAHmooAgBqIgMoAAA2AAQgAyAGQeAeaigCAGshAwwBCyACIAMpAAA3AAALIA1BCUkNACACIA1qIREgAkEIaiIGIANBCGoiA2tBD0wEQANAIAYgAykAADcAACADQQhqIQMgBkEIaiIGIBFJDQAMAgsACyAGIAMpAAA3AAAgBiADKQAINwAIIA1BGUgNACACQRhqIQIDQCACIAMpABA3AAAgAiADKQAYNwAIIAIgAykAIDcAECACIAMpACg3ABggA0EgaiEDIAJBIGoiAiARSQ0ACwsgCkGIf0sEQCAKIQkMBgUgEyAQNgIIIBMgDDYCBCATIAs2AgAgCEEBaiEIIAcgCmohByALIBlqIAxqIRkMAgsACwsgCCAPSA0DIAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var ge=new JA,oe=!1;async function jI(A,t,e){let I=null;typeof A!="string"?I=A.href:A.startsWith("http")?I=A:I=`${t}/${A}`,I.endsWith(".js")&&(I=I.substring(0,I.length-3)),I.endsWith(".wasm")&&(I=I.substring(0,I.length-5)),I.endsWith(".wasm.zst")&&(I=I.substring(0,I.length-9));let r=`${I}.wasm`,g=await bA.get(`${r}.zst`,{responseType:"arraybuffer",params:e});oe||(await ge.init(),oe=!0);let C=ge.decode(new Uint8Array(g.data)).buffer;return(await import(`${I}.js`)).default({wasmBinary:C})}var ie=jI;var HA=new Map;async function ZI(A,t,e){let I=A,r=A,g=null;return typeof A!="string"&&(I=new URL(A.href),r=I.href),HA.has(r)?g=await HA.get(r):(HA.set(r,ie(I,t,e)),g=await HA.get(r)),g}var se=ZI;var VI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},D=VI;var XI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},N=XI;var _I={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},z=_I;function zI(A,t){let e=null;switch(A){case N.UInt8:{e=new Uint8Array(t);break}case N.Int8:{e=new Int8Array(t);break}case N.UInt16:{e=new Uint16Array(t);break}case N.Int16:{e=new Int16Array(t);break}case N.UInt32:{e=new Uint32Array(t);break}case N.Int32:{e=new Int32Array(t);break}case N.UInt64:{typeof globalThis.BigUint64Array=="function"?e=new BigUint64Array(t):e=new Uint8Array(t);break}case N.Int64:{typeof globalThis.BigInt64Array=="function"?e=new BigInt64Array(t):e=new Uint8Array(t);break}case z.Float32:{e=new Float32Array(t);break}case z.Float64:{e=new Float64Array(t);break}case"null":{e=null;break}case null:{e=null;break}default:throw new Error("Type is not supported as a TypedArray")}return e}var J=zI;var Be=typeof globalThis.SharedArrayBuffer=="function",ne=new TextEncoder,Ce=new TextDecoder("utf-8");function vI(A,t){let e={flags:"r",encoding:"binary"},I=A.fs_open(t,e.flags),g=A.fs_stat(t).size,o=null;Be?o=new SharedArrayBuffer(g):o=new ArrayBuffer(g);let C=new Uint8Array(o);return A.fs_read(I,C,0,g,0),A.fs_close(I),C}function ae(A,t,e){let I=null;Be?I=new SharedArrayBuffer(e):I=new ArrayBuffer(e);let r=new Uint8Array(I),g=new Uint8Array(A.HEAPU8.buffer,t,e);return r.set(g),r}function p(A,t,e,I){let r=0;return t!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,e,I,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),r)),r}function K(A,t,e){let I=JSON.stringify(t),r=A.lengthBytesUTF8(I)+1,g=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,e,r]);A.stringToUTF8(I,g,r)}function F(A,t,e,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,e]),g=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,e]),o=ae(A,r,g);return J(I,o.buffer)}function CA(A,t){let e=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),I=A.UTF8ToString(e);return JSON.parse(I)}function $I(A,t,e,I){I!=null&&I.length>0&&I.forEach(function(a,s){switch(a.type){case D.TextStream:{let n=ne.encode(a.data.data),f=p(A,n,s,0),B={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};K(A,B,s);break}case D.JsonCompatible:{let n=ne.encode(JSON.stringify(a.data)),f=p(A,n,s,0),B={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};K(A,B,s);break}case D.BinaryStream:{let n=a.data.data,f=p(A,n,s,0),B={size:n.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};K(A,B,s);break}case D.TextFile:{A.fs_writeFile(a.data.path,a.data.data);break}case D.BinaryFile:{A.fs_writeFile(a.data.path,a.data.data);break}case D.Image:{let n=a.data,f=p(A,n.data,s,0),B=p(A,n.direction,s,1),Q=typeof n.metadata?.entries<"u"?Array.from(n.metadata.entries()):[],l={imageType:n.imageType,name:n.name,origin:n.origin,spacing:n.spacing,direction:`data:application/vnd.itk.address,0:${B}`,size:n.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:Q};K(A,l,s);break}case D.Mesh:{let n=a.data,f=p(A,n.points,s,0),B=p(A,n.cells,s,1),Q=p(A,n.pointData,s,2),l=p(A,n.cellData,s,3),c={meshType:n.meshType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:n.numberOfCells,cells:`data:application/vnd.itk.address,0:${B}`,cellBufferSize:n.cellBufferSize,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${Q}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${l}`};K(A,c,s);break}case D.PointSet:{let n=a.data,f=p(A,n.points,s,0),B=p(A,n.pointData,s,1),Q={pointSetType:n.pointSetType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`};K(A,Q,s);break}case D.TransformList:{let n=a.data,f=[];n.forEach((B,Q)=>{let c=`data:application/vnd.itk.address,0:${p(A,B.fixedParameters,s,Q*2)}`,h=`data:application/vnd.itk.address,0:${p(A,B.parameters,s,Q*2+1)}`,m={transformType:B.transformType,numberOfFixedParameters:B.numberOfFixedParameters,numberOfParameters:B.numberOfParameters,name:B.name,inputSpaceName:B.inputSpaceName,outputSpaceName:B.outputSpaceName,parameters:h,fixedParameters:c};f.push(m)}),K(A,f,s);break}case D.PolyData:{let n=a.data,f=p(A,n.points,s,0),B=p(A,n.vertices,s,1),Q=p(A,n.lines,s,2),l=p(A,n.polygons,s,3),c=p(A,n.triangleStrips,s,4),d=p(A,n.pointData,s,5),h=p(A,n.pointData,s,6),m={polyDataType:n.polyDataType,name:n.name,numberOfPoints:n.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:n.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${B}`,linesBufferSize:n.linesBufferSize,lines:`data:application/vnd.itk.address,0:${Q}`,polygonsBufferSize:n.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${l}`,triangleStripsBufferSize:n.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:n.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${d}`,numberOfCellPixels:n.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${h}`};K(A,m,s);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),g=0;try{g=A.callMain(t.slice())}catch(a){throw typeof a=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(a)):console.error("Build module in Debug mode for exception message information.")),a}finally{A.stackRestore(r)}let o=A.getModuleStdout(),C=A.getModuleStderr(),E=[];return e!=null&&e.length>0&&g===0&&e.forEach(function(a,s){let n=null;switch(a.type){case D.TextStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),l=new Uint8Array(A.HEAPU8.buffer,B,Q);n={data:Ce.decode(l)};break}case D.JsonCompatible:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),l=new Uint8Array(A.HEAPU8.buffer,B,Q);n=JSON.parse(Ce.decode(l));break}case D.BinaryStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),Q=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]);n={data:ae(A,B,Q)};break}case D.TextFile:{n={path:a.data.path,data:A.fs_readFile(a.data.path,{encoding:"utf8"})};break}case D.BinaryFile:{n={path:a.data.path,data:vI(A,a.data.path)};break}case D.Image:{let B=CA(A,s);B.data=F(A,s,0,B.imageType.componentType),B.direction=F(A,s,1,z.Float64),B.metadata=new Map(B.metadata),n=B;break}case D.Mesh:{let B=CA(A,s);B.numberOfPoints>0?B.points=F(A,s,0,B.meshType.pointComponentType):B.points=J(B.meshType.pointComponentType,new ArrayBuffer(0)),B.numberOfCells>0?B.cells=F(A,s,1,B.meshType.cellComponentType):B.cells=J(B.meshType.cellComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,s,2,B.meshType.pointPixelComponentType):B.pointData=J(B.meshType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,s,3,B.meshType.cellPixelComponentType):B.cellData=J(B.meshType.cellPixelComponentType,new ArrayBuffer(0)),n=B;break}case D.PointSet:{let B=CA(A,s);B.numberOfPoints>0?B.points=F(A,s,0,B.pointSetType.pointComponentType):B.points=J(B.pointSetType.pointComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,s,1,B.pointSetType.pointPixelComponentType):B.pointData=J(B.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),n=B;break}case D.TransformList:{let B=CA(A,s);B.forEach((Q,l)=>{Q.numberOfFixedParameters>0&&(B[l].fixedParameters=F(A,s,l*2,Q.transformType.parametersValueType)),Q.numberOfFixedParameters>0&&(B[l].parameters=F(A,s,l*2+1,Q.transformType.parametersValueType))}),n=B;break}case D.PolyData:{let B=CA(A,s);B.numberOfPoints>0?B.points=F(A,s,0,z.Float32):B.points=new Float32Array,B.verticesBufferSize>0?B.vertices=F(A,s,1,N.UInt32):B.vertices=new Uint32Array,B.linesBufferSize>0?B.lines=F(A,s,2,N.UInt32):B.lines=new Uint32Array,B.polygonsBufferSize>0?B.polygons=F(A,s,3,N.UInt32):B.polygons=new Uint32Array,B.triangleStripsBufferSize>0?B.triangleStrips=F(A,s,4,N.UInt32):B.triangleStrips=new Uint32Array,B.numberOfPointPixels>0?B.pointData=F(A,s,5,B.polyDataType.pointPixelComponentType):B.pointData=J(B.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,s,6,B.polyDataType.cellPixelComponentType):B.cellData=J(B.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),n=B;break}default:throw Error("Unsupported output InterfaceType")}let f={type:a.type,data:n};E.push(f)}),{returnValue:g,stdout:o,stderr:C,outputs:E}}var Qe=$I;var Ar=typeof globalThis.SharedArrayBuffer<"u";function tr(A,t){if(A==null)return[];let e=[];for(let I=0;I<A.length;I++){let r=er(A[I],t);r!==null&&e.push(r)}return e}function er(A,t){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Ar&&e instanceof SharedArrayBuffer?null:t?e:e.slice(0)}var Ee=tr;function Ir(A){return[A.data,A.direction]}var ce=Ir;function rr(A){return[A.points,A.pointData,A.cells,A.cellData]}var fe=rr;function gr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var le=gr;async function or(A,t,e,I){let r=Qe(A,t,e,I),g=[];return r.outputs.forEach(function(o){if(o.type===D.BinaryStream||o.type===D.BinaryFile){let C=o.data;g.push(C)}else if(o.type===D.Image){let C=o.data;g.push(...ce(C))}else if(o.type===D.Mesh){let C=o.data;g.push(...fe(C))}else if(o.type===D.PolyData){let C=o.data;g.push(...le(C))}}),MA(r,Ee(g,!0))}var ue=or;var ir={runPipeline:async function(A,t,e,I,r,g){let o=await se(A,t,g);return await ue(o,e,I,r)}};lA(ir);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';jt(Vt);export{Re as compareDoubleImages,$r as compareImages,Zt as getDefaultWebWorker,AA as getPipelineWorkerUrl,PA as getPipelinesBaseUrl,Xn as setDefaultWebWorker,jt as setPipelineWorkerUrl,On as setPipelinesBaseUrl,Ne as vectorMagnitude,WA as version};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
